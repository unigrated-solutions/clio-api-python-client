{
  "openapi": "3.0.0",
  "info": {
    "title": "Clio API Documentation",
    "contact": {
      "name": "Clio API Support",
      "email": "api@clio.com"
    },
    "description": "# Developer Support and Feedback\n* Clio takes the availability and stability of our API seriously; please report any **degradations** or **breakages** to Clio's API Support team at [api@clio.com](mailto:api@clio.com).\n* For business and partnership inquiries, contact our API Partnerships team at [api.partnerships@clio.com](mailto:api.partnerships@clio.com).\n* For best practices and tips from the Clio development community, join the conversation in the [Clio Developer Slack Channel](https://join.slack.com/t/clio-public/shared_invite/zt-36i0eqgo1-7POORPtMJpp2N0~_auL2IQ).\n\nA community-driven [Clio Developers Stack Overflow Group](https://stackoverflow.com/questions/tagged/clio-api) also exists where you can connect and ask questions from other Clio API users.\n# Getting Started\n> **Note:** The API is available in four distinct data regions: Australia (au.app.clio.com), Canada (ca.app.clio.com), EU (eu.app.clio.com) and US (app.clio.com).\n>\n> Likewise, the developer portal is available at region-specific links for the [Australia](https://au.developers.clio.com), [Canada](https://ca.developers.clio.com), [EU](https://eu.developers.clio.com), and [US](https://developers.clio.com) regions.\n>\n> This document assumes the US region is being used (app.clio.com). If you're building in one of the other regions, you should adapt the links and examples as necessary.\n\nTo start building on the Clio API, you’ll need a Clio account – you can review our [Developer Handbook](https://docs.developers.clio.com/) and follow the steps to sign up for an account.\n\nOnce you have an account, you can [create a developer application](https://docs.developers.clio.com/api-docs/applications) from the [Developer Portal](https://developers.clio.com) and start building!\n# Authorization with OAuth 2.0\nSee our [Authorization documentation →](https://docs.developers.clio.com/api-docs/authorization)\n# Permissions\nSee our [Permissions documentation →](https://docs.developers.clio.com/api-docs/permissions)\n# Fields\nSee our [Fields documentation →](https://docs.developers.clio.com/api-docs/fields)\n# Rate Limiting\nSee our [Rate Limits documentation →](https://docs.developers.clio.com/api-docs/rate-limits)\n# Paging\nSee our [Pagination documentation →](https://docs.developers.clio.com/api-docs/paging)\n# ETags\nSee our [ETags documentation →](https://docs.developers.clio.com/api-docs/etags)\n# Minor Versions\nAPI v4 supports multiple minor versions. Versions are of the form '4.X.Y'. To request a specific version, you can use an `X-API-VERSION` header in your request, with the header value set to the API version you're requesting. If this header is omitted, it will be treated as a request for the default API version. If the header is present but invalid, it will return a `410 Gone` response. If the header is present and valid, but it is no longer supported, it will return a `410 Gone` response.\n\nAn `X-API-VERSION` will be included in all successful responses, with the value being set to the API version used.\n\nYou can find our [API Versioning Policy and Guidelines](https://docs.developers.clio.com/api-docs/api-versioning-policy) in our documentation hub.\n\nThe [API Changelog](https://docs.developers.clio.com/api-docs/api-changelog) explains each version's changes in further detail.\n- 4.0.4\n\n  Update `quantity` field to return values in seconds rather than hours for Activities\n\n- 4.0.5\n\n  * Remove `matter_balances` field from Bills\n  * Standardize status/state enum values\n  * Add a Document association to completed DocumentAutomations\n  * Add rate visibility handling for Activity's price and total\n\n- 4.0.6\n\n  Remove `document_versions` collection field from Documents\n\n- 4.0.7\n\n  Change secure link format\n\n- 4.0.8\n\n  * `Activity` hours are redacted in the response based on the activity hours visibility setting for the user\n  * Add `quantity_redacted` field to activities\n\n- 4.0.9\n\n  **This is the default version**\n\n  Contacts are filtered and redacted in the response based on the new 'Contacts Visibility' user permission setting.\n\n- 4.0.10\n\n  Fixed validation of `type` query parameter when querying Notes\n\n\n",
    "version": "v4",
    "x-logo": {
      "url": "https://www.clio.com/wp-content/uploads/2015/05/Container-5-Logo.png"
    }
  },
  "servers": [
    {
      "url": "https://app.clio.com/api/v4",
      "description": "US region Production Server"
    },
    {
      "url": "https://eu.app.clio.com/api/v4",
      "description": "Europe region Production Server"
    },
    {
      "url": "https://ca.app.clio.com/api/v4",
      "description": "Canada region Production Server"
    },
    {
      "url": "https://au.app.clio.com/api/v4",
      "description": "Australia region Production Server"
    }
  ],
  "paths": {
    "/activities.json": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Return the data for all Activities",
        "operationId": "Activity#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Activities",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_description_id",
            "in": "query",
            "description": "The unique identifier for a single ActivityDescription. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "calendar_entry_id",
            "in": "query",
            "description": "The unique identifier for a single CalendarEntry. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "communication_id",
            "in": "query",
            "description": "The unique identifier for a single Communication. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contact_note_id",
            "in": "query",
            "description": "The unique identifier for a single Note. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Activity records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter Activity records to those whose `date` is on or before the date provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "expense_category_id",
            "in": "query",
            "description": "The unique identifier for a single ExpenseCategory. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flat_rate",
            "in": "query",
            "description": "Filter Activity TimeEntry records to those that have a flat rate, or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "grant_id",
            "in": "query",
            "description": "The unique identifier for a single Grant. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Activity records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Activity records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "matter_note_id",
            "in": "query",
            "description": "The unique identifier for a single Note. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "only_unaccounted_for",
            "in": "query",
            "description": "Only unaccounted for activities.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Activity records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "display_number(asc)",
                "display_number(desc)",
                "user.name(asc)",
                "user.name(desc)",
                "price(asc)",
                "price(desc)",
                "total(asc)",
                "total(desc)",
                "type(asc)",
                "type(desc)",
                "date(asc)",
                "date(desc)",
                "note(asc)",
                "note(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "vendor.name(asc)",
                "vendor.name(desc)",
                "expense_category.name(asc)",
                "expense_category.name(desc)",
                "non_billable(asc)",
                "non_billable(desc)",
                "non_billable_total(asc)",
                "non_billable_total(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `note` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter Activity records to those whose `date` is on or after the date provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Activity records to those that are draft, billed, unbilled or non-billable.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "billed",
                "draft",
                "unbilled",
                "non_billable",
                "billable",
                "written_off"
              ]
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "description": "The unique identifier for a single Task. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Activity records to those of a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "TimeEntry",
                "ExpenseEntry",
                "HardCostEntry",
                "SoftCostEntry"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Activity records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Activity. The list will be filtered to include only the Activity records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Activity_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activities"
        ],
        "summary": "Create a new Activity",
        "operationId": "Activity#create",
        "description": "Outlines the parameters and data fields used when creating a new Activity",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Activity_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activities",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    },
                    "required": [
                      "type",
                      "date"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/activities/{id}.json": {
      "get": {
        "tags": [
          "Activities"
        ],
        "summary": "Return the data for a single Activity",
        "operationId": "Activity#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Activity",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Activity.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Activity_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Activities"
        ],
        "summary": "Update a single Activity",
        "operationId": "Activity#update",
        "description": "Outlines the parameters and data fields used when updating a single Activity",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Activity.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Activity_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activities",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity_description": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ActivityDescription associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_task_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsTask associated with the Activity. The keyword `null` is not valid for this field."
                          },
                          "utbms_activity_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsActivity associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "calendar_entry": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_portal": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ClientPortal associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "communication": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Communication associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "contact_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the Activity was performed. (Expects an ISO-8601 date)."
                      },
                      "expense_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single ExpenseCategory associated with an Activity.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "matter_note": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Note associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "no_charge": {
                        "type": "boolean",
                        "description": "Whether the non-billable *Activity* will be shown on the bill."
                      },
                      "non_billable": {
                        "type": "boolean",
                        "description": "Whether or not this Activity is prevented from appearing as a line item in a bill.\nOnly valid for non-billed TimeEntries, and with the exception of the Activity having no_charge set to true.\n"
                      },
                      "note": {
                        "type": "string",
                        "description": "A custom note to describe what the Activity is for."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "For an ExpenseEntry, HardCostEntry, and SoftCostEntry, it is the expense amount.\n\n[Support Link for ExpenseEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses)\n\n[Support Link for HardCostEntry and SoftCostEntry](https://help.clio.com/hc/en-us/articles/9289745356571-Expenses#enable-hard-and-soft-cost-expenses-0-0)\n\nFor a TimeEntry, it is the hourly or flat amount. When updating a TimeEntry,\nif the price is not given or the user does not have the permission to view the rate,\nand its activity description, matter and/or user is changed,\nthe price is reset according to the rate defined for the activity description, matter, client or user.\n\n[Support Link for Rates Hierarchy](https://help.clio.com/hc/en-us/articles/9289801180187-Rates-and-Rate-Hierarchies-)\n\n[Support Link for Billing Rate Visibility](https://help.clio.com/hc/en-us/articles/9285360193819-Permissions-and-Billing-Rates#billing-rate-visibility-0-3)\n"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
                      },
                      "reference": {
                        "type": "string",
                        "description": "A check reference for a HardCostEntry."
                      },
                      "start_timer": {
                        "type": "boolean",
                        "description": "Whether or not a timer should be started for this Activity. Only valid for non-FlatRate, non-billed TimeEntries."
                      },
                      "task": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Task associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "tax_setting": {
                        "type": "string",
                        "enum": [
                          "no_tax",
                          "tax_1_only",
                          "tax_2_only",
                          "tax_1_and_tax_2"
                        ],
                        "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
                      },
                      "text_message_conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TextMessageConversation associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "TimeEntry",
                          "ExpenseEntry",
                          "HardCostEntry",
                          "SoftCostEntry"
                        ],
                        "description": "The type of the Activity."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Activity.\nUse the keyword `null` to specify no association.\nOn creation, if no user is specified, it will default to the current user.\n\nIf a TimeEntry is created by a Clio Connect user, the field is not editable.\n"
                          }
                        }
                      },
                      "utbms_expense": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsExpense associated with the Activity. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "vendor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with a HardCostEntry.\nUse the keyword `null` to specify no association.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "summary": "Delete a single Activity",
        "operationId": "Activity#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Activity",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Activity.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activity_rates.json": {
      "get": {
        "tags": [
          "Activity Rates"
        ],
        "summary": "Return the data for all ActivityRates",
        "operationId": "ActivityRate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ActivityRates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "co_counsel_contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityRate records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityRate records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ActivityRate records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ActivityRate records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ActivityRate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ActivityRate records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity Rates"
        ],
        "summary": "Create a new ActivityRate",
        "operationId": "ActivityRate#create",
        "description": "Outlines the parameters and data fields used when creating a new ActivityRate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activity Rates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/activity_rates/{id}.json": {
      "get": {
        "tags": [
          "Activity Rates"
        ],
        "summary": "Return the data for a single ActivityRate",
        "operationId": "ActivityRate#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ActivityRate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityRate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Activity Rates"
        ],
        "summary": "Update a single ActivityRate",
        "operationId": "ActivityRate#update",
        "description": "Outlines the parameters and data fields used when updating a single ActivityRate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityRate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activity Rates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "co_counsel_contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "contact_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Contact associated with the ActivityRate. The keyword `null` is not valid for this field."
                      },
                      "flat_rate": {
                        "type": "boolean",
                        "description": "Whether this is a flat rate"
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Monetary value of this rate. Either hourly value or flat rate value"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Activity Rates"
        ],
        "summary": "Delete a single ActivityRate",
        "operationId": "ActivityRate#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ActivityRate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityRate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/activity_descriptions.json": {
      "get": {
        "tags": [
          "Activity Descriptions"
        ],
        "summary": "Return the data for all ActivityDescriptions",
        "operationId": "ActivityDescription#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ActivityDescriptions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ActivityDescription records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flat_rate",
            "in": "query",
            "description": "Filter ActivityDescription records to those that have a flat rate, or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ActivityDescription records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ActivityDescription records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate_for[matter_id]",
            "in": "query",
            "description": "Matter id for rate calculation.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "rate_for[user_id]",
            "in": "query",
            "description": "User id for rate calculation. If not provided, the user associated to the API request is assumed.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter ActivityDescription records to those of a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "utbms",
                "clio"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ActivityDescription records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the ActivityDescription records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescription_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity Descriptions"
        ],
        "summary": "Create a new ActivityDescription",
        "operationId": "ActivityDescription#create",
        "description": "Outlines the parameters and data fields used when creating a new ActivityDescription",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescription_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activity Descriptions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/activity_descriptions/{id}.json": {
      "get": {
        "tags": [
          "Activity Descriptions"
        ],
        "summary": "Return the data for a single ActivityDescription",
        "operationId": "ActivityDescription#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ActivityDescription",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityDescription.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescription_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Activity Descriptions"
        ],
        "summary": "Update a single ActivityDescription",
        "operationId": "ActivityDescription#update",
        "description": "Outlines the parameters and data fields used when updating a single ActivityDescription",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityDescription.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDescription_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Activity Descriptions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the ActivityDescription."
                      },
                      "default": {
                        "type": "boolean",
                        "description": "Whether or not this should be the API User's default ActivityDescription."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ActivityDescription. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ActivityDescription."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "A detailed description of the ActivityDescription."
                      },
                      "rate": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "non_billable_amount": {
                            "type": "number",
                            "format": "double",
                            "default": 0,
                            "description": "The non billable rate of the ActivityDescription. This is ignored for 'User' rates."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "FlatRate",
                              "Custom"
                            ],
                            "description": "What kind of rate it will be."
                          }
                        }
                      },
                      "visible_to_co_counsel": {
                        "type": "boolean",
                        "description": "Whether or not co counsels on the account can see this ActivityDescription."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Activity Descriptions"
        ],
        "summary": "Delete a single ActivityDescription",
        "operationId": "ActivityDescription#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ActivityDescription",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ActivityDescription.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations.json": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "summary": "Return the data for all Allocations",
        "operationId": "Allocation#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Allocations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bill_id",
            "in": "query",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Allocation records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Allocation records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Allocation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Allocation records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Allocation records by the given field. Default: `date(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "ID of parent (either a Payment or CreditMemo) this allocation belongs to",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parent_type",
            "in": "query",
            "description": "Filter Allocation records based on whether the parent is a CreditMemo or a Payment.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Allocation records to only those that are voided (`\"invalid\"`) or not voided (`\"valid\"`).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "valid",
                "invalid"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Allocation records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Allocation_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{id}.json": {
      "get": {
        "tags": [
          "Allocations"
        ],
        "summary": "Return the data for a single Allocation",
        "operationId": "Allocation#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Allocation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Allocation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Allocation_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/bank_accounts.json": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Return the data for all BankAccounts",
        "operationId": "BankAccount#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BankAccounts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter BankAccount records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter BankAccount records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BankAccount records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the BankAccount records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "institution(asc)",
                "institution(desc)",
                "account_number(asc)",
                "account_number(desc)",
                "transit_number(asc)",
                "transit_number(desc)",
                "currency(asc)",
                "currency(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "type(asc)",
                "type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_empty_accounts",
            "in": "query",
            "description": "Filter BankAccount records to those having a zero or non zero balance.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter BankAccount records to those having a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OperatingAccount",
                "TrustAccount"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter BankAccount records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BankAccount. The list will be filtered to include only the BankAccount records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Create a new BankAccount",
        "operationId": "BankAccount#create",
        "description": "Outlines the parameters and data fields used when creating a new BankAccount",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Bank Accounts",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "currency",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "currency",
                      "type"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "BankAccount balance."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Operating",
                          "Trust"
                        ],
                        "description": "Type of BankAccount."
                      }
                    },
                    "required": [
                      "currency",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/bank_accounts/{id}.json": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Return the data for a single BankAccount",
        "operationId": "BankAccount#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankAccount",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BankAccount.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Update a single BankAccount",
        "operationId": "BankAccount#update",
        "description": "Outlines the parameters and data fields used when updating a single BankAccount",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BankAccount.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Bank Accounts",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "account_number": {
                        "type": "string",
                        "description": "Account number for the BankAccount."
                      },
                      "controlled_account": {
                        "type": "boolean",
                        "description": "Whether is a controlled account."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency the BankAccount is in."
                      },
                      "default_account": {
                        "type": "boolean",
                        "description": "Whether or not the BankAccount should be the default account."
                      },
                      "domicile_branch": {
                        "type": "string",
                        "description": "Branch where the BankAccount was opened."
                      },
                      "general_ledger_number": {
                        "type": "string",
                        "description": "General ledger number used for the Law Society of Alberta."
                      },
                      "holder": {
                        "type": "string",
                        "description": "BankAccount holder."
                      },
                      "institution": {
                        "type": "string",
                        "description": "Financial institution."
                      },
                      "name": {
                        "type": "string",
                        "description": "BankAccount name."
                      },
                      "swift": {
                        "type": "string",
                        "description": "Identification code for the financial institution."
                      },
                      "transit_number": {
                        "type": "string",
                        "description": "Transit number for the BankAccount branch."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Delete a single BankAccount",
        "operationId": "BankAccount#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single BankAccount",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BankAccount.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_transactions.json": {
      "get": {
        "tags": [
          "Bank Transactions"
        ],
        "summary": "Return the data for all BankTransactions",
        "operationId": "BankTransaction#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BankTransactions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_account_id",
            "in": "query",
            "description": "The unique identifier for a single BankAccount. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter BankTransaction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter BankTransaction records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BankTransaction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BankTransaction records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the BankTransaction records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter BankTransaction records to those having a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asset",
                "liability"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter BankTransaction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_transactions/{id}.json": {
      "get": {
        "tags": [
          "Bank Transactions"
        ],
        "summary": "Return the data for a single BankTransaction",
        "operationId": "BankTransaction#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankTransaction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BankTransaction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/bank_transfers/{id}.json": {
      "get": {
        "tags": [
          "Bank Transfers"
        ],
        "summary": "Return the data for a single BankTransfer",
        "operationId": "BankTransfer#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BankTransfer",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BankTransfer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransfer_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/bill_themes.json": {
      "get": {
        "tags": [
          "Bill Themes"
        ],
        "summary": "Return the data for all BillThemes",
        "operationId": "BillTheme#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillThemes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter BillTheme records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter BillTheme records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BillTheme records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter BillTheme records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillTheme_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bill_themes/{id}.json": {
      "patch": {
        "tags": [
          "Bill Themes"
        ],
        "summary": "Update a single BillTheme",
        "operationId": "BillTheme#update",
        "description": "Outlines the parameters and data fields used when updating a single BillTheme",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the BillTheme.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillTheme_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Bill Themes",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "string",
                        "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"vat_number_au\"\n- \"vat_number_eu\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_client_sales_tax_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_non_billable_expenses_title_text\"\n- \"matter_non_billable_grouped_title_text\"\n- \"matter_non_billable_products_title_text\"\n- \"matter_non_billable_services_title_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_detailed_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"statement_of_accounts_detailed_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the BillTheme."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "string",
                        "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"vat_number_au\"\n- \"vat_number_eu\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_client_sales_tax_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_non_billable_expenses_title_text\"\n- \"matter_non_billable_grouped_title_text\"\n- \"matter_non_billable_products_title_text\"\n- \"matter_non_billable_services_title_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_detailed_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"statement_of_accounts_detailed_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the BillTheme."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "string",
                        "description": "A string containing settings for the BillTheme.\nValues set in this string will apply to any bill using this BillTheme, unless overridden by the bill.\n\nAvailable settings within this string:\n- \"show\": Values set under this key determine how/if sections will appear on a bill.\n- \"text\": Values set under this key determine what will display if the section is shown.\n- \"css\": Values set under this key determine CSS rules for sections on a bill.\n\nAvailable settings under \"show\":\n- \"client_account\": Can be set to \"hidden\", \"details\", or \"summary\" to control the display and content of this section.\n- \"client_account_details_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_include_matter_transfers\": Can be set to true/false to toggle displaying this section.\n- \"client_account_matter_date_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_details_description_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_title_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_matter_type_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_only_bill_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_other_matters\": Can be set to true/false to toggle displaying this section.\n- \"client_account_payments_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_receipts_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_account_summary_balance_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"client_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"client_operating_account_omit_balance\": Can be set to true/false to toggle displaying this section.\n- \"clio_payments_amount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_amount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_note_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_reference_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"clio_payments_status_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"draft_watermark\": Can be set to true/false to toggle displaying a draft watermark. Will only affect bills in draft.\n- \"envelope_friendly\": Can be set to true/false to toggle size styling for the bill.\n- \"firm_address\": Can be set to true/false to toggle displaying this section.\n- \"firm_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"firm_title\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_memo\": Can be set to true/false to toggle displaying this section.\n- \"footer_invoice_payable\": Can be set to true/false to toggle displaying this section.\n- \"footer_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"footer_page_numbers\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_issued_date\": Can be set to true/false to toggle displaying this section.\n- \"header_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"header_on_first_page\": Can be set to true/false to toggle displaying this section.\n- \"interest_date\": Can be set to true/false to toggle displaying this section.\n- \"interest_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description\": Can be set to true/false to toggle displaying this section.\n- \"interest_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_details_description_new_line\": Can be set to true/false to toggle displaying a interest descriptions on a new line.\n- \"interest_headings_order\": Should be set to an array that contains the values: [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"] in the order you would like the sections to display on your bills.\n- \"interest_total\": Can be set to true/false to toggle displaying this section.\n- \"interest_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"interest_type\": Can be set to true/false to toggle displaying this section.\n- \"interest_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"interest_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"invoice_information_due_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_invoice_number\": Can be set to true/false to toggle displaying this section.\n- \"invoice_information_issue_date\": Can be set to true/false to toggle displaying this section.\n- \"invoice_title\": Can be set to true/false to toggle displaying this section.\n- \"logo\": Can be set to true/false to toggle displaying this section.\n- \"logo_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_attorney_display\": Can be set to \"name\" or \"initials\" to control the content shown in this section.\n- \"matter_attorney_initials\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_initials_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_initials_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_attorney_summary_position_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_attorney_summary_time_keeper_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_client_ref\": Can be set to true/false to toggle displaying this section.\n- \"matter_date\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_date_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_date_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_details_description_new_line\": Can be set to true/false to toggle displaying a matter descriptions on a new line.\n- \"matter_details_description_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_details_description_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_heading_justification\": Can be set to \"center\", \"left\", or \"right\" to control the justification of this section.\n- \"matter_headings_order\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_expenses\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_products\": Should be set to an array that contains the values: [\"matter_type\", \"matter_attorney_initials\", \"matter_date\", \"matter_details_description\", \"matter_quantity\", \"matter_rate\", \"matter_line_item_discount\", \"matter_total\", \"matter_total_with_tax\", \"matter_tax\"]\nin the order you would like the sections to display on your bills.\n- \"matter_headings_order_trust\": Should be set to an array that contains the values: [\"matter_date\", \"matter_details_description\", \"matter_total\"] in the order you would like the sections to display on your bills.\n- \"matter_individual_payments\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_item_discount_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_line_item_discount_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_line_items_activity_descriptions\": Can be set to true/false to toggle displaying this section.\n- \"matter_number\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_quantity_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_quantity_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_rate_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_rate_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_separate_line_items\": Can be set to true/false to toggle displaying this section.\n- \"matter_show_amount_with_percentage\": Can be set to true/false to toggle displaying this section.\n- \"matter_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_products\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_text_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_trust\": Can be set to true/false to toggle displaying this section.\n- \"matter_total_with_tax_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_total_with_tax_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_totals_subtotal\": Can be set to true/false to toggle displaying this section.\n- \"matter_totals_subtotal_line_item_discount\": Can be set to true/false to toggle displaying this section.\n- \"matter_type\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_expenses\": Can be set to true/false to toggle displaying this section.\n- \"matter_type_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"matter_type_products\": Can be set to true/false to toggle displaying this section.\n- \"payment_profile_discount\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have an early payment discount.\n- \"payment_profile_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a grace period.\n- \"payment_profile_interest\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill does not have a recurring interest charge.\n- \"payment_profile_no_grace_period\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if the bill has a grace period.\n- \"show_clio_payments\": Can be set to true/false to toggle displaying this section.\n- \"soa_title\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_amount_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_amount_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_balance_due_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_details\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_due_on_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_due_on_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_include_trust\": Can be set to true/false to toggle displaying this section.\n- \"statement_of_accounts_invoice_number_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_invoice_number_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_note\": Can be set to true/false to toggle displaying this section. Even if set to true, this section will not be shown if \"statement_of_accounts_summary\" is \"hidden\".\n- \"statement_of_accounts_payments_received_body_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_payments_received_header_alignment\": Can be set to \"center\", \"left\", or \"right\" to control the alignment of this section.\n- \"statement_of_accounts_summary\": Can be set to \"hidden\", \"above\", or \"below\" to control the location of this section. This will determine if the statements of account section on the bill is displayed, and if it displays above or below the line items.\n- \"statement_of_accounts_summary_detail\": Can be set to \"simple\", \"with_payment\", or \"with_account_balance\" to control the values shown in this section.\n- \"statement_of_accounts_summary_only_bill_matters\": Can be set to true/false to control the values shown in this section.\n- \"void_watermark\": Can be set to true/false to toggle displaying a void watermark. Will only affect bills that have been void.\n\n\nAvailable settings under \"text\", each of these can be set to the text you would like to display when they are shown, some of these fields allow substituting values with codes wrapped in curly braces:\n- \"address_email\"\n- \"address_fax\"\n- \"address_phone\"\n- \"vat_number_au\"\n- \"vat_number_eu\"\n- \"attorney_summary_position\"\n- \"attorney_summary_time_keeper\"\n- \"client_account_account\"\n- \"client_account_balance\"\n- \"client_account_payments\"\n- \"client_account_receipts\"\n- \"client_account_total_balance\"\n- \"clio_payments_amount\"\n- \"clio_payments_date\"\n- \"clio_payments_note\"\n- \"clio_payments_reference\"\n- \"clio_payments_status\"\n- \"clio_payments_title\"\n- \"clio_payments_total\"\n- \"discount_early_payment_balance_owing_text\"\n- \"discount_early_payment_end_date_text\"\n- \"discount_early_payment_text\"\n- \"discount_early_payment_total_text\"\n- \"footer_invoice_memo\"\n  - {{billing_setting_memo}}\" can be used to reference your billing settings memo.\n  - {{bill_memo}} can be used to reference your bills memo.\n- \"footer_invoice_payable\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"footer_page\"\n- \"footer_page_of\"\n- \"grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"interest_date_text\"\n- \"interest_details_description_text\"\n- \"interest_subtotal_text\"\n- \"interest_text\"\n- \"interest_title_text\"\n- \"interest_total_text\"\n- \"interest_type_text\"\n- \"invoice_client_sales_tax_text\"\n- \"invoice_due_date_text\"\n- \"invoice_information_due_date_receipt_text\"\n- \"invoice_issued_date_text\"\n- \"invoice_lc\"\n- \"invoice_number_text\"\n- \"invoice_purchase_order_text\"\n- \"invoice_title\"\n- \"matter_attorney_initials_text\"\n- \"matter_balance_owing_text\"\n- \"matter_client_ref\"\n  - {{client_ref_num}}\" can be used to reference the matters client reference.\n- \"matter_credit_note_text\"\n- \"matter_date_text\"\n- \"matter_details_description_text\"\n- \"matter_discount_text\"\n- \"matter_expense_subtotal_text\"\n- \"matter_expense_text\"\n- \"matter_expense_title_text\"\n- \"matter_grand_total_text\"\n  - {{same_as_total_heading}} can be used to reference the value in \"text\" => \"matter_total_text\"\n- \"matter_line_item_discount_expenses_text\"\n- \"matter_line_item_discount_products_text\"client_address_custom\"\n- \"matter_line_item_discount_subtotal_text\"\n- \"matter_line_item_discount_text\"\n- \"matter_non_billable_expenses_title_text\"\n- \"matter_non_billable_grouped_title_text\"\n- \"matter_non_billable_products_title_text\"\n- \"matter_non_billable_services_title_text\"\n- \"matter_payment_text\"\n- \"matter_product_subtotal_text\"\n- \"matter_product_text\"\n- \"matter_product_title_text\"\n- \"matter_quantity_expenses_text\"\n- \"matter_quantity_products_text\"\n- \"matter_quantity_subtotal_text\"\n- \"matter_quantity_text\"\n- \"matter_quantity_total_text\"\n- \"matter_rate_expenses_text\"\n- \"matter_rate_products_text\"\n- \"matter_rate_text\"\n- \"matter_refund_text\"\n- \"matter_service_subtotal_text\"\n- \"matter_service_text\"\n- \"matter_service_title_text\"\n- \"matter_subtotal_text\"\n- \"matter_tax_text\"\n- \"matter_title\"\n- \"matter_total_text\"\n- \"matter_total_with_tax_text\"\n- \"matter_trust_line_items_title_text\"\n- \"matter_trust_text\"\n- \"matter_type_text\"\n- \"payment_profile\"\n- \"payment_profile_discount\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_interest\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"payment_profile_no_grace_period\"\n  - {{discount_rate}} can be used to reference the bills discount rate.\n  - {{interest_rate}} can be used to reference the bills interest rate.\n  - {{interest_type}} can be used to reference the bills interest type.\n  - {{grace_period}} can be used to reference the grace period for the bill.\n  - {{discount_period}} can be used to reference the discount period for the bill.\n  - {{interest_period}} can be used to reference the interest period for the bill.\n- \"remittance_checks\"\n- \"remittance_checks_label\"\n- \"remittance_checks_title\"\n- \"remittance_note\"\n  - {{bill_number}} can be used to reference the bills number.\n- \"remittance_note_soa\"\n- \"remittance_title\"\n- \"remittance_wire_bank_account\"\n- \"remittance_wire_bank_account_label\"\n- \"remittance_wire_bank_name\"\n- \"remittance_wire_bank_name_label\"\n- \"remittance_wire_bank_routing\"\n- \"remittance_wire_bank_routing_label\"\n- \"remittance_wire_bank_swift\"\n- \"remittance_wire_bank_swift_label\"\n- \"remittance_wire_title\"\n- \"soa_title\"\n- \"statement_of_accounts_amount\"\n- \"statement_of_accounts_amount_in_trust\"\n- \"statement_of_accounts_amount_on_account\"\n- \"statement_of_accounts_balance\"\n- \"statement_of_accounts_current_invoice\"\n- \"statement_of_accounts_details_title\"\n- \"statement_of_accounts_due_on\"\n- \"statement_of_accounts_invoice_number\"\n- \"statement_of_accounts_new_charges\"\n- \"statement_of_accounts_note\"\n  - {{firm_name}} can be used to reference your firms name.\n- \"statement_of_accounts_original_invoice_number\"\n- \"statement_of_accounts_other_interest_invoices\"\n- \"statement_of_accounts_other_invoices\"\n- \"statement_of_accounts_outstanding_balance\"\n- \"statement_of_accounts_detailed_outstanding_balance\"\n- \"statement_of_accounts_payments\"\n- \"statement_of_accounts_summary_title\"\n- \"statement_of_accounts_total_balance\"\n- \"statement_of_accounts_total_credit\"\n- \"statement_of_accounts_total_outstanding_balance\"\n- \"statement_of_accounts_detailed_total_outstanding_balance\"\n- \"trust_request_adjustments_title_text\"\n- \"trust_request_lc\"\n- \"trust_request_number_text\"\n- \"trust_request_title\"\n- \"trust_request_total_text\"\n\n\nAvailable settings under \"css\", each of these has nested values that can be set to apply CSS rules to bills:\n- \"client\"\n  - \"color\": Color used in the client section. Value is in 'Hex'.\n  - \"font-family\": Font used in client section.\n  - \"font-size\": Font size in client section. Value is in 'em'.\n- \"client_address\"\n  - \"margin-bottom\": Bottom margin size for the client address. Value is in 'em'.\n- \"firm_title\"\n  - \"margin-bottom\": Bottom margin height for the bills firm title. Value is in 'em'.\n  - \"color\": Color for the bills firm title section. Value is in 'Hex'.\n  - \"font-family\": Font used for text in the firm title.\n  - \"font-size\": Font size for the bills firm title. Value is in 'em'.\n  - \"border-color\": Border color property for the firm title on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the firm title on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for table rows on a bill. Accepts standard CSS options for 'border-width' property.\n  - \"background-color\": Background color for the firm title on a bill. Value is in 'Hex'.\n- \"header\"\n  - \"margin-bottom\": Bottom margin size for the bill header. Value is in 'em'.\n- \"inside_margins\"\n  - \"font-family\": Primary font used on the bill.\n  - \"font-size\": Primary font size used for bill.\n  - \"color\": Primary font used on the bill, default is \"Arial\".\n- \"invoice_title\"\n  - \"color\": Color used in the invoice title section. Value is in 'Hex'.\n  - \"font-family\": Font used in invoice title section.\n  - \"font-size\": Font size in invoice title section. Value is in 'em'.\n- \"logo_img\"\n  - \"height\": Height for the bills logo image. Value is in 'em'.\n  - \"margin-top\": Top margin height for the bills logo image. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin height for the bills logo image. Value is in 'em'.\n- \"matter_description\"\n  - \"margin-top\": Top margin size for matter description section. Value is in 'em'.\n  - \"color\": Color used in the matter description section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter description section.\n  - \"font-size\": Font size in matter description section. Value is in 'em'.\n- \"matter_number\"\n  - \"color\": Color used in the matter number section. Value is in 'Hex'.\n  - \"font-family\": Font used in matter number section.\n  - \"font-size\": Font size in matter number section. Value is in 'em'.\n- \"page_margins\"\n  - \"margin-left\": Left margin size for the bill. Value is in 'em'.\n  - \"margin-right\": Right margin size for the bill. Value is in 'em'.\n  - \"margin-top\": Top margin size for the bill. Value is in 'em'.\n  - \"margin-bottom\": Bottom margin size for the bill. Value is in 'em'.\n  - \"size\": Size property for the bill, default is \"US-Letter\".\n- \"remittance_title\"\n  - \"color\": Color used in the remittance title section. Value is in 'Hex'.\n  - \"font-family\": Font used in remittance title section.\n  - \"font-size\": Font size in remittance title section. Value is in 'em'.\n  - \"background-color\": Background color for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the remittance title section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the remittance title section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the remittance title section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"statement_of_accounts_title\"\n  - \"color\": Color used in the statement of accounts section. Value is in 'Hex'.\n  - \"font-family\": Font used in statement of accounts section.\n  - \"font-size\": Font size in statement of accounts section. Value is in 'em'.\n  - \"background-color\": Background color for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-color\": Border color property for the statement of accounts section on a bill. Value is in 'Hex'.\n  - \"border-style\": Border style property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-width\": Border width property for the statement of accounts section on a bill. Accepts standard CSS options for 'border-width' property.\n- \"table_even_line\"\n  - \"background-color\": Background color for even table rows. Value is in 'Hex'.\n- \"table_h4\"\n  - \"background-color\": Background color for table headers. Value is in 'Hex'.\n- \"table_line\"\n  - \"border-bottom-width\": Bottom border width for table rows. Value is in 'px'.\n  - \"border-bottom-style\": Bottom border style property for table rows on a bill. Accepts standard CSS options for 'border-style' property.\n  - \"border-bottom-color\": Bottom border color property for table rows on a bill. Value is in 'Hex'.\n- \"table_odd_line\"\n  - \"background-color\": Background color for odd table rows. Value is in 'Hex'.\n\n\nA config with samples of each type of option is shown below:\n```\n  config = {\n    \"show\": {\n        \"statement_of_accounts_summary\": \"left\"\n        \"statement_of_accounts_note\": true,\n        \"footer_invoice_payable\": true,\n        \"footer_invoice_memo\": true,\n        \"payment_profile_no_grace_period\": true,\n        \"payment_profile_grace_period\": true,\n        \"payment_profile_discount\": true,\n        \"payment_profile_interest\": true,\n        \"interest_headings_order\": [\"interest_type\",\" interest_date\", \"interest_details_description\", \"interest_total\"]\n      },\n    \"text\": {\n        \"statement_of_accounts_note\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_payable\": \"Please make all amounts payable to: {{firm_name}}\",\n        \"footer_invoice_memo\": \"{{bill_memo}}\",\n        \"payment_profile_no_grace_period\": \"Payment is due upon receipt.\",\n        \"payment_profile_grace_period\": \"Please pay within {{grace_period}}.\",\n        \"payment_profile_discount\": \"{{discount_rate}}% discount will be applied if payment is received within {{discount_period}}.\",\n        \"payment_profile_interest\": \"{{interest_rate}}% {{interest_type}} annual interest will be charged every {{interest_period}}.\",\n      },\n    \"css\": {\n      \"statement_of_accounts_title\": {\n        \"color\": \"#00cc00\",\n        \"font-family\": \"Times New Roman\",\n        \"font-size\": \"0.875em\",\n        \"background-color\": \"#ccff99\",\n        \"border-color\": \"#0033ff\",\n        \"border-style\": \"dotted\",\n        \"border-width\": \"thick\"\n      },\n      \"remittance_title\": {\n        \"color\": \"#00ff00\",\n        \"background-color\": \"None\",\n        \"border-color\": \"#0033cc\",\n        \"border-width\": \"medium\",\n        \"border-style\": \"dotted\",\n        \"font-family\": \"Arial\",\n        \"font-size\": \"1.5em\"\n      }\n    }\n  }\n```\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the BillTheme."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/billable_clients.json": {
      "get": {
        "tags": [
          "Billable Clients"
        ],
        "summary": "Return the data for all BillableClients",
        "operationId": "BillableClient#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillableClients",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableClient records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter BillableClient records to those that have Matters with unbilled Activities on or before this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BillableClient records to be returned. Limit can range between 1 and 25. Default: `25`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableClient records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableClient. The list will be filtered to include only the BillableClient records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableClient. The list will be filtered to include only the BillableClient records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter BillableClient records to those that have Matters with unbilled Activities on or after this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillableClient_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/billable_matters/ids.json": {
      "get": {
        "tags": [
          "Billable Matters"
        ],
        "summary": "Returns the unique identifiers of all BillableMatter",
        "operationId": "BillableMatter#ids",
        "description": "This data is retrieved asynchronously",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or before this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BillableMatter records to be returned. Limit can range between 1 and 1000. Default: `1000`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or after this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillableMatter_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/billable_matters.json": {
      "get": {
        "tags": [
          "Billable Matters"
        ],
        "summary": "Return the data for all BillableMatters",
        "operationId": "BillableMatter#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all BillableMatters",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or before this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of BillableMatter records to be returned. Limit can range between 1 and 1000. Default: `1000`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `display_number` or `number` or `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a BillableMatter. The list will be filtered to include only the BillableMatter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter BillableMatter records to those that have matters with unbilled activities on or after this date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillableMatter_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/preview.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Returns the pre-rendered html for the Bill",
        "operationId": "Bill#preview",
        "description": "This endpoint returns a pre-rendered HTML object that you can use to view a preview of your bills.\nThe HTML provided contains all of the CSS rules it requires to show the bill correctly,\nas well as the DOCTYPE setting it requires.\nIt's best to use an iframe, or similar object, to render the results of this endpoint.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Return the data for all Bills",
        "operationId": "Bill#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Bills",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Bill records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Bill records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "currency_id",
            "in": "query",
            "description": "Filter Bill records to those of a specific currency.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "due_after",
            "in": "query",
            "description": "Filter Bill records to those that have a `due_date` after the one provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_at",
            "in": "query",
            "description": "Filter Bill records to those that have a specific `due_date` (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_before",
            "in": "query",
            "description": "Filter Bill records to those that have a `due_date` before the one provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Bill records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "issued_after",
            "in": "query",
            "description": "Filter Bill records to those that have an `issue_date` after the one provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "issued_before",
            "in": "query",
            "description": "Filter Bill records to those that have an `issue_date` before the one provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "last_sent_end_date",
            "in": "query",
            "description": "Filter Bill records for those whose bills have been sent before the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "last_sent_start_date",
            "in": "query",
            "description": "Filter Bill records for those whose bills have been sent after the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Bill records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Bill records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "due_at(asc)",
                "due_at(desc)",
                "issued_at(asc)",
                "issued_at(desc)",
                "paid_at(asc)",
                "paid_at(desc)",
                "last_sent_at(asc)",
                "last_sent_at(desc)",
                "client_name(asc)",
                "client_name(desc)",
                "matter_display_number(asc)",
                "matter_display_number(desc)",
                "balance(asc)",
                "balance(desc)",
                "number(asc)",
                "number(desc)"
              ]
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "overdue_only",
            "in": "query",
            "description": "Filter Bill records to those that are overdue.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Allows matching search on invoice number.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Bill. The list will be filtered to include only the Bill records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter Bill records to those in a given state.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "awaiting_approval",
                "awaiting_payment",
                "paid",
                "void",
                "deleted"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Bill records to those with particular payment status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "overdue"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Bill records to those of a specific type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "revenue",
                "trust"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Bill records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Bill_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}.json": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Return the data for a single Bill",
        "operationId": "Bill#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Bill",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "navigation.next",
            "in": "query",
            "description": "The id of the next *Bill* available for viewing",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "navigation.previous",
            "in": "query",
            "description": "The id of the previous *Bill* available for viewing",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Bill_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Bills"
        ],
        "summary": "Update a single Bill",
        "operationId": "Bill#update",
        "description": "Outlines the parameters and data fields used when updating a single Bill",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Bill_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Bills",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bill_theme": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the bill theme applied to the Bill."
                          }
                        }
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ID of the currency applied to the Bill."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount amount for the Bill. This can either be a percentage or monetary value, this is determined by the `discount[type]`."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "percentage",
                              "money"
                            ],
                            "description": "The type of discount you are applying to your Bill with the `discount[rate]`."
                          },
                          "note": {
                            "type": "string",
                            "description": "A note for your Bill's discount."
                          }
                        }
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill is due. If `use_grace_period` is true, this field is ignored."
                      },
                      "interest": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Interest amount for the Bill as percentage."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "simple",
                              "compound"
                            ],
                            "description": "The type of interest you are applying to your Bill with the `interest[rate]`."
                          },
                          "period": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The interest period for how frequently your Bill will charge interest."
                          }
                        }
                      },
                      "issued_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Bill was issued."
                      },
                      "memo": {
                        "type": "string",
                        "description": "Memo for the Bill."
                      },
                      "number": {
                        "type": "string",
                        "description": "Bill's number."
                      },
                      "purchase_order": {
                        "type": "string",
                        "description": "Purchase order information for the Bill."
                      },
                      "secondary_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Secondary tax rate as percentage for the Bill."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "awaiting_approval",
                          "awaiting_payment",
                          "paid",
                          "void",
                          "deleted"
                        ],
                        "description": "Bill's state."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject details for the Bill."
                      },
                      "tax_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Tax rate as percentage for the Bill"
                      },
                      "use_grace_period": {
                        "type": "boolean",
                        "description": "When true, sets the bill's due date based on the client's grace period. This setting overrides the `due_at` parameter."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Bills"
        ],
        "summary": "Delete or void a Bill",
        "operationId": "Bill#destroy",
        "description": "This endpoint will transition a bill to either its deleted or voided state.\nA bill can only be deleted or voided if it has no payments recorded\nand its current state is one of the following:\n* Draft\n* Pending Approval\n* Unpaid\n\nA bill will automatically be moved to a deleted or void state based on its current state.\nThe mappings for this are:\n* Draft -> Deleted\n* Pending Approval -> Deleted\n* Unpaid -> Void\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar_entries.json": {
      "get": {
        "tags": [
          "Calendar Entries"
        ],
        "summary": "Return the data for all CalendarEntries",
        "operationId": "CalendarEntry#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CalendarEntries",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calendar_id",
            "in": "query",
            "description": "The unique identifier for a single Calendar. The keyword `null` is not valid for this field. The list will be filtered to include only the CalendarEntry records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CalendarEntry records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "expanded",
            "in": "query",
            "description": "Returns a record for each occurrence of a recurring calendar event.  Non-recurring calendar events are unaffected and returned as separate records regardless of the expanded setting.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "external_property_name",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter CalendarEntry records to those that end on or after the provided time (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "has_court_rule",
            "in": "query",
            "description": "Allows matching court rule on calendar entry.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CalendarEntry records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "is_all_day",
            "in": "query",
            "description": "Filter CalendarEntry records to those that are marked as all day events.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CalendarEntry records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a CalendarEntry. The list will be filtered to include only the CalendarEntry records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "owner_entries_across_all_users",
            "in": "query",
            "description": "Returns CalendarEntry records for all users related to a matter. Requires matter id.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Allows matching search on calendar entry.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter CalendarEntry records to those having a specific calendar visibility source (mobile, web).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "mobile"
              ]
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter CalendarEntry records to those that begin on or before the provided time (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CalendarEntry records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "visible",
            "in": "query",
            "description": "Filter CalendarEntry records to those that are visible.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntry_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar Entries"
        ],
        "summary": "Create a new CalendarEntry",
        "operationId": "CalendarEntry#create",
        "description": "Outlines the parameters and data fields used when creating a new CalendarEntry",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntry_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendar Entries",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    },
                    "required": [
                      "summary",
                      "start_at",
                      "end_at",
                      "calendar_owner"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/calendar_entries/{id}.json": {
      "get": {
        "tags": [
          "Calendar Entries"
        ],
        "summary": "Return the data for a single CalendarEntry",
        "operationId": "CalendarEntry#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CalendarEntry",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntry.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntry_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Calendar Entries"
        ],
        "summary": "Update a single CalendarEntry",
        "operationId": "CalendarEntry#update",
        "description": "Outlines the parameters and data fields used when updating a single CalendarEntry",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntry.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntry_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendar Entries",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "_deleted": {
                        "type": "string",
                        "enum": [
                          "single",
                          "future"
                        ],
                        "description": "Flag to delete a specific instance of a recurring event."
                      },
                      "all_day": {
                        "type": "boolean",
                        "description": "Whether or not the CalendarEntry is for all day."
                      },
                      "attendees": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Attendee associated with the CalendarEntry. The keyword `null` is not valid for this field. Not required for creating new Attendee, but required for updating or deleting existing ones."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of attendee (Calendar, Contact)"
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Flag to delete a specific attendee."
                            }
                          }
                        }
                      },
                      "calendar_entry_event_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntryEventType associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "calendar_owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Calendar associated with the CalendarEntry. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "conference_meeting": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "zoom"
                            ],
                            "description": "The type of conference meeting. If no conference meeting is present or the user is in an ineligible pricing tier for this feature, it will be null."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of the CalendarEntry."
                      },
                      "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry ends (Expects an ISO-8601 timestamp)."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the CalendarEntry. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per CalendarEntry**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the CalendarEntry."
                            }
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geographic location of the CalendarEntry."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the CalendarEntry. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "recurrence_rule": {
                        "type": "string",
                        "description": "Recurrence rule for expanding recurring CalendarEntry. To convert an existing recurring event to a non-recurring event, `''` or `null` are valid values."
                      },
                      "send_email_notification": {
                        "type": "boolean",
                        "description": "Whether the calendar Entry should send email notifications to attendees"
                      },
                      "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the CalendarEntry starts (Expects an ISO-8601 timestamp)."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of the CalendarEntry."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Calendar Entries"
        ],
        "summary": "Delete a single CalendarEntry",
        "operationId": "CalendarEntry#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CalendarEntry",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntry.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar_entry_event_types.json": {
      "get": {
        "tags": [
          "Calendar Entry Event Types"
        ],
        "summary": "Return the data for all calendar entry event types",
        "operationId": "CalendarEntryEventType#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CalendarEntryEventTypes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CalendarEntryEventType records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CalendarEntryEventType records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CalendarEntryEventType records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CalendarEntryEventType records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryEventType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar Entry Event Types"
        ],
        "summary": "Create a new calendar entry event type",
        "operationId": "CalendarEntryEventType#create",
        "description": "Outlines the parameters and data fields used when creating a new CalendarEntryEventType",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryEventType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendar Entry Event Types",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    },
                    "required": [
                      "color",
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    },
                    "required": [
                      "color",
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    },
                    "required": [
                      "color",
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/calendar_entry_event_types/{id}.json": {
      "get": {
        "tags": [
          "Calendar Entry Event Types"
        ],
        "summary": "Return the data for a single calendar entry event type",
        "operationId": "CalendarEntryEventType#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CalendarEntryEventType",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntryEventType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryEventType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Calendar Entry Event Types"
        ],
        "summary": "Update a single calendar entry event type",
        "operationId": "CalendarEntryEventType#update",
        "description": "Outlines the parameters and data fields used when updating a single CalendarEntryEventType",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntryEventType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEntryEventType"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendar Entry Event Types",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "The color assigned to the CalendarEntryEventType"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the CalendarEntryEventType"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Calendar Entry Event Types"
        ],
        "summary": "Delete a single calendar entry event type",
        "operationId": "CalendarEntryEventType#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CalendarEntryEventType",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarEntryEventType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/calendars.json": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "Return the data for all Calendars",
        "operationId": "Calendar#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Calendars",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Calendar records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_inactive_users",
            "in": "query",
            "description": "Filter any shared UserCalendar records whose owner is inactive.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Calendar records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Calendar records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Calendar records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "owner",
            "in": "query",
            "description": "Filter Calendar records to those that the user owns.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter Calendar records to those having a specific calendar visibility source (mobile, web).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "mobile"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Calendar records to those of the specified type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AccountCalendar",
                "AdhocCalendar",
                "UserCalendar"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Calendar records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "visible",
            "in": "query",
            "description": "Filter Calendar records to those that are visible.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "writeable",
            "in": "query",
            "description": "Filter Calendar records to those which the user can write to.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendars"
        ],
        "summary": "Create a new Calendar",
        "operationId": "Calendar#create",
        "description": "Outlines the parameters and data fields used when creating a new Calendar",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendars",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/calendars/{id}.json": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "summary": "Return the data for a single Calendar",
        "operationId": "Calendar#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Calendar",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Calendar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Calendars"
        ],
        "summary": "Update a single Calendar",
        "operationId": "Calendar#update",
        "description": "Outlines the parameters and data fields used when updating a single Calendar",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Calendar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Calendars",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "name": {
                        "type": "string",
                        "description": "Calendar name."
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "web",
                          "mobile"
                        ],
                        "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
                      },
                      "visible": {
                        "type": "boolean",
                        "description": "Whether or not the Calendar should be visible by default in the Clio Web UI (assuming no source is provided)."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Calendars"
        ],
        "summary": "Delete a single Calendar",
        "operationId": "Calendar#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Calendar",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Calendar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/clio_payments/links.json": {
      "get": {
        "tags": [
          "Clio Payments Links"
        ],
        "summary": "Return the data for all ClioPaymentsLinks",
        "operationId": "ClioPaymentsLink#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ClioPaymentsLinks",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Filter ClioPaymentsLink records based on whether or not they have expired.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ClioPaymentsLink records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ClioPaymentsLink records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ClioPaymentsLink records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ClioPaymentsLink records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsLink_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clio Payments Links"
        ],
        "summary": "Create a new ClioPaymentsLink",
        "operationId": "ClioPaymentsLink#create",
        "description": "Outlines the parameters and data fields used when creating a new ClioPaymentsLink",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsLink_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Links",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount to be paid. If not provided, the client will be able to specify an amount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency the payment will be processed in. The supported currency depends on the account's location ('USD' for a US account). The currency must be a valid ISO 4217 currency code."
                      },
                      "description": {
                        "type": "string",
                        "description": "Only applicable for a direct payment. A short description of the purpose of the payment. Max 255 characters."
                      },
                      "destination_account": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the bank account that the payment will be deposited into."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "destination_contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Only applicable for a direct payment. The contact that the payment will be associated with. If not defined, and the payment is collecting an unallocated balance, then the payment can be associated with a contact manually within Manage after it has been made."
                          }
                        }
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of time, in seconds, that the payment link will be active for. The maximum allowed value is '7776000' (90 days in seconds)."
                      },
                      "email_address": {
                        "type": "string",
                        "description": "Pre-fills the relevant field for the client when filling out their details in the payment link."
                      },
                      "is_allocated_as_revenue": {
                        "type": "boolean",
                        "description": "Only applicable for a direct payment. If true, the payment will be allocated as revenue. If false, the payment will be collected as an unallocated balance. Payments into trust can not be allocated as revenue. Defaults to false."
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the record associated with the payment link."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BankAccount",
                              "Bill",
                              "Contact"
                            ],
                            "description": "The type of the record associated with the payment link. The type of record determines the behavior of the payment link.\n\nType of subject object:\n* 'BankAccount' results in a payment link for a direct payment.\n* 'Bill' results in a payment link for paying an existing invoice or trust request.\n* 'Contact' results in a payment link for paying the outstanding invoices of a contact.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "currency",
                      "description",
                      "destination_account",
                      "duration",
                      "subject"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount to be paid. If not provided, the client will be able to specify an amount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency the payment will be processed in. The supported currency depends on the account's location ('USD' for a US account). The currency must be a valid ISO 4217 currency code."
                      },
                      "description": {
                        "type": "string",
                        "description": "Only applicable for a direct payment. A short description of the purpose of the payment. Max 255 characters."
                      },
                      "destination_account": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the bank account that the payment will be deposited into."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "destination_contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Only applicable for a direct payment. The contact that the payment will be associated with. If not defined, and the payment is collecting an unallocated balance, then the payment can be associated with a contact manually within Manage after it has been made."
                          }
                        }
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of time, in seconds, that the payment link will be active for. The maximum allowed value is '7776000' (90 days in seconds)."
                      },
                      "email_address": {
                        "type": "string",
                        "description": "Pre-fills the relevant field for the client when filling out their details in the payment link."
                      },
                      "is_allocated_as_revenue": {
                        "type": "boolean",
                        "description": "Only applicable for a direct payment. If true, the payment will be allocated as revenue. If false, the payment will be collected as an unallocated balance. Payments into trust can not be allocated as revenue. Defaults to false."
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the record associated with the payment link."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BankAccount",
                              "Bill",
                              "Contact"
                            ],
                            "description": "The type of the record associated with the payment link. The type of record determines the behavior of the payment link.\n\nType of subject object:\n* 'BankAccount' results in a payment link for a direct payment.\n* 'Bill' results in a payment link for paying an existing invoice or trust request.\n* 'Contact' results in a payment link for paying the outstanding invoices of a contact.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "currency",
                      "description",
                      "destination_account",
                      "duration",
                      "subject"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount to be paid. If not provided, the client will be able to specify an amount."
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency the payment will be processed in. The supported currency depends on the account's location ('USD' for a US account). The currency must be a valid ISO 4217 currency code."
                      },
                      "description": {
                        "type": "string",
                        "description": "Only applicable for a direct payment. A short description of the purpose of the payment. Max 255 characters."
                      },
                      "destination_account": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the bank account that the payment will be deposited into."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "destination_contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Only applicable for a direct payment. The contact that the payment will be associated with. If not defined, and the payment is collecting an unallocated balance, then the payment can be associated with a contact manually within Manage after it has been made."
                          }
                        }
                      },
                      "duration": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The amount of time, in seconds, that the payment link will be active for. The maximum allowed value is '7776000' (90 days in seconds)."
                      },
                      "email_address": {
                        "type": "string",
                        "description": "Pre-fills the relevant field for the client when filling out their details in the payment link."
                      },
                      "is_allocated_as_revenue": {
                        "type": "boolean",
                        "description": "Only applicable for a direct payment. If true, the payment will be allocated as revenue. If false, the payment will be collected as an unallocated balance. Payments into trust can not be allocated as revenue. Defaults to false."
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the record associated with the payment link."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BankAccount",
                              "Bill",
                              "Contact"
                            ],
                            "description": "The type of the record associated with the payment link. The type of record determines the behavior of the payment link.\n\nType of subject object:\n* 'BankAccount' results in a payment link for a direct payment.\n* 'Bill' results in a payment link for paying an existing invoice or trust request.\n* 'Contact' results in a payment link for paying the outstanding invoices of a contact.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "currency",
                      "description",
                      "destination_account",
                      "duration",
                      "subject"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/clio_payments/links/{id}.json": {
      "get": {
        "tags": [
          "Clio Payments Links"
        ],
        "summary": "Return the data for a single ClioPaymentsLink",
        "operationId": "ClioPaymentsLink#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ClioPaymentsLink",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ClioPaymentsLink.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsLink_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Clio Payments Links"
        ],
        "summary": "Update a single ClioPaymentsLink",
        "operationId": "ClioPaymentsLink#update",
        "description": "Outlines the parameters and data fields used when updating a single ClioPaymentsLink",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ClioPaymentsLink.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsLink_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Links",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "expired": {
                        "type": "boolean",
                        "description": "Setting this will update the payment link to be immediately expired."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "expired": {
                        "type": "boolean",
                        "description": "Setting this will update the payment link to be immediately expired."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "expired": {
                        "type": "boolean",
                        "description": "Setting this will update the payment link to be immediately expired."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/clio_payments/payments.json": {
      "get": {
        "tags": [
          "Clio Payments Payments"
        ],
        "summary": "Return the data for all ClioPaymentsPayments",
        "operationId": "ClioPaymentsPayment#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ClioPaymentsPayments",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bill_id",
            "in": "query",
            "description": "Filter ClioPaymentsPayment records to those that are allocated to the specified bill.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "Filter ClioPaymentsPayment records to those that are assigned to the specified contact.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ClioPaymentsPayment records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ClioPaymentsPayment records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter ClioPaymentsPayment records to those in a given state.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "authorized",
                "completed",
                "voided",
                "failed",
                "canceled",
                "requires_confirmation",
                "completed_requiring_allocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsPayment_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/clio_payments/payments/{id}.json": {
      "get": {
        "tags": [
          "Clio Payments Payments"
        ],
        "summary": "Return the data for a single ClioPaymentsPayment",
        "operationId": "ClioPaymentsPayment#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ClioPaymentsPayment",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ClioPaymentsPayment.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ClioPaymentsPayment_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/communications.json": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Return the data for all Communications",
        "operationId": "Communication#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Communications",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Communication records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Communication records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter Communication records to those that occur on the specified date (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "external_property_name",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "having_time_entries",
            "in": "query",
            "description": "Filter Communication records to those that do or do not have time entries.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Communication records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Communication records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Communication. The list will be filtered to include only the Communication records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Communication records by the given field. Default: `date(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)",
                "received_at(asc)",
                "received_at(desc)",
                "matter(asc)",
                "matter(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `body` or `subject` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "received_at",
            "in": "query",
            "description": "Filter Communication records to those that occur on the specified date (Expects an ISO-8601 date-time).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "received_before",
            "in": "query",
            "description": "Filter Communication records to those whose `date` is on or before the date provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "received_since",
            "in": "query",
            "description": "Filter Communication records to those whose `date` is on or after the date provided (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Communication records to those of the specified type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EmailCommunication",
                "PhoneCommunication"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Communication records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Communication records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Communication_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Communications"
        ],
        "summary": "Create a new Communication",
        "operationId": "Communication#create",
        "description": "Outlines the parameters and data fields used when creating a new Communication",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Communication_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Communications",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "body",
                      "received_at",
                      "subject",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "body",
                      "received_at",
                      "subject",
                      "type"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    },
                    "required": [
                      "body",
                      "received_at",
                      "subject",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/communications/{id}.json": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Return the data for a single Communication",
        "operationId": "Communication#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Communication",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Communication.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Communication_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Communications"
        ],
        "summary": "Update a single Communication",
        "operationId": "Communication#update",
        "description": "Outlines the parameters and data fields used when updating a single Communication",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Communication.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Communication_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Communications",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Communication. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Communication**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Communication."
                            }
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Communication. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Phone Log Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Communication. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted. Note: Only applicable to Phone Log Communications, invalid for other communication types."
                            }
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "description": "The date-time for the Communication. (Expects an ISO-8601 date-time.)"
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the receivers should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the receivers of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the receivers of this Communication."
                            }
                          }
                        }
                      },
                      "senders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the senders should be deleted."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique ids for the senders of this Communication."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "User",
                                "Contact"
                              ],
                              "description": "Types of the senders of this Communication."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "PhoneCommunication",
                          "EmailCommunication"
                        ],
                        "description": "Type of the Communication."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Communications"
        ],
        "summary": "Delete a single Communication",
        "operationId": "Communication#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Communication",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Communication.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/email_addresses.json": {
      "get": {
        "tags": [
          "Email Addresses"
        ],
        "summary": "Return the data for all EmailAddresses",
        "operationId": "EmailAddress#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all EmailAddresses",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "ID of the Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter EmailAddress records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter EmailAddress records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of EmailAddress records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter EmailAddress records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAddress_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/phone_numbers.json": {
      "get": {
        "tags": [
          "Phone Numbers"
        ],
        "summary": "Return the data for all PhoneNumbers",
        "operationId": "PhoneNumber#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all PhoneNumbers",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "path",
            "description": "ID of the Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter PhoneNumber records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter PhoneNumber records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of PhoneNumber records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter PhoneNumber records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts.json": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Return the data for all Contacts",
        "operationId": "Contact#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Contacts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_only",
            "in": "query",
            "description": "Filter Contact records to those that are clients.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clio_connect_only",
            "in": "query",
            "description": "Filter Contact records to those that are Clio Connect users.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Contact records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "email_only",
            "in": "query",
            "description": "Filter Contact records to those that have email addresses.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exclude_ids[]",
            "in": "query",
            "description": "Filter Contact records to those who are not included in the given list of unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Contact records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "initial",
            "in": "query",
            "description": "Filter Contact records to those where the last name or company name start with the given initial.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F",
                "G",
                "H",
                "I",
                "J",
                "K",
                "L",
                "M",
                "N",
                "O",
                "P",
                "Q",
                "R",
                "S",
                "T",
                "U",
                "V",
                "W",
                "X",
                "Y",
                "Z"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Contact records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Contact records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "shared_at(asc)",
                "shared_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for name, title, email address, address, phone number, web site, instant messenger address,\ncustom fields, related matter name, or company name matching a given string.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shared_resource_id",
            "in": "query",
            "description": "Filter Contact records to those that currently have access to a given shared resource.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Contact records to those that match the given type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Company",
                "Person"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Contact records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Contact_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new Contact",
        "operationId": "Contact#create",
        "description": "Outlines the parameters and data fields used when creating a new Contact",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Contact_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Contacts",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/contacts/{id}.json": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Return the data for a single Contact",
        "operationId": "Contact#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Contact",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Contact.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Contact_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a single Contact",
        "operationId": "Contact#update",
        "description": "Outlines the parameters and data fields used when updating a single Contact",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Contact's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Contact.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Contact_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Contacts",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Billing",
                                "Other"
                              ],
                              "description": "Name of the Address."
                            },
                            "street": {
                              "type": "string",
                              "description": "Street."
                            },
                            "city": {
                              "type": "string",
                              "description": "City."
                            },
                            "province": {
                              "type": "string",
                              "description": "Province or state."
                            },
                            "postal_code": {
                              "type": "string",
                              "description": "Postal code or zip code."
                            },
                            "country": {
                              "type": "string",
                              "description": "Country"
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Address associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Address is present, the Address is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "avatar": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "description": "The avatar image for the *Contact*, base64-encoded. Must be a valid GIF, JPG, or PNG image of less than 2 megabytes in size."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Avatar is present, the Avatar is deleted from the Contact."
                          }
                        }
                      },
                      "clio_connect_email": {
                        "type": "string",
                        "description": "Notifications will be sent to this email when a resource is shared."
                      },
                      "co_counsel_rate": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Billing rate if the Contact is a co-counsel.\n\nNote: this value can only be provided during PATCH requests. It cannot be provided at the time a Contact is created (i.e. POST requests).\n"
                          }
                        }
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Company associated with the Contact. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "currency": {
                        "type": "object",
                        "description": "The Currency the contact is associated with."
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Contact. If not specified, it is added as the last CustomFieldSet of the Contact."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of birth of the Contact."
                      },
                      "email_addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single EmailAddress associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Other"
                              ],
                              "description": "Name of the EmailAddress."
                            },
                            "address": {
                              "type": "string",
                              "description": "Email address."
                            },
                            "default_email": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default email for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated EmailAddress is present, the EmailAddress is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the Contact."
                      },
                      "instant_messengers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Other"
                              ],
                              "description": "Name of the InstantMessenger."
                            },
                            "address": {
                              "type": "string",
                              "description": "Address of the InstantMessenger."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single InstantMessenger associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated InstantMessenger is present, the InstantMessenger is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the Contact."
                      },
                      "ledes_client_id": {
                        "type": "string",
                        "description": "LEDES client id of the Contact."
                      },
                      "middle_name": {
                        "type": "string",
                        "description": "Middle name of the Contact."
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the Contact. For requirements, see [Contact Name](https://docs.developers.clio.com/api-reference/#section/Contact-Name)."
                      },
                      "phone_numbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Home",
                                "Mobile",
                                "Fax",
                                "Pager",
                                "Skype",
                                "Other"
                              ],
                              "description": "Name of the PhoneNumber."
                            },
                            "number": {
                              "type": "string",
                              "description": "Phone number."
                            },
                            "default_number": {
                              "type": "boolean",
                              "description": "Whether or not the PhoneNumber should be the default number for the Contact."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PhoneNumber associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated PhoneNumber is present, the PhoneNumber is deleted from the Contact."
                            }
                          }
                        }
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Personal title of the Contact."
                      },
                      "sales_tax_number": {
                        "type": "string",
                        "description": "A contact's sales tax number will appear on invoices generated for the Contact."
                      },
                      "title": {
                        "type": "string",
                        "description": "Professional title of the Contact."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Company"
                        ],
                        "description": "Type of the Contact."
                      },
                      "web_sites": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": "Other",
                              "enum": [
                                "Work",
                                "Personal",
                                "Twitter",
                                "Facebook",
                                "LinkedIn",
                                "Instant Messenger",
                                "Other"
                              ],
                              "description": "Name of the WebSite."
                            },
                            "address": {
                              "type": "string",
                              "description": "URL of the WebSite."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single WebSite associated with the Contact. The keyword `null` is not valid for this field."
                            },
                            "default_web_site": {
                              "type": "boolean",
                              "description": "Whether or not the Contact should be the default website for the Contact."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated WebSite is present, the WebSite is deleted from the Contact."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a single Contact",
        "operationId": "Contact#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Contact",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Contact.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/conversation_messages.json": {
      "get": {
        "tags": [
          "Conversation Messages"
        ],
        "summary": "Return the data for all ConversationMessages",
        "operationId": "ConversationMessage#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ConversationMessages",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversation_id",
            "in": "query",
            "description": "The unique identifier for a single Conversation. Use the keyword `null` to match those without a ConversationMessage. The list will be filtered to include only the ConversationMessage records with the matching property.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ConversationMessage records to those having the `created_at` field on the related Conversation after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ConversationMessage records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ConversationMessage records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the ConversationMessage records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `body` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ConversationMessage records to those having the `updated_at` field on the related Conversation after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessage_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conversation Messages"
        ],
        "summary": "Create a new ConversationMessage",
        "operationId": "ConversationMessage#create",
        "description": "Outlines the parameters and data fields used when creating a new ConversationMessage",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessage_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Conversation Messages",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attachment": {
                        "type": "object",
                        "properties": {
                          "document_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document id of the attached document."
                          },
                          "document_version_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document version id of the attached document."
                          }
                        }
                      },
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body",
                      "subject",
                      "receivers"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attachment": {
                        "type": "object",
                        "properties": {
                          "document_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document id of the attached document."
                          },
                          "document_version_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document version id of the attached document."
                          }
                        }
                      },
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body",
                      "subject",
                      "receivers"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attachment": {
                        "type": "object",
                        "properties": {
                          "document_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document id of the attached document."
                          },
                          "document_version_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The document version id of the attached document."
                          }
                        }
                      },
                      "body": {
                        "type": "string",
                        "description": "The body value."
                      },
                      "conversation": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Conversation associated with this ConversationMessage."
                          }
                        }
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the ConversationMessage. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "receivers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single receiver for this ConversationMessage."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Contact",
                                "User"
                              ],
                              "description": "The type for a single receiver for this ConversationMessage, could be `Contact` or `User`."
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject value."
                      }
                    },
                    "required": [
                      "body",
                      "subject",
                      "receivers"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/conversation_messages/{id}.json": {
      "get": {
        "tags": [
          "Conversation Messages"
        ],
        "summary": "Return the data for a single ConversationMessage",
        "operationId": "ConversationMessage#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ConversationMessage",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ConversationMessage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationMessage_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/conversations.json": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Return the data for all Conversations",
        "operationId": "Conversation#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Conversations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Filter archived Conversation records.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "Filter Conversation records for the contact.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Conversation records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter Conversation records created on a given date. (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "for_user",
            "in": "query",
            "description": "If set to true, filter Conversation records accessible to any groups of the user.\nNote that the user may not be member of the conversations.\n\nIf set to false, filter Conversation records of which the user is a member.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Conversation records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Conversation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Conversation. The list will be filtered to include only the Conversation records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Conversation records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "last_message_id(asc)",
                "last_message_id(desc)",
                "matter_id(asc)",
                "matter_id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "Filter Conversation records to those which have been read.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "time_entries",
            "in": "query",
            "description": "Filter Conversation records to those with or without associated time entries.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Conversation records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/conversations/{id}.json": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Return the data for a single Conversation",
        "operationId": "Conversation#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Conversation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Conversation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update a single Conversation",
        "operationId": "Conversation#update",
        "description": "Outlines the parameters and data fields used when updating a single Conversation",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Conversation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Conversations",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been archived."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "read": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been read."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been archived."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "read": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been read."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been archived."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Conversation. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "read": {
                        "type": "boolean",
                        "description": "Whether or not the Conversation has been read."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/court_rules/jurisdictions/{jurisdiction_id}/triggers.json": {
      "get": {
        "tags": [
          "Jurisdictions To Triggers"
        ],
        "summary": "Return the data for all triggers",
        "operationId": "JurisdictionsToTrigger#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all JurisdictionsToTriggers",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter JurisdictionsToTrigger records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter JurisdictionsToTrigger records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "is_requirements_required",
            "in": "query",
            "description": "Filter JurisdictionsToTrigger records to those which require addition requirements to be checked (usually specifying trigger time).",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_served",
            "in": "query",
            "description": "Filter JurisdictionsToTrigger records to those which require a service type to be selected.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "jurisdiction_id",
            "in": "path",
            "description": "The unique identifier for the Jurisdiction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of JurisdictionsToTrigger records to be returned. Limit can range between 1 and 1000. Default: `1000`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the JurisdictionsToTrigger records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "description(asc)",
                "description(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter JurisdictionsToTrigger records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionsToTrigger_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/jurisdictions/{jurisdiction_id}/triggers/{id}.json": {
      "get": {
        "tags": [
          "Jurisdictions To Triggers"
        ],
        "summary": "Return the data for the trigger",
        "operationId": "JurisdictionsToTrigger#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single JurisdictionsToTrigger",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the JurisdictionsToTrigger.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "jurisdiction_id",
            "in": "path",
            "description": "The unique identifier for the Jurisdiction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/JurisdictionsToTrigger_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/court_rules/jurisdictions.json": {
      "get": {
        "tags": [
          "Jurisdictions"
        ],
        "summary": "Return the data for all jurisdictions",
        "operationId": "Jurisdiction#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Jurisdictions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Jurisdiction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "for_current_account",
            "in": "query",
            "description": "Filter Jurisdiction records to those set up for this account.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Jurisdiction records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Jurisdiction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Jurisdiction records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "description(asc)",
                "description(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Jurisdiction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Jurisdiction_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/jurisdictions/{id}.json": {
      "get": {
        "tags": [
          "Jurisdictions"
        ],
        "summary": "Return the data for the jurisdiction",
        "operationId": "Jurisdiction#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Jurisdiction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Jurisdiction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Jurisdiction_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/court_rules/matter_dockets/preview.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "summary": "Preview calendar dates for the docket",
        "operationId": "MatterDocket#preview",
        "description": "Preview calendar dates for the docket",
        "parameters": [
          {
            "name": "event_prefix",
            "in": "query",
            "description": "The prefix that will be added to the beginning of all court rule event titles",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jurisdiction[id]",
            "in": "query",
            "description": "The unique identifier for a single Jurisdiction. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "service_type[id]",
            "in": "query",
            "description": "The unique identifier for a single ServiceType. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The date the MatterDocket should start. (Expects an ISO-8601 date).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "The time the MatterDocket should start. (Expects an ISO-8601 timestamp).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "trigger[id]",
            "in": "query",
            "description": "The unique identifier for a single JurisdictionsToTrigger. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/matter_dockets.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "summary": "Return the data for all matter dockets",
        "operationId": "MatterDocket#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all MatterDockets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter MatterDocket records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter MatterDocket records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of MatterDocket records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterDocket records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "matter_status",
            "in": "query",
            "description": "Filter MatterDocket records to those with Matters having a specific status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "pending"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the MatterDocket records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_type_id",
            "in": "query",
            "description": "The unique identifier for a single ServiceType. Use the keyword `null` to match those without a MatterDocket. The list will be filtered to include only the MatterDocket records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter MatterDocket records to those having a specific status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "not_started,",
                "in_progress,",
                "failed,",
                "completed"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter MatterDocket records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocket_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Matter Dockets"
        ],
        "summary": "Creates a matter docket",
        "operationId": "MatterDocket#create",
        "description": "Outlines the parameters and data fields used when creating a new MatterDocket",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocket_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Matter Dockets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "jurisdiction": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Jurisdiction associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      },
                      "trigger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Trigger associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "jurisdiction",
                      "name",
                      "start_date",
                      "trigger"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "jurisdiction": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Jurisdiction associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      },
                      "trigger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Trigger associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "jurisdiction",
                      "name",
                      "start_date",
                      "trigger"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "jurisdiction": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Jurisdiction associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the MatterDocket."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the MatterDocket. (Expects an ISO-8601 date)."
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the MatterDocket. Required for some triggers.  (Expects an ISO-8601 timestamp)."
                      },
                      "trigger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Trigger associated with the MatterDocket. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "jurisdiction",
                      "name",
                      "start_date",
                      "trigger"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/court_rules/matter_dockets/{id}.json": {
      "get": {
        "tags": [
          "Matter Dockets"
        ],
        "summary": "Return the data for the matter docket",
        "operationId": "MatterDocket#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single MatterDocket",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MatterDocket.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MatterDocket_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "delete": {
        "tags": [
          "Matter Dockets"
        ],
        "summary": "Deletes the requested matter docket",
        "operationId": "MatterDocket#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single MatterDocket",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MatterDocket.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/service_types.json": {
      "get": {
        "tags": [
          "Service Types"
        ],
        "summary": "Return the data for all service types",
        "operationId": "ServiceType#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ServiceTypes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ServiceType records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ServiceType records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ServiceType records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the ServiceType records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "description(asc)",
                "description(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ServiceType records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceType_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/court_rules/service_types/{id}.json": {
      "get": {
        "tags": [
          "Service Types"
        ],
        "summary": "Return the data for the service type",
        "operationId": "ServiceType#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ServiceType",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ServiceType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceType_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/credit_memos.json": {
      "get": {
        "tags": [
          "Credit Memos"
        ],
        "summary": "Return the data for all CreditMemos",
        "operationId": "CreditMemo#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CreditMemos",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the CreditMemo records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CreditMemo records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CreditMemo records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CreditMemo records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the CreditMemo records by the given field. Default: `date(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CreditMemo records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreditMemo_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_memos/{id}.json": {
      "get": {
        "tags": [
          "Credit Memos"
        ],
        "summary": "Return the data for a single CreditMemo",
        "operationId": "CreditMemo#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CreditMemo",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CreditMemo.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreditMemo_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/currencies.json": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Return the data for all Currencies",
        "operationId": "Currency#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Currencies",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Currency records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Currency records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Currency records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Currency records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Currency_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_fields.json": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Return the data for all CustomFields",
        "operationId": "CustomField#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomFields",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CustomField records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "Filter CustomField records to those that have been deleted for future use.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "field_type",
            "in": "query",
            "description": "Field type of this custom field",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "checkbox",
                "contact",
                "currency",
                "date",
                "time",
                "email",
                "matter",
                "numeric",
                "picklist",
                "text_area",
                "text_line",
                "url"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CustomField records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CustomField records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the CustomField records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "display_order(asc)",
                "display_order(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_type",
            "in": "query",
            "description": "Filter CustomField records to those that have the specified `parent_type`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "matter",
                "contact"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CustomField records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "visible_and_required",
            "in": "query",
            "description": "Filter CustomField records to those that are visible and required.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Create a new CustomField",
        "operationId": "CustomField#create",
        "description": "Outlines the parameters and data fields used when creating a new CustomField",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Fields",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name",
                      "parent_type",
                      "field_type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name",
                      "parent_type",
                      "field_type"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "field_type": {
                        "type": "string",
                        "enum": [
                          "checkbox",
                          "contact",
                          "currency",
                          "date",
                          "time",
                          "email",
                          "matter",
                          "numeric",
                          "picklist",
                          "text_area",
                          "text_line",
                          "url"
                        ],
                        "description": "Field type of the CustomField."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomField is for."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    },
                    "required": [
                      "name",
                      "parent_type",
                      "field_type"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/custom_fields/{id}.json": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Return the data for a single CustomField",
        "operationId": "CustomField#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CustomField",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomField.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Update a single CustomField",
        "operationId": "CustomField#update",
        "description": "Outlines the parameters and data fields used when updating a single CustomField",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomField.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Fields",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "display_order": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The display position of the CustomField."
                      },
                      "displayed": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the CustomField should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomField name."
                      },
                      "picklist_options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single PicklistOption associated with the CustomField. The keyword `null` is not valid for this field. Not required for creating new PicklistOptions, but required for updating or deleting existing ones."
                            },
                            "option": {
                              "type": "string",
                              "description": "The option value."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "Whether or not the PicklistOption should be deleted."
                            }
                          }
                        }
                      },
                      "required": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether or not the CustomField should require a value."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Delete a single CustomField",
        "operationId": "CustomField#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CustomField",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomField.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_field_sets.json": {
      "get": {
        "tags": [
          "Custom Field Sets"
        ],
        "summary": "Return the data for all CustomFieldSets",
        "operationId": "CustomFieldSet#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomFieldSets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CustomFieldSet records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "displayed",
            "in": "query",
            "description": "Filter CustomFieldSet records to those that should be displayed by default.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CustomFieldSet records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CustomFieldSet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the CustomFieldSet records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)",
                "parent_type(asc)",
                "parent_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_type",
            "in": "query",
            "description": "Filter CustomFieldSet records to those that have the specified `parent_type`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Matter",
                "Contact"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CustomFieldSet records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Field Sets"
        ],
        "summary": "Create a new CustomFieldSet",
        "operationId": "CustomFieldSet#create",
        "description": "Outlines the parameters and data fields used when creating a new CustomFieldSet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Field Sets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/custom_field_sets/{id}.json": {
      "get": {
        "tags": [
          "Custom Field Sets"
        ],
        "summary": "Return the data for a single CustomFieldSet",
        "operationId": "CustomFieldSet#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CustomFieldSet",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomFieldSet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Field Sets"
        ],
        "summary": "Update a single CustomFieldSet",
        "operationId": "CustomFieldSet#update",
        "description": "Outlines the parameters and data fields used when updating a single CustomFieldSet",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomFieldSet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Field Sets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "displayed": {
                        "type": "boolean",
                        "description": "Whether or not the CustomFieldSet should be displayed by default."
                      },
                      "name": {
                        "type": "string",
                        "description": "CustomFieldSet name."
                      },
                      "parent_type": {
                        "type": "string",
                        "enum": [
                          "Contact",
                          "Matter"
                        ],
                        "description": "Type of object the CustomFieldSet is for."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Custom Field Sets"
        ],
        "summary": "Delete a single CustomFieldSet",
        "operationId": "CustomFieldSet#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CustomFieldSet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomFieldSet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom_actions.json": {
      "get": {
        "tags": [
          "Custom Actions"
        ],
        "summary": "Return the data for all CustomActions",
        "operationId": "CustomAction#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CustomActions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CustomAction records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CustomAction records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CustomAction records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CustomAction records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAction_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Actions"
        ],
        "summary": "Create a new CustomAction",
        "operationId": "CustomAction#create",
        "description": "Outlines the parameters and data fields used when creating a new CustomAction",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAction_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Actions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    },
                    "required": [
                      "label",
                      "target_url",
                      "ui_reference"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/custom_actions/{id}.json": {
      "get": {
        "tags": [
          "Custom Actions"
        ],
        "summary": "Return the data for a single CustomAction",
        "operationId": "CustomAction#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CustomAction",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomAction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAction_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Custom Actions"
        ],
        "summary": "Update a single CustomAction",
        "operationId": "CustomAction#update",
        "description": "Outlines the parameters and data fields used when updating a single CustomAction",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomAction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAction_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Custom Actions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text label to be displayed on the custom link."
                      },
                      "target_url": {
                        "type": "string",
                        "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
                      },
                      "ui_reference": {
                        "type": "string",
                        "enum": [
                          "activities/show",
                          "documents/show",
                          "contacts/show",
                          "matters/show",
                          "folders/show"
                        ],
                        "description": "UI reference location within Clio where the link will be displayed."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Custom Actions"
        ],
        "summary": "Delete a single CustomAction",
        "operationId": "CustomAction#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single CustomAction",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CustomAction.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/damages.json": {
      "get": {
        "tags": [
          "Damages"
        ],
        "summary": "Return the data for all Damages",
        "operationId": "Damage#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Damages",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Damage records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Damage records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Damage records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Damage records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Damage_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Damages"
        ],
        "summary": "Creating a Damage",
        "operationId": "Damage#create",
        "description": "Outlines the parameters and data fields used when creating a new Damage",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Damage_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Damages",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier of the Matter to which the Damage is associated."
                      }
                    },
                    "required": [
                      "amount",
                      "damage_type",
                      "description",
                      "matter_id"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier of the Matter to which the Damage is associated."
                      }
                    },
                    "required": [
                      "amount",
                      "damage_type",
                      "description",
                      "matter_id"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier of the Matter to which the Damage is associated."
                      }
                    },
                    "required": [
                      "amount",
                      "damage_type",
                      "description",
                      "matter_id"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/damages/{id}.json": {
      "get": {
        "tags": [
          "Damages"
        ],
        "summary": "Return a specific Damage",
        "operationId": "Damage#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Damage",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Damage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Damage_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Damages"
        ],
        "summary": "Updating a Damage",
        "operationId": "Damage#update",
        "description": "Outlines the parameters and data fields used when updating a single Damage",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Damage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Damage_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Damages",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "damage_type": {
                        "type": "string",
                        "enum": [
                          "special",
                          "general",
                          "other"
                        ],
                        "description": "Damage type"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Damages"
        ],
        "summary": "Deleting a Damage",
        "operationId": "Damage#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Damage",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Damage.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/expense_categories.json": {
      "get": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "Return the data for all ExpenseCategories",
        "operationId": "ExpenseCategory#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ExpenseCategories",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ExpenseCategory records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "entry_type",
            "in": "query",
            "description": "Filter ExpenseCategory records to those that match the given type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "hard_cost",
                "soft_cost",
                "unassociated"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ExpenseCategory records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the ExpenseCategory records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "rate(asc)",
                "rate(desc)",
                "entry_type(asc)",
                "entry_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Allows matching search on expense category name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ExpenseCategory records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "Create a new ExpenseCategory",
        "operationId": "ExpenseCategory#create",
        "description": "Outlines the parameters and data fields used when creating a new ExpenseCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Expense Categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/expense_categories/{id}.json": {
      "get": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "Return the data for a single ExpenseCategory",
        "operationId": "ExpenseCategory#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ExpenseCategory",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ExpenseCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "Update a single ExpenseCategory",
        "operationId": "ExpenseCategory#update",
        "description": "Outlines the parameters and data fields used when updating a single ExpenseCategory",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ExpenseCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Expense Categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "object",
                        "description": "Currency of the Expense Category."
                      },
                      "entry_type": {
                        "type": "string",
                        "enum": [
                          "hard_cost",
                          "soft_cost",
                          "unassociated"
                        ],
                        "description": "Defaults to unassociated."
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Group associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                            },
                            "_deleted": {
                              "type": "boolean",
                              "description": "A flag to determine if this Group should lose access to this ExpenseCategory."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Expense Category."
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Rate of the Expense Category, default is null."
                      },
                      "utbms_code": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single UtbmsCode associated with the ExpenseCategory. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "Delete a single ExpenseCategory",
        "operationId": "ExpenseCategory#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ExpenseCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ExpenseCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/grants.json": {
      "get": {
        "tags": [
          "Grants"
        ],
        "summary": "Return the data for all grants",
        "operationId": "Grant#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Grants",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Grant records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Grant records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Grant records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter Grant records to those that match the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Grant records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Grant_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grants"
        ],
        "summary": "Create a new grant",
        "operationId": "Grant#create",
        "description": "Outlines the parameters and data fields used when creating a new Grant",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Grant_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Grants",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/grants/{id}.json": {
      "get": {
        "tags": [
          "Grants"
        ],
        "summary": "Return the data for a single grant",
        "operationId": "Grant#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Grant",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Grant.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Grant_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Grants"
        ],
        "summary": "Update a single grant",
        "operationId": "Grant#update",
        "description": "Outlines the parameters and data fields used when updating a single Grant",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Grant.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Grant_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Grants",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Grant."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Grants"
        ],
        "summary": "Deletes a single grant",
        "operationId": "Grant#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Grant",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Grant.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/grant_funding_sources.json": {
      "get": {
        "tags": [
          "Grant Funding Sources"
        ],
        "summary": "Return the data for all grant funding sources",
        "operationId": "GrantFundingSource#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all GrantFundingSources",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter GrantFundingSource records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter GrantFundingSource records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of GrantFundingSource records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter GrantFundingSource records to those that match the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter GrantFundingSource records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GrantFundingSource_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grant Funding Sources"
        ],
        "summary": "Create a new grant funding source",
        "operationId": "GrantFundingSource#create",
        "description": "Outlines the parameters and data fields used when creating a new GrantFundingSource",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GrantFundingSource_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Grant Funding Sources",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/grant_funding_sources/{id}.json": {
      "patch": {
        "tags": [
          "Grant Funding Sources"
        ],
        "summary": "Update a single grant funding source",
        "operationId": "GrantFundingSource#update",
        "description": "Outlines the parameters and data fields used when updating a single GrantFundingSource",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the GrantFundingSource.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GrantFundingSource_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Grant Funding Sources",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Grant Funding Sources"
        ],
        "summary": "Delete a single grant funding source",
        "operationId": "GrantFundingSource#destroy",
        "description": "Outlines the parameters and data fields used when updating a single GrantFundingSource",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the GrantFundingSource.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GrantFundingSource_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Grant Funding Sources",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the GrantFundingSource."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/groups.json": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Return the data for all Groups",
        "operationId": "Group#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Groups",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Filter archived Group records.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Group records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Group records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Group records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter Group records to those that match the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Group records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Group records to those that match the given type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "AccountGroup",
                "AdhocGroup",
                "UserGroup"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Group records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Group records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Group_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create a new Group",
        "operationId": "Group#create",
        "description": "Outlines the parameters and data fields used when creating a new Group",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Group_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Groups",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/groups/{id}.json": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Return the data for a single Group",
        "operationId": "Group#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Group",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Group_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "Update a single Group",
        "operationId": "Group#update",
        "description": "Outlines the parameters and data fields used when updating a single Group",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Group_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Groups",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Group."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete a single Group",
        "operationId": "Group#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Group",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Group.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_notifications/event_metrics.json": {
      "get": {
        "tags": [
          "Event Metrics"
        ],
        "summary": "Unread in-app notification events",
        "operationId": "EventMetrics#index",
        "description": "Outlines the parameters, optional and required, used when requesting Event Metrics",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EventMetrics_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_notifications/my_events.json": {
      "get": {
        "tags": [
          "My Events"
        ],
        "summary": "Return the data for all of my in-app notification events",
        "operationId": "MyEvent#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all MyEvents",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of MyEvent records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MyEvent_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/internal_notifications/my_events/{id}.json": {
      "patch": {
        "tags": [
          "My Events"
        ],
        "summary": "Mark a single in-app notification event as read/unread",
        "operationId": "MyEvent#update",
        "description": "Outlines the parameters and data fields used when updating a single MyEvent",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MyEvent.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MyEvent_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for My Events",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "marked_as_read": {
                        "type": "boolean",
                        "description": "Indicates whether the event notification should be marked as read by the current user. If `false` the event status is reset to unread."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "marked_as_read": {
                        "type": "boolean",
                        "description": "Indicates whether the event notification should be marked as read by the current user. If `false` the event status is reset to unread."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "marked_as_read": {
                        "type": "boolean",
                        "description": "Indicates whether the event notification should be marked as read by the current user. If `false` the event status is reset to unread."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "My Events"
        ],
        "summary": "Clear (delete) a single in-app notification event",
        "operationId": "MyEvent#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single MyEvent",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MyEvent.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/interest_charges.json": {
      "get": {
        "tags": [
          "Interest Charges"
        ],
        "summary": "Return the data for all InterestCharges",
        "operationId": "InterestCharge#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all InterestCharges",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bill_id",
            "in": "query",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the InterestCharge records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter InterestCharge records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "exclude_ids[]",
            "in": "query",
            "description": "Array containing *InterestCharge* identifiers that should be excluded from the query.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter InterestCharge records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of InterestCharge records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter InterestCharge records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InterestCharge_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/interest_charges/{id}.json": {
      "delete": {
        "tags": [
          "Interest Charges"
        ],
        "summary": "Delete a single InterestCharge",
        "operationId": "InterestCharge#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single InterestCharge",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the InterestCharge.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/line_items.json": {
      "get": {
        "tags": [
          "Line Items"
        ],
        "summary": "Return the data for all LineItems",
        "operationId": "LineItem#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LineItems",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "The unique identifier for a single Activity. Use the keyword `null` to match those without a LineItem. The list will be filtered to include only the LineItem records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "bill_id",
            "in": "query",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the LineItem records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter LineItem records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "display",
            "in": "query",
            "description": "Set this flag to true to return only LineItems displayed on the bill.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exclude_ids[]",
            "in": "query",
            "description": "Array containing LineItem identifiers that should be excluded from the query.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_ordering",
            "in": "query",
            "description": "Filters LineItem records to match given group ordering.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter LineItem records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "The kind of LineItem.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LineItem records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a LineItem. The list will be filtered to include only the LineItem records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `description` or `note` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter LineItem records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LineItem_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/line_items/{id}.json": {
      "patch": {
        "tags": [
          "Line Items"
        ],
        "summary": "Update a single LineItem",
        "operationId": "LineItem#update",
        "description": "Outlines the parameters and data fields used when updating a single LineItem",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the LineItem.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LineItem_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Line Items",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "description": "The specific type of activity which is associated with the LineItem."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "description": "The specific type of activity which is associated with the LineItem."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "bill": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Bill associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The LineItem date."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the LineItem."
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "number",
                            "format": "double",
                            "description": "Discount rate for the LineItem."
                          },
                          "type": {
                            "type": "boolean",
                            "description": "Discount type. This should be set to one of: 'percentage' or 'money'."
                          }
                        }
                      },
                      "group_ordering": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The LineItem group ordering."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "Expense",
                          "Service",
                          "Product"
                        ],
                        "description": "The specific type of activity which is associated with the LineItem."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the LineItem. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The note attached to the LineItem."
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the LineItem."
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "Quantity of the LineItem."
                      },
                      "secondary_taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem is secondary taxable."
                      },
                      "taxable": {
                        "type": "boolean",
                        "description": "Whether the LineItem taxable."
                      },
                      "update_original_record": {
                        "type": "boolean",
                        "description": "Whether the associated activity will be updated."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Line Items"
        ],
        "summary": "Delete a single LineItem",
        "operationId": "LineItem#destroy",
        "description": "A LineItem can not be deleted if it's Bill is not editable",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the LineItem.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/log_entries.json": {
      "get": {
        "tags": [
          "Log Entries"
        ],
        "summary": "Return the data for all LogEntries",
        "operationId": "LogEntry#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LogEntries",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter LogEntry records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter LogEntry records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LogEntry records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the LogEntry records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "accessed_at(asc)",
                "accessed_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter LogEntry records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matters/{matter_id}/client.json": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Return the client data for a single matter",
        "operationId": "Client#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Client",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matter_id",
            "in": "path",
            "description": "Filters Client data by matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Client_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/matters/{matter_id}/related_contacts.json": {
      "get": {
        "tags": [
          "Related Contacts"
        ],
        "summary": "Return the related contact data for a single matter",
        "operationId": "RelatedContacts#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all RelatedContacts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of RelatedContacts records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "path",
            "description": "Filters RelatedContacts data by matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the RelatedContacts records by the given field. Note that `id` is ordered by the `id` of the nested Relationship record. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RelatedContacts_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matters/{matter_id}/contacts.json": {
      "get": {
        "tags": [
          "Matter Contacts"
        ],
        "summary": "Return the related contact data for a single matter",
        "operationId": "MatterContacts#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all MatterContacts",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "IDs of custom fields to include in results.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of MatterContacts records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "path",
            "description": "Filters contact data by matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the MatterContacts records by the given field. Note that `id` is ordered by the `id` of the nested Relationship record. Default: `is_client(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "is_client(asc)",
                "is_client(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MatterContacts_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matters.json": {
      "get": {
        "tags": [
          "Matters"
        ],
        "summary": "Return the data for all Matters",
        "operationId": "Matter#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Matters",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billable",
            "in": "query",
            "description": "Filter Matter records to those which are billable.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "close_date[]",
            "in": "query",
            "description": "Filter Matter records by the close date. The date should be provided in the format YYYY-MM-DD.\n\ne.g. `?close_date==2020-01-01`, `?close_date=<=2021-12-31`\n\nYou can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.\n\ne.g. `?close_date[]=>=2020-01-01&close_date[]=<=2021-12-31`\n\nNote that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                ">DATE",
                ">=DATE",
                "=DATE",
                "<=DATE",
                "<DATE"
              ]
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Matter records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "custom_field_values",
            "in": "query",
            "description": "Filter records to only those with the given custom field(s) set. The value is compared using the operator provided, or,\nif the value type only supports one operator, the supported operator is used. In the latter case, no check for operator is performed on the input string.\nThe key for the custom field value filter is the custom_field.id. e.g. `custom_field_values[12345]`\nIf an operator is used for a type that does not support it, an `400 Bad Request` is returned.\n\n*Supported operators:*\n* `checkbox`, `contact`, `matter`, `picklist` : `=`\n\ne.g. `?custom_field_values[1]=42`\n\n* `currency`, `date`, `time`, `numeric` : `=`, `<`, `>`, `<=`, `>=`\n\ne.g. `?custom_field_values[1]=>=105.4`\n\n* `email`, `text_area`, `text_line`, `url` : `=`\n\ne.g. `?custom_field_values[1]=url_encoded`\n\n*Multiple conditions for the same custom field:*\n\nIf you want to use more than one operator to filter a custom field, you can do so by passing in an array of values.\ne.g. `?custom_field_values[1]=[<=50, >=45]`\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "=",
                "<",
                ">",
                "<=",
                ">="
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grant_id",
            "in": "query",
            "description": "The unique identifier for a single Grant. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The unique identifier for a single Group. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Matter records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Matter records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "notification_event_subscriber_user_id",
            "in": "query",
            "description": "The unique identifier for a single NotificationEventSubscriber. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "open_date[]",
            "in": "query",
            "description": "Filter Matter records by the open date. The date should be provided in the format YYYY-MM-DD.\n\ne.g. `?open_date==2020-01-01`, `?open_date=<=2021-12-31`\n\nYou can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.\n\ne.g. `?open_date[]=>=2020-01-01&open_date[]=<=2021-12-31`\n\nNote that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                ">DATE",
                ">=DATE",
                "=DATE",
                "<=DATE",
                "<DATE"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Matter records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "display_number(asc)",
                "display_number(desc)",
                "custom_number(asc)",
                "custom_number(desc)",
                "id(asc)",
                "id(desc)",
                "client.name(asc)",
                "client.name(desc)",
                "open_date(asc)",
                "open_date(desc)",
                "practice_area.name(asc)",
                "practice_area.name(desc)",
                "matter_stage.name(asc)",
                "matter_stage.name(desc)",
                "responsible_attorney.name(asc)",
                "responsible_attorney.name(desc)",
                "close_date(asc)",
                "close_date(desc)",
                "pending_date(asc)",
                "pending_date(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "created_at(asc)",
                "created_at(desc)",
                "statute_of_limitations.due_at(asc)",
                "statute_of_limitations.due_at(desc)",
                "originating_attorney.name(asc)",
                "originating_attorney.name(desc)",
                "grants(asc)",
                "grants(desc)",
                "matter_stage_updated_at(asc)",
                "matter_stage_updated_at(desc)"
              ]
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pending_date[]",
            "in": "query",
            "description": "Filter Matter records by the pending date. The date should be provided in the format YYYY-MM-DD.\n\ne.g. `?pending_date==2020-01-01`, `?pending_date=<=2021-12-31`\n\nYou can provide more than one value to narrow the results of this filter. You can do so by passing several individual values and appending `[]` to the parameter name.\n\ne.g. `?pending_date[]=>=2020-01-01&pending_date[]=<=2021-12-31`\n\nNote that, when providing multiple values for this filter, only Matter records that meet *all* filter conditions will be returned.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                ">DATE",
                ">=DATE",
                "=DATE",
                "<=DATE",
                "<DATE"
              ]
            }
          },
          {
            "name": "practice_area_id",
            "in": "query",
            "description": "The unique identifier for a single PracticeArea. The keyword `null` is not valid for this field. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `display_number`, `number` or `description` matching a given string, as well as the `first_name`, `last_name` or `name` of the associated client.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "responsible_staff_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Matter records to those with a given status. It accepts comma-separated statuses, e.g. `open,pending`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "pending"
              ]
            }
          },
          {
            "name": "subscriber_user_id",
            "in": "query",
            "description": "The unique identifier for a single NotificationEventSubscriber. Use the keyword `null` to match those without a Matter. The list will be filtered to include only the Matter records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Matter records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Matter_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Matters"
        ],
        "summary": "Create a new Matter",
        "operationId": "Matter#create",
        "description": "Outlines the parameters and data fields used when creating a new Matter",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Matter_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Matters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            }
                          },
                          "required": [
                            "contact_id",
                            "split_portion"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            }
                          },
                          "required": [
                            "contact_id",
                            "split_portion"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "custom_field_set"
                          ]
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "value",
                            "custom_field"
                          ]
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "user",
                                "rate"
                              ]
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "contact"
                          ]
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            }
                          },
                          "required": [
                            "contact_id",
                            "split_portion"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "duration_value",
                                "duration_unit",
                                "notification_method"
                              ]
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          },
                          "required": [
                            "task_template_list"
                          ]
                        }
                      }
                    },
                    "required": [
                      "client",
                      "description"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/matters/{id}.json": {
      "get": {
        "tags": [
          "Matters"
        ],
        "summary": "Return the data for a single Matter",
        "operationId": "Matter#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Matter",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Matter_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Matters"
        ],
        "summary": "Update a single Matter",
        "operationId": "Matter#update",
        "description": "Outlines the parameters and data fields used when updating a single Matter",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_ids[]",
            "in": "query",
            "description": "Filter Matter's custom_field_values to only include values for the given custom field unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Matter_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Matters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "If this flag is set to `true`, the trust balance notification will be deleted from the Matter."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id for the payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "If this flag is set to `true`, the split invoice payer will be deleted from the Matter."
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "If this flag is set to `true`, the trust balance notification will be deleted from the Matter."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id for the payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "If this flag is set to `true`, the split invoice payer will be deleted from the Matter."
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "billable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not the matter is billable."
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "client_reference": {
                        "type": "string",
                        "description": "Client Reference string for external uses."
                      },
                      "close_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to closed. (Expects an ISO-8601 date)."
                      },
                      "currency": {
                        "type": "object",
                        "description": "Currency of the matter"
                      },
                      "custom_field_set_associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldSetAssociation associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "display_order": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The order to display the CustomFieldSet in a Matter. If not specified, it is added as the last CustomFieldSet of the Matter."
                            },
                            "custom_field_set": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomFieldSet associated with the CustomFieldSetAssociation. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldSetAssociation is present, the CustomFieldSetAssociation is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_field_values": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "The value of the CustomFieldValue."
                            },
                            "custom_field": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single CustomField associated with the CustomFieldValue. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single CustomFieldValue associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated CustomFieldValue is present, the CustomFieldValue is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "custom_rate": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FlatRate",
                              "HourlyRate",
                              "ContingencyFee"
                            ],
                            "description": "The type of custom rate for the Matter."
                          },
                          "rates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single User associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "award": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The full amount of the award given. Only valid for ContingencyFee. If given as an empty string, it will reset the ContingencyFee into the unawarded state."
                                },
                                "note": {
                                  "type": "string",
                                  "description": "Detailed description of the rate. Only valid for ContingencyFee."
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The date the rate is for. Only valid for ContingencyFee. (Expects an ISO-8601 date)."
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "If `type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter.\n"
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Rate associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Rate is present, the Rate is deleted from the Matter."
                                },
                                "activity_description": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single ActivityDescription associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "group": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single Group associated with the Rate. The keyword `null` is not valid for this field."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Matter."
                      },
                      "display_number": {
                        "type": "string",
                        "description": "Matter reference and label. Depending on the account's manual_matter_numbering setting, this is either read only (generated), or customizable."
                      },
                      "evergreen_retainer": {
                        "type": "object",
                        "properties": {
                          "minimum_threshold": {
                            "type": "number",
                            "format": "double",
                            "description": "The trust balance threshold for the Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
                          },
                          "_destroy": {
                            "type": "boolean",
                            "description": "If this flag is set to `true`, the trust balance notification will be deleted from the Matter."
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "the `id` of a User who will receive the trust balance notification."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "Used to remove an existing User as a recipient of the trust balance notification."
                                }
                              }
                            }
                          }
                        }
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Group associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the Matter."
                      },
                      "matter_budget": {
                        "type": "object",
                        "properties": {
                          "_destroy": {
                            "type": "boolean",
                            "description": "Determines whether the matter budget associated with the matter should be destroyed. Only users with matter budget destroy capabilities can destroy matter budgets."
                          },
                          "budget": {
                            "type": "number",
                            "format": "double",
                            "description": "The amount allocated for the matter."
                          },
                          "include_expenses": {
                            "type": "boolean",
                            "description": "Determines whether the budget includes expenses in the calculation."
                          },
                          "notification_threshold": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Percentage of the budget when it starts notifying users."
                          },
                          "notify_users": {
                            "type": "boolean",
                            "default": false,
                            "description": "Determine whether to notify users when the matter reaches the notification threshold."
                          }
                        }
                      },
                      "matter_stage": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single MatterStage associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "open_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to open. (Expects an ISO-8601 date)."
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "pending_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Matter was set to pending. (Expects an ISO-8601 date)."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Matter. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "relationships": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Describe the relationship between a Contact and a Matter."
                            },
                            "contact": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Relationship associated with the Matter. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Relationship is present, the Relationship is deleted from the Matter."
                            }
                          }
                        }
                      },
                      "reset_matter_number": {
                        "type": "boolean",
                        "default": false,
                        "description": "Defaults to false. Resets the matter's number based on the account's matter numbering scheme."
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_staff": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Matter. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "split_invoice_payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Contact id for the matter payer."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id for the payer."
                            },
                            "send_to_bill_recipients": {
                              "type": "boolean",
                              "description": "Boolean indication to send a split invoice to all bill recipients."
                            },
                            "split_portion": {
                              "type": "number",
                              "format": "double",
                              "description": "The split portion for the payer."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "If this flag is set to `true`, the split invoice payer will be deleted from the Matter."
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed",
                          "pending"
                        ],
                        "description": "Matter status."
                      },
                      "statute_of_limitations": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "in_progress",
                              "in_review",
                              "complete"
                            ],
                            "description": "The task status of Statue of Limitations. Users without advanced tasks are allowed to select `Complete' or `Pending` only."
                          },
                          "due_at": {
                            "type": "string",
                            "format": "date",
                            "description": "The due date of Statute of Limitations. (Expects an ISO-8601 date)."
                          },
                          "reminders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "duration_value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time measured in `duration_unit` to remind user before the subject."
                                },
                                "duration_unit": {
                                  "type": "string",
                                  "description": "Unit to measure the duration value in."
                                },
                                "notification_method": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                                    }
                                  }
                                },
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single Reminder associated with the Matter. The keyword `null` is not valid for this field."
                                },
                                "_destroy": {
                                  "type": "boolean",
                                  "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated Reminder is present, the Reminder is deleted from the Matter."
                                }
                              }
                            }
                          }
                        }
                      },
                      "task_template_list_instances": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "task_template_list": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplateListInstance. The keyword `null` is not valid for this field."
                                }
                              }
                            },
                            "assignee_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The id of the user to assign the task template list to."
                            },
                            "notify_assignees": {
                              "type": "boolean",
                              "description": "Whether or not task list assignees should be notified when the task list is assigned to a matter."
                            },
                            "due_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Due date of the tasks. (Expects an ISO-8601 date)."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Matters"
        ],
        "summary": "Delete a single Matter",
        "operationId": "Matter#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Matter",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Matter.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/matter_stages.json": {
      "get": {
        "tags": [
          "Matter Stages"
        ],
        "summary": "Return the data for all MatterStages",
        "operationId": "MatterStage#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all MatterStages",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter MatterStage records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter MatterStage records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of MatterStage records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "practice_area_id",
            "in": "query",
            "description": "The unique identifier for a single PracticeArea. The keyword `null` is not valid for this field. The list will be filtered to include only the MatterStage records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter MatterStage records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MatterStage_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/medical_records/{id}.json": {
      "patch": {
        "tags": [
          "Medical Records"
        ],
        "summary": "Updating a Medical Record",
        "operationId": "MedicalRecord#update",
        "description": "Outlines the parameters and data fields used when updating a single MedicalRecord",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MedicalRecord.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecord_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Medical Records",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for Medical Record."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for Medical Record."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for Medical Record."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for Medical Record."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for Medical Record."
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for Medical Record."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Medical Records"
        ],
        "summary": "Destroying a Medical Record",
        "operationId": "MedicalRecord#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single MedicalRecord",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the MedicalRecord.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/medical_records_details.json": {
      "get": {
        "tags": [
          "Medical Records Details"
        ],
        "summary": "Return the data for all Medical Records Details",
        "operationId": "MedicalRecordsRequest#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Medical Records Details\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter MedicalRecordsRequest records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter MedicalRecordsRequest records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Medical Records Detail records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatment_end_date",
            "in": "query",
            "description": "Filters Medical Records data by treatment end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "treatment_start_date",
            "in": "query",
            "description": "Filters Medical Records data by treatment start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter MedicalRecordsRequest records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsRequest_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Medical Records Details"
        ],
        "summary": "Creating a Medical Records Detail, Medical Records and Medical Bills",
        "operationId": "MedicalRecordsRequest#create",
        "description": "This endpoint allows a creation of a Medical Records Detail, multiple Medical Records and Medical Bills.\nMedical Liens can also be created as a property under Medical Bills.\n\nReference the payload to see how the records are being passed in.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsRequest_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Medical Records Details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of the matter that the Medical Records Detail belongs to."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                },
                                "required": [
                                  "amount",
                                  "holder_id",
                                  "mark_as_lien"
                                ]
                              }
                            }
                          },
                          "required": [
                            "adjustment",
                            "amount",
                            "balance",
                            "name",
                            "mark_balance_type_as"
                          ]
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          },
                          "required": [
                            "document_id"
                          ]
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    },
                    "required": [
                      "bills_status",
                      "in_treatment",
                      "matter_id",
                      "medical_provider_id",
                      "records_status"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of the matter that the Medical Records Detail belongs to."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                },
                                "required": [
                                  "amount",
                                  "holder_id",
                                  "mark_as_lien"
                                ]
                              }
                            }
                          },
                          "required": [
                            "adjustment",
                            "amount",
                            "balance",
                            "name",
                            "mark_balance_type_as"
                          ]
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          },
                          "required": [
                            "document_id"
                          ]
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    },
                    "required": [
                      "bills_status",
                      "in_treatment",
                      "matter_id",
                      "medical_provider_id",
                      "records_status"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "matter_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of the matter that the Medical Records Detail belongs to."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                },
                                "required": [
                                  "amount",
                                  "holder_id",
                                  "mark_as_lien"
                                ]
                              }
                            }
                          },
                          "required": [
                            "adjustment",
                            "amount",
                            "balance",
                            "name",
                            "mark_balance_type_as"
                          ]
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          },
                          "required": [
                            "document_id"
                          ]
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    },
                    "required": [
                      "bills_status",
                      "in_treatment",
                      "matter_id",
                      "medical_provider_id",
                      "records_status"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/medical_records_details/{id}.json": {
      "get": {
        "tags": [
          "Medical Records Details"
        ],
        "summary": "Return the data for a single Medical Records Detail",
        "operationId": "MedicalRecordsRequest#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Medical Records Details\n",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Medical Records Detail.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsRequest_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Medical Records Details"
        ],
        "summary": "Updating a Medical Records Detail",
        "operationId": "MedicalRecordsRequest#update",
        "description": "If there are records being passed into the Medical Records or Medical Bills parameter they will be treated\nas new records and new Medical Records / Medical Bills will be created.\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Medical Records Detail.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalRecordsRequest_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Medical Records Details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          }
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          }
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "bills_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Bills. (Expects an ISO-8601 date)."
                      },
                      "bills_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Bills."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the Medical Records Detail."
                      },
                      "in_treatment": {
                        "type": "boolean",
                        "description": "True or false value to record if the treatment has been completed."
                      },
                      "medical_bills": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adjustment": {
                              "type": "number",
                              "format": "double",
                              "description": "Adjustment for Medical Bill."
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Amount for Medical Bill."
                            },
                            "balance": {
                              "type": "number",
                              "format": "double",
                              "description": "Balance for Medical Bill."
                            },
                            "bill_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "bill_received_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Bill received date for Medical Bill. (Expects an ISO-8601 date)."
                            },
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name for Medical Bill."
                            },
                            "mark_balance_type_as": {
                              "type": "string",
                              "enum": [
                                "lien",
                                "outstanding_balance",
                                "neither"
                              ],
                              "description": "Mark balance as lien, outstanding balance, or neither"
                            },
                            "payers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Lien amount."
                                  },
                                  "holder_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The unique identifier for a single Damage associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                                  },
                                  "mark_as_lien": {
                                    "type": "boolean",
                                    "description": "Mark record as Lien."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "medical_provider_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The unique identifier for a single Medical Provider associated with this Medical Records Detail."
                      },
                      "medical_records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "document_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single MedicalRecord associated with the MedicalRecordsRequest. The keyword `null` is not valid for this field."
                            },
                            "end_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date for Medical Record."
                            },
                            "start_date": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date for Medical Record."
                            }
                          }
                        }
                      },
                      "records_follow_up_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Follow up date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_request_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Requested date for Medical Records. (Expects an ISO-8601 date)."
                      },
                      "records_status": {
                        "type": "string",
                        "enum": [
                          "not_yet_requested",
                          "requested",
                          "received",
                          "incomplete",
                          "certified"
                        ],
                        "description": "Current status for the Medical Records."
                      },
                      "treatment_end_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date for the treatment. (Expects an ISO-8601 date)."
                      },
                      "treatment_start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date for the treatment. (Expects an ISO-8601 date)."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Medical Records Details"
        ],
        "summary": "Destroying a Medical Records Detail",
        "operationId": "MedicalRecordsRequest#destroy",
        "description": "When a Medical Records Detail is destroyed, the child records, such as Medical Records, Medical Bills and Liens\nwill also be destroyed in the same transaction.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Medical Records Detail.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/medical_bills/{id}.json": {
      "patch": {
        "tags": [
          "Medical Bills"
        ],
        "summary": "Updating a Medical Bill",
        "operationId": "MedicalBill#update",
        "description": "Outlines the parameters and data fields used when updating a single Medical Bill\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Medical Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalBill_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Medical Bills",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "adjustment": {
                        "type": "number",
                        "format": "double",
                        "description": "Adjustment"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "Balance"
                      },
                      "bill_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Date (Expects an ISO-8601 date)."
                      },
                      "bill_received_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Received Date (Expects an ISO-8601 date)."
                      },
                      "mark_balance_type_as": {
                        "type": "string",
                        "enum": [
                          "lien",
                          "outstanding_balance",
                          "neither"
                        ],
                        "description": "Mark balance as lien, outstanding balance, or neither"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name"
                      },
                      "payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Lien amount."
                            },
                            "holder_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Lien holder ID"
                            },
                            "mark_as_lien": {
                              "type": "boolean",
                              "description": "Mark record as Lien."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "adjustment": {
                        "type": "number",
                        "format": "double",
                        "description": "Adjustment"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "Balance"
                      },
                      "bill_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Date (Expects an ISO-8601 date)."
                      },
                      "bill_received_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Received Date (Expects an ISO-8601 date)."
                      },
                      "mark_balance_type_as": {
                        "type": "string",
                        "enum": [
                          "lien",
                          "outstanding_balance",
                          "neither"
                        ],
                        "description": "Mark balance as lien, outstanding balance, or neither"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name"
                      },
                      "payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Lien amount."
                            },
                            "holder_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Lien holder ID"
                            },
                            "mark_as_lien": {
                              "type": "boolean",
                              "description": "Mark record as Lien."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "adjustment": {
                        "type": "number",
                        "format": "double",
                        "description": "Adjustment"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount"
                      },
                      "balance": {
                        "type": "number",
                        "format": "double",
                        "description": "Balance"
                      },
                      "bill_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Date (Expects an ISO-8601 date)."
                      },
                      "bill_received_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Bill Received Date (Expects an ISO-8601 date)."
                      },
                      "mark_balance_type_as": {
                        "type": "string",
                        "enum": [
                          "lien",
                          "outstanding_balance",
                          "neither"
                        ],
                        "description": "Mark balance as lien, outstanding balance, or neither"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name"
                      },
                      "payers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "description": "Lien amount."
                            },
                            "holder_id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Lien holder ID"
                            },
                            "mark_as_lien": {
                              "type": "boolean",
                              "description": "Mark record as Lien."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Medical Bills"
        ],
        "summary": "Destroying a Medical Bill",
        "operationId": "MedicalBill#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Medical Bill\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Medical Bill.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/notes.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Return the data for all Notes",
        "operationId": "Note#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Notes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Note records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Note records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_time_entries",
            "in": "query",
            "description": "Filter Note records to those with or without associated time entries.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Note records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Note records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Note records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Note records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "date(asc)",
                "date(desc)",
                "author(asc)",
                "author(desc)",
                "updated_at(asc)",
                "updated_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search across note subject and detail.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter Note records to those of the specified type.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Matter",
                "Contact"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Note records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Note_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create a new Note",
        "operationId": "Note#create",
        "description": "Outlines the parameters and data fields used when creating a new Note",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Note_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Notes",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Contact\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Matter\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "matter",
                      "type"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Contact\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Matter\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "matter",
                      "type"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Contact\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Note. The keyword null is not valid for this field. Required only if the Note type is `\"Matter\"`."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            }
                          },
                          "required": [
                            "user_id"
                          ]
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Matter",
                          "Contact"
                        ],
                        "description": "Note type."
                      }
                    },
                    "required": [
                      "contact",
                      "matter",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/notes/{id}.json": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Return the data for a single Note",
        "operationId": "Note#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Note",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Note.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Note_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Update a single Note",
        "operationId": "Note#update",
        "description": "Outlines the parameters and data fields used when updating a single Note",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Note.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Note_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Notes",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Note."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Note."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the Note. (Expects an ISO-8601 date)."
                      },
                      "detail": {
                        "type": "string",
                        "description": "Note body in text. This Note supports rich text when setting the `detail_text_type` field to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "detail_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "description": "The type of text in the detail field."
                      },
                      "notification_event_subscribers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user_id": {
                              "type": "string",
                              "description": "The unique identifier for a User to be added as a notification event subscriber to the Note."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Unique id of this Note."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "Whether or not the notification event subscriber should be deleted."
                            }
                          }
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Note subject."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Delete a single Note",
        "operationId": "Note#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Note",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Note.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/outstanding_client_balances.json": {
      "get": {
        "tags": [
          "Outstanding Client Balances"
        ],
        "summary": "Return the data for all OutstandingClientBalances",
        "operationId": "OutstandingClientBalance#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all OutstandingClientBalances",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a OutstandingClientBalance. The list will be filtered to include only the OutstandingClientBalance records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_paid_end_date",
            "in": "query",
            "description": "Filter OutstandingClientBalance records for those whose bills have been paid before the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "last_paid_start_date",
            "in": "query",
            "description": "Filter OutstandingClientBalance records for those whose bills have been paid after the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of OutstandingClientBalance records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newest_bill_due_end_date",
            "in": "query",
            "description": "Filter OutstandingClientBalance records for the contact's newest bill due date before the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "newest_bill_due_start_date",
            "in": "query",
            "description": "Filter OutstandingClientBalance records for the contact's newest bill due date after the specified date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "originating_attorney_id",
            "in": "query",
            "description": "Filters OutstandingClientBalance records to those with matters that have a matching originating attorney.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "Filter OutstandingClientBalance records to those with matters that have a matching responsible attorney",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OutstandingClientBalance_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/practice_areas.json": {
      "get": {
        "tags": [
          "Practice Areas"
        ],
        "summary": "Return the data for all PracticeAreas",
        "operationId": "PracticeArea#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all PracticeAreas",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Filter PracticeArea records to those that match the given code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter PracticeArea records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter PracticeArea records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of PracticeArea records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "Filter PracticeArea records to exclude Legal Aid UK Practice Areas when activities exist on the matter.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter PracticeArea records to those that match the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the PracticeArea records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "category(asc)",
                "category(desc)",
                "code(asc)",
                "code(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter PracticeArea records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeArea_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Practice Areas"
        ],
        "summary": "Create a new PracticeArea",
        "operationId": "PracticeArea#create",
        "description": "Outlines the parameters and data fields used when creating a new PracticeArea",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeArea_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Practice Areas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/practice_areas/{id}.json": {
      "get": {
        "tags": [
          "Practice Areas"
        ],
        "summary": "Return the data for a single PracticeArea",
        "operationId": "PracticeArea#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single PracticeArea",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the PracticeArea.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeArea_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Practice Areas"
        ],
        "summary": "Update a single PracticeArea",
        "operationId": "PracticeArea#update",
        "description": "Outlines the parameters and data fields used when updating a single PracticeArea",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the PracticeArea.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PracticeArea_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Practice Areas",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "administrative",
                          "admiralty_and_maritime",
                          "anti_trust_and_competition",
                          "appellate",
                          "banking_and_finance",
                          "bankruptcy",
                          "business_formation_and_compliance",
                          "civil_litigation",
                          "civil_rights_and_constitutional",
                          "collections_and_debt",
                          "commercial_and_sale_of_goods",
                          "commercial_litigation",
                          "construction",
                          "consumer_protection",
                          "contracts",
                          "corporate_litigation",
                          "criminal",
                          "disability_and_social_security",
                          "education",
                          "elder",
                          "employment_and_labor",
                          "energy_and_environmental",
                          "ethics",
                          "family",
                          "food_and_drug",
                          "general_practice",
                          "government",
                          "healthcare",
                          "immigration",
                          "in_house_counsel",
                          "insurance",
                          "intellectual_property",
                          "international",
                          "juvenile",
                          "legal_aid",
                          "mediation_and_arbitration",
                          "medical_malpractice",
                          "military",
                          "multi_practice",
                          "non_profit_and_pro_bono",
                          "other",
                          "personal_injury",
                          "privacy_and_information_security",
                          "private_client",
                          "product_liability",
                          "real_estate",
                          "science_and_technology",
                          "securities_and_mergers_and_acquisitions",
                          "small_claims",
                          "sports_and_entertainment_and_gaming",
                          "tax",
                          "telecommunications",
                          "traffic_offenses",
                          "transportation",
                          "tribal",
                          "trusts",
                          "wills_and_estates",
                          "workers_compensation"
                        ],
                        "description": "The practice area category associated with the *PracticeArea*. The friendly display values corresponding to the enum strings:\n* Administrative\n* Admiralty / Maritime\n* Anti-Trust / Competition\n* Appellate\n* Banking / Finance\n* Bankruptcy\n* Business Formation / Compliance\n* Civil Litigation\n* Civil Rights / Constitutional\n* Collections & Debt\n* Commercial / Sale of Goods\n* Commercial Litigation\n* Construction\n* Consumer Protection\n* Contracts\n* Corporate Litigation\n* Criminal\n* Disability / Social Security\n* Education\n* Elder\n* Employment / Labor\n* Energy / Environmental\n* Ethics\n* Family\n* Food / Drug\n* General Practice\n* Government\n* Healthcare\n* Immigration\n* In-House Counsel\n* Insurance\n* Intellectual Property\n* International\n* Juvenile\n* Legal Aid\n* Mediation / Arbitration\n* Medical Malpractice\n* Military\n* Multi-Practice\n* Non-Profit / Pro Bono\n* Other\n* Personal Injury\n* Privacy / Information Security\n* Private Client\n* Product Liability\n* Real Estate\n* Science / Technology\n* Securities / Mergers & Acquisitions\n* Small Claims\n* Sports / Entertainment / Gaming\n* Tax\n* Telecommunications\n* Traffic Offenses\n* Transportation\n* Tribal\n* Trusts\n* Wills & Estates\n* Worker's Compensation\n"
                      },
                      "code": {
                        "type": "string",
                        "description": "The code attached to the PracticeArea."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the PracticeArea."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Practice Areas"
        ],
        "summary": "Delete a single PracticeArea",
        "operationId": "PracticeArea#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single PracticeArea",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the PracticeArea.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/relationships.json": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Return the data for all Relationships",
        "operationId": "Relationship#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Relationships",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. The keyword `null` is not valid for this field. The list will be filtered to include only the Relationship records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Relationship records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Relationship records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Relationship records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. The keyword `null` is not valid for this field. The list will be filtered to include only the Relationship records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Relationship records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Relationships"
        ],
        "summary": "Create a new Relationship",
        "operationId": "Relationship#create",
        "description": "Outlines the parameters and data fields used when creating a new Relationship",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Relationships",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/relationships/{id}.json": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Return the data for a single Relationship",
        "operationId": "Relationship#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Relationship",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Relationship.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Relationships"
        ],
        "summary": "Update a single Relationship",
        "operationId": "Relationship#update",
        "description": "Outlines the parameters and data fields used when updating a single Relationship",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Relationship.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Relationships",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "contact": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe the relationship between a Contact and a Matter."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Relationship. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Relationships"
        ],
        "summary": "Delete a single Relationship",
        "operationId": "Relationship#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Relationship",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Relationship.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reminders.json": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "Return the data for all Reminders",
        "operationId": "Reminder#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Reminders",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Reminder records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Reminder records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Reminder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "notification_method_id",
            "in": "query",
            "description": "The unique identifier for a single NotificationMethod. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Reminder records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "next_delivery_at(asc)",
                "next_delivery_at(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter Reminder records to those with a given state.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "initializing",
                "scheduling",
                "rescheduling",
                "scheduled",
                "attempting_delivery",
                "delivery_failed",
                "delivered",
                "delivery_skipped",
                "invalid_user"
              ]
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "The unique identifier for a single CalendarEntry or Task. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subject_type",
            "in": "query",
            "description": "Filter Reminder records to those of a given subject type, required if using subject_id.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "calendar_entry",
                "task"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Reminder records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The unique identifier for a single User. The keyword `null` is not valid for this field. The list will be filtered to include only the Reminder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reminders"
        ],
        "summary": "Create a new Reminder",
        "operationId": "Reminder#create",
        "description": "Outlines the parameters and data fields used when creating a new Reminder",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Reminders",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single CalendarEntry and Task associated with the Reminder. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "CalendarEntry",
                              "Task"
                            ],
                            "description": "Model type of the Subject."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "subject",
                      "notification_method"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/reminders/{id}.json": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "Return the data for a single Reminder",
        "operationId": "Reminder#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Reminder",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Reminder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Reminders"
        ],
        "summary": "Update a single Reminder",
        "operationId": "Reminder#update",
        "description": "Outlines the parameters and data fields used when updating a single Reminder",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Reminder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Reminders",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "duration_unit": {
                        "type": "string",
                        "enum": [
                          "weeks",
                          "days",
                          "hours",
                          "minutes"
                        ],
                        "description": "Unit to measure the duration value in."
                      },
                      "duration_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time measured in `duration_unit` to remind user before the subject."
                      },
                      "notification_method": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single NotificationMethod associated with the Reminder. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Reminders"
        ],
        "summary": "Delete a single Reminder",
        "operationId": "Reminder#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Reminder",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Reminder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}/download.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Download the completed Report",
        "operationId": "Report#download",
        "description": "Download the completed Report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Report.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Return the data for all Reports",
        "operationId": "Report#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Reports",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters Report data by category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "Filters Report data by date. (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Report records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Report records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filters Report data by kind.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "accounts_receivable",
                "accounts_receivable_aging",
                "bank_account_activity",
                "billing_history",
                "billing_rate",
                "client_activity",
                "client_ledger",
                "clio_payments_deposit",
                "clio_payments_ledger",
                "clio_payments_monthly_statement",
                "clio_payments_sales_tax",
                "clio_payments_transaction",
                "contact_information",
                "disbursement_payment",
                "fee_allocation",
                "general_ledger",
                "grant_matters",
                "invoice_payments_v2",
                "law_society_of_alberta",
                "law_society_of_alberta_al",
                "law_society_of_alberta_bar",
                "law_society_of_alberta_tl",
                "law_society_of_alberta_tt",
                "matter",
                "matter_balance_summary",
                "matter_productivity_by_user",
                "matters_by_responsible_attorney",
                "originating_attorney_revenue",
                "other_revenue",
                "productivity_by_client",
                "productivity_by_user",
                "revenue",
                "task_productivity_by_user",
                "task_progress_by_user",
                "trust_ledger",
                "trust_ledger_nsw",
                "trust_listing",
                "trust_management",
                "work_in_progress"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Report records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Filters Report data by format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for Report name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filters Report data by source.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filters Report data by state.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Report records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Report_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Create a new Report",
        "operationId": "Report#create",
        "description": "Outlines the parameters and data fields used when creating a new Report",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Report_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Reports",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "client": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Contact associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the Report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of Report will be generated."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "originating_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "responsible_attorney": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Filters Report data by date. (Expects an ISO-8601 date)."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User associated with the Report. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "year": {
                        "type": "string",
                        "description": "Filters Report data by year. Sets start_date and end_date. (Expects a year)."
                      }
                    },
                    "required": [
                      "format",
                      "kind"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/reports/{id}.json": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Return the data for a single Report",
        "operationId": "Report#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Report",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Report.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Report_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/report_presets/{id}/generate_report.json": {
      "post": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Generate a new report for a given preset",
        "operationId": "ReportPreset#generate_report",
        "description": "Generate a new report for a given preset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportPreset.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Report_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/report_presets.json": {
      "get": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Return the data for all ReportPresets",
        "operationId": "ReportPreset#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ReportPresets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters ReportPreset data by category.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "billing",
                "client",
                "compliance",
                "financial",
                "matter",
                "online_payments",
                "productivity",
                "revenue",
                "task"
              ]
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ReportPreset records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_schedule",
            "in": "query",
            "description": "Filters ReportPreset records to those that have or do not have a Report Schedule.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ReportPreset records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ReportPreset records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the ReportPreset records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at(asc)",
                "created_at(desc)",
                "last_generated_at(asc)",
                "last_generated_at(desc)",
                "last_modified_at(asc)",
                "last_modified_at(desc)",
                "name(asc)",
                "name(desc)",
                "next_scheduled_date(asc)",
                "next_scheduled_date(desc)"
              ]
            }
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Filters ReportPreset data by format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for ReportPreset name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule_frequency",
            "in": "query",
            "description": "Filters ReportPreset records to those that have a Report Schedule of the specified frequency.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ReportPreset records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPreset_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Create a new ReportPreset",
        "operationId": "ReportPreset#create",
        "description": "Outlines the parameters and data fields used when creating a new ReportPreset",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPreset_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Report Presets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    },
                    "required": [
                      "name",
                      "format",
                      "kind",
                      "options"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    },
                    "required": [
                      "name",
                      "format",
                      "kind",
                      "options"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    },
                    "required": [
                      "name",
                      "format",
                      "kind",
                      "options"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/report_presets/{id}.json": {
      "get": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Return the data for a single ReportPreset",
        "operationId": "ReportPreset#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ReportPreset",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportPreset.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPreset_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Update a single ReportPreset",
        "operationId": "ReportPreset#update",
        "description": "Outlines the parameters and data fields used when updating a single ReportPreset",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportPreset.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPreset_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Report Presets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "html",
                          "json",
                          "pdf",
                          "xlsx",
                          "zip"
                        ],
                        "description": "What format the report will be generated in."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "accounts_receivable",
                          "accounts_receivable_aging",
                          "bank_account_activity",
                          "billing_history",
                          "billing_rate",
                          "client_activity",
                          "client_ledger",
                          "clio_payments_deposit",
                          "clio_payments_ledger",
                          "clio_payments_monthly_statement",
                          "clio_payments_sales_tax",
                          "clio_payments_transaction",
                          "contact_information",
                          "disbursement_payment",
                          "fee_allocation",
                          "general_ledger",
                          "grant_matters",
                          "invoice_payments_v2",
                          "law_society_of_alberta",
                          "law_society_of_alberta_al",
                          "law_society_of_alberta_bar",
                          "law_society_of_alberta_tl",
                          "law_society_of_alberta_tt",
                          "matter",
                          "matter_balance_summary",
                          "matter_productivity_by_user",
                          "matters_by_responsible_attorney",
                          "originating_attorney_revenue",
                          "other_revenue",
                          "productivity_by_client",
                          "productivity_by_user",
                          "revenue",
                          "task_productivity_by_user",
                          "task_progress_by_user",
                          "trust_ledger",
                          "trust_ledger_nsw",
                          "trust_listing",
                          "trust_management",
                          "work_in_progress"
                        ],
                        "description": "What kind of report will be generated."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the ReportPreset."
                      },
                      "options": {
                        "type": "string",
                        "description": "What the report generation parameters are. See [Creating a Report Preset](#section/Creating-a-Report-Preset) for a sample request."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Report Presets"
        ],
        "summary": "Delete a single ReportPreset",
        "operationId": "ReportPreset#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ReportPreset",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportPreset.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/report_schedules.json": {
      "get": {
        "tags": [
          "Report Schedules"
        ],
        "summary": "Return the data for all ReportSchedules",
        "operationId": "ReportSchedule#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all ReportSchedules",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter ReportSchedule records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter ReportSchedule records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of ReportSchedule records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter ReportSchedule records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSchedule_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Report Schedules"
        ],
        "summary": "Create a new ReportSchedule",
        "operationId": "ReportSchedule#create",
        "description": "Outlines the parameters and data fields used when creating a new ReportSchedule",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSchedule_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Report Schedules",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    },
                    "required": [
                      "frequency",
                      "report_preset_id",
                      "time_of_day",
                      "time_zone"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    },
                    "required": [
                      "frequency",
                      "report_preset_id",
                      "time_of_day",
                      "time_zone"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    },
                    "required": [
                      "frequency",
                      "report_preset_id",
                      "time_of_day",
                      "time_zone"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/report_schedules/{id}.json": {
      "get": {
        "tags": [
          "Report Schedules"
        ],
        "summary": "Return the data for a single ReportSchedule",
        "operationId": "ReportSchedule#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single ReportSchedule",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportSchedule.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSchedule_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Report Schedules"
        ],
        "summary": "Update a single ReportSchedule",
        "operationId": "ReportSchedule#update",
        "description": "Outlines the parameters and data fields used when updating a single ReportSchedule",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportSchedule.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReportSchedule_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Report Schedules",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "day_of_month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, which day of the month the Report Schedule should run. 32 is used to represent the last day of the month."
                      },
                      "days_of_week": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "description": "If the frequency is weekly, which days of the week the Report Schedule should run. Values are 0 to 6, representing Sunday to Saturday."
                      },
                      "effective_from": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Report Schedule should be enabled. (Expects an ISO-8601 date)."
                      },
                      "every_no_of_months": {
                        "type": "integer",
                        "format": "int32",
                        "description": "If the frequency is monthly, how many months between each run of the Report Schedule."
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "daily",
                          "weekly",
                          "monthly"
                        ],
                        "description": "How often to run the Report Schedule."
                      },
                      "report_preset_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "What Report Preset the Report Schedule should use to generate a report."
                      },
                      "time_of_day": {
                        "type": "string",
                        "format": "date-time",
                        "description": "What time the Report Schedule should run. Although the entire datetime is sent, only the time information is used."
                      },
                      "time_zone": {
                        "type": "string",
                        "enum": [
                          "Africa/Abidjan",
                          "Africa/Accra",
                          "Africa/Addis_Ababa",
                          "Africa/Algiers",
                          "Africa/Asmara",
                          "Africa/Asmera",
                          "Africa/Bamako",
                          "Africa/Bangui",
                          "Africa/Banjul",
                          "Africa/Bissau",
                          "Africa/Blantyre",
                          "Africa/Brazzaville",
                          "Africa/Bujumbura",
                          "Africa/Cairo",
                          "Africa/Casablanca",
                          "Africa/Ceuta",
                          "Africa/Conakry",
                          "Africa/Dakar",
                          "Africa/Dar_es_Salaam",
                          "Africa/Djibouti",
                          "Africa/Douala",
                          "Africa/El_Aaiun",
                          "Africa/Freetown",
                          "Africa/Gaborone",
                          "Africa/Harare",
                          "Africa/Johannesburg",
                          "Africa/Juba",
                          "Africa/Kampala",
                          "Africa/Khartoum",
                          "Africa/Kigali",
                          "Africa/Kinshasa",
                          "Africa/Lagos",
                          "Africa/Libreville",
                          "Africa/Lome",
                          "Africa/Luanda",
                          "Africa/Lubumbashi",
                          "Africa/Lusaka",
                          "Africa/Malabo",
                          "Africa/Maputo",
                          "Africa/Maseru",
                          "Africa/Mbabane",
                          "Africa/Mogadishu",
                          "Africa/Monrovia",
                          "Africa/Nairobi",
                          "Africa/Ndjamena",
                          "Africa/Niamey",
                          "Africa/Nouakchott",
                          "Africa/Ouagadougou",
                          "Africa/Porto-Novo",
                          "Africa/Sao_Tome",
                          "Africa/Timbuktu",
                          "Africa/Tripoli",
                          "Africa/Tunis",
                          "Africa/Windhoek",
                          "America/Adak",
                          "America/Anchorage",
                          "America/Anguilla",
                          "America/Antigua",
                          "America/Araguaina",
                          "America/Argentina/Buenos_Aires",
                          "America/Argentina/Catamarca",
                          "America/Argentina/ComodRivadavia",
                          "America/Argentina/Cordoba",
                          "America/Argentina/Jujuy",
                          "America/Argentina/La_Rioja",
                          "America/Argentina/Mendoza",
                          "America/Argentina/Rio_Gallegos",
                          "America/Argentina/Salta",
                          "America/Argentina/San_Juan",
                          "America/Argentina/San_Luis",
                          "America/Argentina/Tucuman",
                          "America/Argentina/Ushuaia",
                          "America/Aruba",
                          "America/Asuncion",
                          "America/Atikokan",
                          "America/Atka",
                          "America/Bahia",
                          "America/Bahia_Banderas",
                          "America/Barbados",
                          "America/Belem",
                          "America/Belize",
                          "America/Blanc-Sablon",
                          "America/Boa_Vista",
                          "America/Bogota",
                          "America/Boise",
                          "America/Buenos_Aires",
                          "America/Cambridge_Bay",
                          "America/Campo_Grande",
                          "America/Cancun",
                          "America/Caracas",
                          "America/Catamarca",
                          "America/Cayenne",
                          "America/Cayman",
                          "America/Chicago",
                          "America/Chihuahua",
                          "America/Ciudad_Juarez",
                          "America/Coral_Harbour",
                          "America/Cordoba",
                          "America/Costa_Rica",
                          "America/Coyhaique",
                          "America/Creston",
                          "America/Cuiaba",
                          "America/Curacao",
                          "America/Danmarkshavn",
                          "America/Dawson",
                          "America/Dawson_Creek",
                          "America/Denver",
                          "America/Detroit",
                          "America/Dominica",
                          "America/Edmonton",
                          "America/Eirunepe",
                          "America/El_Salvador",
                          "America/Ensenada",
                          "America/Fort_Nelson",
                          "America/Fort_Wayne",
                          "America/Fortaleza",
                          "America/Glace_Bay",
                          "America/Godthab",
                          "America/Goose_Bay",
                          "America/Grand_Turk",
                          "America/Grenada",
                          "America/Guadeloupe",
                          "America/Guatemala",
                          "America/Guayaquil",
                          "America/Guyana",
                          "America/Halifax",
                          "America/Havana",
                          "America/Hermosillo",
                          "America/Indiana/Indianapolis",
                          "America/Indiana/Knox",
                          "America/Indiana/Marengo",
                          "America/Indiana/Petersburg",
                          "America/Indiana/Tell_City",
                          "America/Indiana/Vevay",
                          "America/Indiana/Vincennes",
                          "America/Indiana/Winamac",
                          "America/Indianapolis",
                          "America/Inuvik",
                          "America/Iqaluit",
                          "America/Jamaica",
                          "America/Jujuy",
                          "America/Juneau",
                          "America/Kentucky/Louisville",
                          "America/Kentucky/Monticello",
                          "America/Knox_IN",
                          "America/Kralendijk",
                          "America/La_Paz",
                          "America/Lima",
                          "America/Los_Angeles",
                          "America/Louisville",
                          "America/Lower_Princes",
                          "America/Maceio",
                          "America/Managua",
                          "America/Manaus",
                          "America/Marigot",
                          "America/Martinique",
                          "America/Matamoros",
                          "America/Mazatlan",
                          "America/Mendoza",
                          "America/Menominee",
                          "America/Merida",
                          "America/Metlakatla",
                          "America/Mexico_City",
                          "America/Miquelon",
                          "America/Moncton",
                          "America/Monterrey",
                          "America/Montevideo",
                          "America/Montreal",
                          "America/Montserrat",
                          "America/Nassau",
                          "America/New_York",
                          "America/Nipigon",
                          "America/Nome",
                          "America/Noronha",
                          "America/North_Dakota/Beulah",
                          "America/North_Dakota/Center",
                          "America/North_Dakota/New_Salem",
                          "America/Nuuk",
                          "America/Ojinaga",
                          "America/Panama",
                          "America/Pangnirtung",
                          "America/Paramaribo",
                          "America/Phoenix",
                          "America/Port-au-Prince",
                          "America/Port_of_Spain",
                          "America/Porto_Acre",
                          "America/Porto_Velho",
                          "America/Puerto_Rico",
                          "America/Punta_Arenas",
                          "America/Rainy_River",
                          "America/Rankin_Inlet",
                          "America/Recife",
                          "America/Regina",
                          "America/Resolute",
                          "America/Rio_Branco",
                          "America/Rosario",
                          "America/Santa_Isabel",
                          "America/Santarem",
                          "America/Santiago",
                          "America/Santo_Domingo",
                          "America/Sao_Paulo",
                          "America/Scoresbysund",
                          "America/Shiprock",
                          "America/Sitka",
                          "America/St_Barthelemy",
                          "America/St_Johns",
                          "America/St_Kitts",
                          "America/St_Lucia",
                          "America/St_Thomas",
                          "America/St_Vincent",
                          "America/Swift_Current",
                          "America/Tegucigalpa",
                          "America/Thule",
                          "America/Thunder_Bay",
                          "America/Tijuana",
                          "America/Toronto",
                          "America/Tortola",
                          "America/Vancouver",
                          "America/Virgin",
                          "America/Whitehorse",
                          "America/Winnipeg",
                          "America/Yakutat",
                          "America/Yellowknife",
                          "Antarctica/Casey",
                          "Antarctica/Davis",
                          "Antarctica/DumontDUrville",
                          "Antarctica/Macquarie",
                          "Antarctica/Mawson",
                          "Antarctica/McMurdo",
                          "Antarctica/Palmer",
                          "Antarctica/Rothera",
                          "Antarctica/South_Pole",
                          "Antarctica/Syowa",
                          "Antarctica/Troll",
                          "Antarctica/Vostok",
                          "Arctic/Longyearbyen",
                          "Asia/Aden",
                          "Asia/Almaty",
                          "Asia/Amman",
                          "Asia/Anadyr",
                          "Asia/Aqtau",
                          "Asia/Aqtobe",
                          "Asia/Ashgabat",
                          "Asia/Ashkhabad",
                          "Asia/Atyrau",
                          "Asia/Baghdad",
                          "Asia/Bahrain",
                          "Asia/Baku",
                          "Asia/Bangkok",
                          "Asia/Barnaul",
                          "Asia/Beirut",
                          "Asia/Bishkek",
                          "Asia/Brunei",
                          "Asia/Calcutta",
                          "Asia/Chita",
                          "Asia/Choibalsan",
                          "Asia/Chongqing",
                          "Asia/Chungking",
                          "Asia/Colombo",
                          "Asia/Dacca",
                          "Asia/Damascus",
                          "Asia/Dhaka",
                          "Asia/Dili",
                          "Asia/Dubai",
                          "Asia/Dushanbe",
                          "Asia/Famagusta",
                          "Asia/Gaza",
                          "Asia/Harbin",
                          "Asia/Hebron",
                          "Asia/Ho_Chi_Minh",
                          "Asia/Hong_Kong",
                          "Asia/Hovd",
                          "Asia/Irkutsk",
                          "Asia/Istanbul",
                          "Asia/Jakarta",
                          "Asia/Jayapura",
                          "Asia/Jerusalem",
                          "Asia/Kabul",
                          "Asia/Kamchatka",
                          "Asia/Karachi",
                          "Asia/Kashgar",
                          "Asia/Kathmandu",
                          "Asia/Katmandu",
                          "Asia/Khandyga",
                          "Asia/Kolkata",
                          "Asia/Krasnoyarsk",
                          "Asia/Kuala_Lumpur",
                          "Asia/Kuching",
                          "Asia/Kuwait",
                          "Asia/Macao",
                          "Asia/Macau",
                          "Asia/Magadan",
                          "Asia/Makassar",
                          "Asia/Manila",
                          "Asia/Muscat",
                          "Asia/Nicosia",
                          "Asia/Novokuznetsk",
                          "Asia/Novosibirsk",
                          "Asia/Omsk",
                          "Asia/Oral",
                          "Asia/Phnom_Penh",
                          "Asia/Pontianak",
                          "Asia/Pyongyang",
                          "Asia/Qatar",
                          "Asia/Qostanay",
                          "Asia/Qyzylorda",
                          "Asia/Rangoon",
                          "Asia/Riyadh",
                          "Asia/Saigon",
                          "Asia/Sakhalin",
                          "Asia/Samarkand",
                          "Asia/Seoul",
                          "Asia/Shanghai",
                          "Asia/Singapore",
                          "Asia/Srednekolymsk",
                          "Asia/Taipei",
                          "Asia/Tashkent",
                          "Asia/Tbilisi",
                          "Asia/Tehran",
                          "Asia/Tel_Aviv",
                          "Asia/Thimbu",
                          "Asia/Thimphu",
                          "Asia/Tokyo",
                          "Asia/Tomsk",
                          "Asia/Ujung_Pandang",
                          "Asia/Ulaanbaatar",
                          "Asia/Ulan_Bator",
                          "Asia/Urumqi",
                          "Asia/Ust-Nera",
                          "Asia/Vientiane",
                          "Asia/Vladivostok",
                          "Asia/Yakutsk",
                          "Asia/Yangon",
                          "Asia/Yekaterinburg",
                          "Asia/Yerevan",
                          "Atlantic/Azores",
                          "Atlantic/Bermuda",
                          "Atlantic/Canary",
                          "Atlantic/Cape_Verde",
                          "Atlantic/Faeroe",
                          "Atlantic/Faroe",
                          "Atlantic/Jan_Mayen",
                          "Atlantic/Madeira",
                          "Atlantic/Reykjavik",
                          "Atlantic/South_Georgia",
                          "Atlantic/St_Helena",
                          "Atlantic/Stanley",
                          "Australia/ACT",
                          "Australia/Adelaide",
                          "Australia/Brisbane",
                          "Australia/Broken_Hill",
                          "Australia/Canberra",
                          "Australia/Currie",
                          "Australia/Darwin",
                          "Australia/Eucla",
                          "Australia/Hobart",
                          "Australia/LHI",
                          "Australia/Lindeman",
                          "Australia/Lord_Howe",
                          "Australia/Melbourne",
                          "Australia/NSW",
                          "Australia/North",
                          "Australia/Perth",
                          "Australia/Queensland",
                          "Australia/South",
                          "Australia/Sydney",
                          "Australia/Tasmania",
                          "Australia/Victoria",
                          "Australia/West",
                          "Australia/Yancowinna",
                          "Brazil/Acre",
                          "Brazil/DeNoronha",
                          "Brazil/East",
                          "Brazil/West",
                          "CET",
                          "CST6CDT",
                          "Canada/Atlantic",
                          "Canada/Central",
                          "Canada/Eastern",
                          "Canada/Mountain",
                          "Canada/Newfoundland",
                          "Canada/Pacific",
                          "Canada/Saskatchewan",
                          "Canada/Yukon",
                          "Chile/Continental",
                          "Chile/EasterIsland",
                          "Cuba",
                          "EET",
                          "EST",
                          "EST5EDT",
                          "Egypt",
                          "Eire",
                          "Etc/GMT",
                          "Etc/GMT+0",
                          "Etc/GMT+1",
                          "Etc/GMT+10",
                          "Etc/GMT+11",
                          "Etc/GMT+12",
                          "Etc/GMT+2",
                          "Etc/GMT+3",
                          "Etc/GMT+4",
                          "Etc/GMT+5",
                          "Etc/GMT+6",
                          "Etc/GMT+7",
                          "Etc/GMT+8",
                          "Etc/GMT+9",
                          "Etc/GMT-0",
                          "Etc/GMT-1",
                          "Etc/GMT-10",
                          "Etc/GMT-11",
                          "Etc/GMT-12",
                          "Etc/GMT-13",
                          "Etc/GMT-14",
                          "Etc/GMT-2",
                          "Etc/GMT-3",
                          "Etc/GMT-4",
                          "Etc/GMT-5",
                          "Etc/GMT-6",
                          "Etc/GMT-7",
                          "Etc/GMT-8",
                          "Etc/GMT-9",
                          "Etc/GMT0",
                          "Etc/Greenwich",
                          "Etc/UCT",
                          "Etc/UTC",
                          "Etc/Universal",
                          "Etc/Zulu",
                          "Europe/Amsterdam",
                          "Europe/Andorra",
                          "Europe/Astrakhan",
                          "Europe/Athens",
                          "Europe/Belfast",
                          "Europe/Belgrade",
                          "Europe/Berlin",
                          "Europe/Bratislava",
                          "Europe/Brussels",
                          "Europe/Bucharest",
                          "Europe/Budapest",
                          "Europe/Busingen",
                          "Europe/Chisinau",
                          "Europe/Copenhagen",
                          "Europe/Dublin",
                          "Europe/Gibraltar",
                          "Europe/Guernsey",
                          "Europe/Helsinki",
                          "Europe/Isle_of_Man",
                          "Europe/Istanbul",
                          "Europe/Jersey",
                          "Europe/Kaliningrad",
                          "Europe/Kiev",
                          "Europe/Kirov",
                          "Europe/Kyiv",
                          "Europe/Lisbon",
                          "Europe/Ljubljana",
                          "Europe/London",
                          "Europe/Luxembourg",
                          "Europe/Madrid",
                          "Europe/Malta",
                          "Europe/Mariehamn",
                          "Europe/Minsk",
                          "Europe/Monaco",
                          "Europe/Moscow",
                          "Europe/Nicosia",
                          "Europe/Oslo",
                          "Europe/Paris",
                          "Europe/Podgorica",
                          "Europe/Prague",
                          "Europe/Riga",
                          "Europe/Rome",
                          "Europe/Samara",
                          "Europe/San_Marino",
                          "Europe/Sarajevo",
                          "Europe/Saratov",
                          "Europe/Simferopol",
                          "Europe/Skopje",
                          "Europe/Sofia",
                          "Europe/Stockholm",
                          "Europe/Tallinn",
                          "Europe/Tirane",
                          "Europe/Tiraspol",
                          "Europe/Ulyanovsk",
                          "Europe/Uzhgorod",
                          "Europe/Vaduz",
                          "Europe/Vatican",
                          "Europe/Vienna",
                          "Europe/Vilnius",
                          "Europe/Volgograd",
                          "Europe/Warsaw",
                          "Europe/Zagreb",
                          "Europe/Zaporozhye",
                          "Europe/Zurich",
                          "Factory",
                          "GB",
                          "GB-Eire",
                          "GMT",
                          "GMT+0",
                          "GMT-0",
                          "GMT0",
                          "Greenwich",
                          "HST",
                          "Hongkong",
                          "Iceland",
                          "Indian/Antananarivo",
                          "Indian/Chagos",
                          "Indian/Christmas",
                          "Indian/Cocos",
                          "Indian/Comoro",
                          "Indian/Kerguelen",
                          "Indian/Mahe",
                          "Indian/Maldives",
                          "Indian/Mauritius",
                          "Indian/Mayotte",
                          "Indian/Reunion",
                          "Iran",
                          "Israel",
                          "Jamaica",
                          "Japan",
                          "Kwajalein",
                          "Libya",
                          "MET",
                          "MST",
                          "MST7MDT",
                          "Mexico/BajaNorte",
                          "Mexico/BajaSur",
                          "Mexico/General",
                          "NZ",
                          "NZ-CHAT",
                          "Navajo",
                          "PRC",
                          "PST8PDT",
                          "Pacific/Apia",
                          "Pacific/Auckland",
                          "Pacific/Bougainville",
                          "Pacific/Chatham",
                          "Pacific/Chuuk",
                          "Pacific/Easter",
                          "Pacific/Efate",
                          "Pacific/Enderbury",
                          "Pacific/Fakaofo",
                          "Pacific/Fiji",
                          "Pacific/Funafuti",
                          "Pacific/Galapagos",
                          "Pacific/Gambier",
                          "Pacific/Guadalcanal",
                          "Pacific/Guam",
                          "Pacific/Honolulu",
                          "Pacific/Johnston",
                          "Pacific/Kanton",
                          "Pacific/Kiritimati",
                          "Pacific/Kosrae",
                          "Pacific/Kwajalein",
                          "Pacific/Majuro",
                          "Pacific/Marquesas",
                          "Pacific/Midway",
                          "Pacific/Nauru",
                          "Pacific/Niue",
                          "Pacific/Norfolk",
                          "Pacific/Noumea",
                          "Pacific/Pago_Pago",
                          "Pacific/Palau",
                          "Pacific/Pitcairn",
                          "Pacific/Pohnpei",
                          "Pacific/Ponape",
                          "Pacific/Port_Moresby",
                          "Pacific/Rarotonga",
                          "Pacific/Saipan",
                          "Pacific/Samoa",
                          "Pacific/Tahiti",
                          "Pacific/Tarawa",
                          "Pacific/Tongatapu",
                          "Pacific/Truk",
                          "Pacific/Wake",
                          "Pacific/Wallis",
                          "Pacific/Yap",
                          "Poland",
                          "Portugal",
                          "ROC",
                          "ROK",
                          "Singapore",
                          "Turkey",
                          "UCT",
                          "US/Alaska",
                          "US/Aleutian",
                          "US/Arizona",
                          "US/Central",
                          "US/East-Indiana",
                          "US/Eastern",
                          "US/Hawaii",
                          "US/Indiana-Starke",
                          "US/Michigan",
                          "US/Mountain",
                          "US/Pacific",
                          "US/Samoa",
                          "UTC",
                          "Universal",
                          "W-SU",
                          "WET",
                          "Zulu"
                        ],
                        "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should be run."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Report Schedules"
        ],
        "summary": "Delete a single ReportSchedule",
        "operationId": "ReportSchedule#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single ReportSchedule",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the ReportSchedule.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/settings/billing.json": {
      "get": {
        "tags": [
          "Billing Settings"
        ],
        "summary": "Return the billing settings",
        "operationId": "BillingSetting#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single BillingSetting",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration string for time rounding, conforming to the Chronic date parser. For example: '3h' or '2:15'.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BillingSetting_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/settings/text_snippets.json": {
      "get": {
        "tags": [
          "Text Snippets"
        ],
        "summary": "Return all text snippets",
        "operationId": "TextSnippet#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TextSnippets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter TextSnippet records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter TextSnippet records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of TextSnippet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the TextSnippet records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "snippet(asc)",
                "snippet(desc)",
                "phrase(asc)",
                "phrase(desc)",
                "whole_word(asc)",
                "whole_word(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `snippet` or `phrase` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter TextSnippet records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippet_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Text Snippets"
        ],
        "summary": "Create a text snippet",
        "operationId": "TextSnippet#create",
        "description": "Outlines the parameters and data fields used when creating a new TextSnippet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Text Snippets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    },
                    "required": [
                      "snippet",
                      "phrase"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/settings/text_snippets/{id}.json": {
      "get": {
        "tags": [
          "Text Snippets"
        ],
        "summary": "Return the data for the text snippet",
        "operationId": "TextSnippet#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TextSnippet",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TextSnippet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Text Snippets"
        ],
        "summary": "Update a text snippet",
        "operationId": "TextSnippet#update",
        "description": "Outlines the parameters and data fields used when updating a single TextSnippet",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TextSnippet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TextSnippet_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Text Snippets",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "phrase": {
                        "type": "string",
                        "description": "The phrase expanded to from a TextSnippet."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "The abbreviation that expands to a phrase."
                      },
                      "whole_word": {
                        "type": "boolean",
                        "description": "Whether or not the TextSnippet requires a space after to trigger the expansion."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Text Snippets"
        ],
        "summary": "Destroy a text snippet",
        "operationId": "TextSnippet#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TextSnippet",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TextSnippet.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tasks.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Return the data for all Tasks",
        "operationId": "Task#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Tasks",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "description": "The unique identifier for a single User or Contact. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assignee_type",
            "in": "query",
            "description": "Filter Task records to those with a specific assignee. Must be passed if filtering by assignee.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "contact"
              ]
            }
          },
          {
            "name": "assigner_id",
            "in": "query",
            "description": "The unique identifier for a single User. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cascading_source_id",
            "in": "query",
            "description": "Filter Task records to those with a parent task that has the specified ID.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "complete",
            "in": "query",
            "description": "Filter Task records to those which are complete or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Task records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "due_at_from",
            "in": "query",
            "description": "Start of date range when querying by due_at in a range. (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_at_present",
            "in": "query",
            "description": "Filter Task records to those that have a due date specified, or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "due_at_to",
            "in": "query",
            "description": "End of date range when querying by due_at in a range. (Expects an ISO-8601 date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Task records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Task records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Task records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "task_type.name(asc)",
                "task_type.name(desc)",
                "id(asc)",
                "id(desc)",
                "priority(asc)",
                "priority(desc)",
                "matter.display_number(asc)",
                "matter.display_number(desc)",
                "due_at(asc)",
                "due_at(desc)",
                "due_at_strict(asc)",
                "due_at_strict(desc)",
                "completed_at(asc)",
                "completed_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "description": "Filter Task records to those with the given permission. Returns all tasks by default.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public"
              ]
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Filter Task records to those with the given priority.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "normal",
                "low"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` or `description` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsible_attorney_id",
            "in": "query",
            "description": "Filter Task records to those that have an associated matter with a responsible attorney ID.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Task records to those with the given status. Users without advanced tasks enabled may only specify 'complete' or 'pending'.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_progress",
                "in_review",
                "complete"
              ]
            }
          },
          {
            "name": "statuses[]",
            "in": "query",
            "description": "Filter Task records to those with the given statuses. Users without advanced tasks enabled may only specify 'complete' or 'pending'.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_progress",
                "in_review",
                "complete"
              ]
            }
          },
          {
            "name": "statute_of_limitations",
            "in": "query",
            "description": "Filter Task records to those which are a statute of limitations or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "task_type_id",
            "in": "query",
            "description": "The unique identifier for a single TaskType. Use the keyword `null` to match those without a Task. The list will be filtered to include only the Task records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "time_entries_present",
            "in": "query",
            "description": "Filter Task records to those that have associated time entries, or not.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Task records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new Task",
        "operationId": "Task#create",
        "description": "Outlines the parameters and data fields used when creating a new Task",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Tasks",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "statute_of_limitations": {
                        "type": "boolean",
                        "description": "Whether or not the Task should be a statute of limitations."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "assignee"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/tasks/{id}.json": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Return the data for a single Task",
        "operationId": "Task#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Task",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Task.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a single Task",
        "operationId": "Task#update",
        "description": "Outlines the parameters and data fields used when updating a single Task",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Task.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Task_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Tasks",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single User or Contact associated with the Task. The keyword `null` is not valid for this field."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "User",
                              "Contact"
                            ],
                            "description": "Model type of the assignee."
                          }
                        }
                      },
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the Task has a due date that is derived from another Task. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded Task from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The parent Task that is used to determine the due_at property of the cascaded Task"
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the Task. This Task supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "due_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the Task must be completed by. (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Task."
                      },
                      "notify_assignee": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assignee on creation."
                      },
                      "notify_completion": {
                        "type": "boolean",
                        "description": "Whether or not the Task should notify the assigner on completion."
                      },
                      "permission": {
                        "type": "string",
                        "default": "public",
                        "enum": [
                          "private",
                          "public"
                        ],
                        "description": "Permission of the Task. Defaults to `public`"
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the Task."
                      },
                      "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                          "pending",
                          "in_progress",
                          "in_review",
                          "complete"
                        ],
                        "description": "Task status. Users without advanced tasks are allowed to select `Complete` or `Pending` only."
                      },
                      "task_type": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskType associated with the Task. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "time_estimated": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time the Task should take to complete."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a single Task",
        "operationId": "Task#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Task",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Task.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_calendars.json": {
      "get": {
        "tags": [
          "Calendar Visibilities"
        ],
        "summary": "Return the data for all CalendarVisibilities",
        "operationId": "CalendarVisibility#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all CalendarVisibilities",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter CalendarVisibility records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter CalendarVisibility records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of CalendarVisibility records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter CalendarVisibility records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibility_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_calendars/{id}.json": {
      "get": {
        "tags": [
          "Calendar Visibilities"
        ],
        "summary": "Return the data for a single CalendarVisibility",
        "operationId": "CalendarVisibility#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single CalendarVisibility",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarVisibility.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibility_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Calendar Visibilities"
        ],
        "summary": "Update a single CalendarVisibility",
        "operationId": "CalendarVisibility#update",
        "description": "Outlines the parameters and data fields used when updating a single CalendarVisibility",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the CalendarVisibility.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarVisibility_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Calendars",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "visible": {
                        "type": "string",
                        "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "visible": {
                        "type": "string",
                        "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "enum": [
                          "#367B9C",
                          "#FFA5A4",
                          "#83D17F",
                          "#FFAC7B",
                          "#8E3F64",
                          "#C75300",
                          "#009CEC",
                          "#62D6B1",
                          "#9EEDCB",
                          "#F9A2C4",
                          "#616161",
                          "#BBDA81",
                          "#DFD3F8",
                          "#D6C4A5",
                          "#FFD478",
                          "#6AC9DE",
                          "#EABBB0",
                          "#BFC2E1",
                          "#DADADA",
                          "#CDE2F5"
                        ],
                        "description": "Calendar color as seen in the Clio Web UI."
                      },
                      "visible": {
                        "type": "string",
                        "description": "Whether or not the CalendarVisibility should be visible by default in the Clio Web UI."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/task_templates.json": {
      "get": {
        "tags": [
          "Task Templates"
        ],
        "summary": "Return the data for all TaskTemplates",
        "operationId": "TaskTemplate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTemplates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter TaskTemplate records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter TaskTemplate records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of TaskTemplate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the TaskTemplate records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "assignee.name(asc)",
                "assignee.name(desc)",
                "days_from_assignment(asc)",
                "days_from_assignment(desc)",
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "permission(asc)",
                "permission(desc)",
                "priority(asc)",
                "priority(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Filter TaskTemplate records to those with the given priority.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "normal",
                "low"
              ]
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task_template_list_id",
            "in": "query",
            "description": "The unique identifier for a single TaskTemplateList. The keyword `null` is not valid for this field. The list will be filtered to include only the TaskTemplate records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter TaskTemplate records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Templates"
        ],
        "summary": "Create a new TaskTemplate",
        "operationId": "TaskTemplate#create",
        "description": "Outlines the parameters and data fields used when creating a new TaskTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Templates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit",
                            "notification_type"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit",
                            "notification_type"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            }
                          },
                          "required": [
                            "duration_value",
                            "duration_unit",
                            "notification_type"
                          ]
                        }
                      },
                      "task_template_list": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single TaskTemplateList associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/task_templates/{id}.json": {
      "get": {
        "tags": [
          "Task Templates"
        ],
        "summary": "Return the data for a single TaskTemplate",
        "operationId": "TaskTemplate#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskTemplate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Task Templates"
        ],
        "summary": "Update a single TaskTemplate",
        "operationId": "TaskTemplate#update",
        "description": "Outlines the parameters and data fields used when updating a single TaskTemplate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Templates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "cascading": {
                        "type": "boolean",
                        "description": "Determines if the TaskTemplate has a due date that is derived from another TaskTemplate. (Note that if false, no other cascading information will be checked)"
                      },
                      "cascading_offset": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount of time that will differentiate the cascaded TaskTemplate from its parent."
                      },
                      "cascading_offset_polarity": {
                        "type": "string",
                        "enum": [
                          "Before",
                          "After"
                        ],
                        "description": "Determines whether or not the cascading_offset occurs before or after its parent."
                      },
                      "cascading_offset_type": {
                        "type": "string",
                        "enum": [
                          "CalendarDays",
                          "CalendarWeeks",
                          "CalendarMonths",
                          "CalendarYears",
                          "BusinessDays"
                        ],
                        "description": "Determines the quantity of the cascading offset (e.g. CalendarDays, CalendarWeeks etc.)"
                      },
                      "cascading_source": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The unique identifier for a single TaskTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "Longer description of the TaskTemplate. This TaskTemplate supports rich text when the `description_text_type` field is set to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
                      },
                      "description_text_type": {
                        "type": "string",
                        "default": "plain_text",
                        "enum": [
                          "plain_text",
                          "rich_text"
                        ],
                        "description": "The type of text in the description field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Short name for the TaskTemplate."
                      },
                      "priority": {
                        "type": "string",
                        "default": "Normal",
                        "enum": [
                          "High",
                          "Normal",
                          "Low"
                        ],
                        "description": "Priority of the task."
                      },
                      "private": {
                        "type": "boolean",
                        "description": "Whether or not this TaskTemplate should be private."
                      },
                      "reminder_templates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "duration_value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time measured in `duration_unit` to remind user before the subject."
                            },
                            "duration_unit": {
                              "type": "string",
                              "description": "Unit to measure the duration value in."
                            },
                            "notification_type": {
                              "type": "string",
                              "enum": [
                                "Email",
                                "Popup"
                              ],
                              "description": "Notification method."
                            },
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ReminderTemplate associated with the TaskTemplate. The keyword `null` is not valid for this field."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ReminderTemplate is present, the ReminderTemplate is deleted from the TaskTemplate."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Task Templates"
        ],
        "summary": "Delete a single TaskTemplate",
        "operationId": "TaskTemplate#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TaskTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_template_lists/{id}/copy.json": {
      "post": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Copy a TaskTemplateList",
        "operationId": "TaskTemplateList#copy",
        "description": "Creates a copy of the TaskTemplateList identified by the `id` path parameter.\n",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplateList.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList_Show"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Template Lists",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The description of the TaskTemplateList copy."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the TaskTemplateList copy."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for the practice area of the TaskTemplateList copy."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The description of the TaskTemplateList copy."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the TaskTemplateList copy."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for the practice area of the TaskTemplateList copy."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The description of the TaskTemplateList copy."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the TaskTemplateList copy."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for the practice area of the TaskTemplateList copy."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/task_template_lists.json": {
      "get": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Return the data for all TaskTemplateLists",
        "operationId": "TaskTemplateList#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTemplateLists",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter TaskTemplateList records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "empty",
            "in": "query",
            "description": "Filter TaskTemplateList records to those that either contain at least one task template or contain none.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter TaskTemplateList records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of TaskTemplateList records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the TaskTemplateList records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "practice_area.name(asc)",
                "practice_area.name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "practice_area_id",
            "in": "query",
            "description": "The unique identifier for a single PracticeArea. Use the keyword `null` to match those without a TaskTemplateList. The list will be filtered to include only the TaskTemplateList records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter TaskTemplateList records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Create a new TaskTemplateList",
        "operationId": "TaskTemplateList#create",
        "description": "Outlines the parameters and data fields used when creating a new TaskTemplateList",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Template Lists",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/task_template_lists/{id}.json": {
      "get": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Return the data for a single TaskTemplateList",
        "operationId": "TaskTemplateList#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskTemplateList",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplateList.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Update a single TaskTemplateList",
        "operationId": "TaskTemplateList#update",
        "description": "Outlines the parameters and data fields used when updating a single TaskTemplateList",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplateList.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplateList_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Template Lists",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the TaskTemplateList."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskTemplateList."
                      },
                      "practice_area": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single PracticeArea associated with the TaskTemplateList. The keyword `null` is not valid for this field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Task Template Lists"
        ],
        "summary": "Delete a single TaskTemplateList",
        "operationId": "TaskTemplateList#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single TaskTemplateList",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskTemplateList.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/task_types.json": {
      "get": {
        "tags": [
          "Task Types"
        ],
        "summary": "Return the data for all TaskTypes",
        "operationId": "TaskType#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TaskTypes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter TaskType records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter TaskType records to those that are enabled or disabled.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter TaskType records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of TaskType records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter TaskType records to those with the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the TaskType records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter TaskType records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Types"
        ],
        "summary": "Create a new TaskType",
        "operationId": "TaskType#create",
        "description": "Outlines the parameters and data fields used when creating a new TaskType",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Types",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/task_types/{id}.json": {
      "get": {
        "tags": [
          "Task Types"
        ],
        "summary": "Return the data for a single TaskType",
        "operationId": "TaskType#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single TaskType",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Task Types"
        ],
        "summary": "Update a single TaskType",
        "operationId": "TaskType#update",
        "description": "Outlines the parameters and data fields used when updating a single TaskType",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TaskType.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Task Types",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "deleted_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the TaskType was disabled. (Expects an ISO-8601 timestamp)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the TaskType."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/timer.json": {
      "get": {
        "tags": [
          "Timers"
        ],
        "summary": "Return the data for a single Timer",
        "operationId": "Timer#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Timer",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Timer_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "delete": {
        "tags": [
          "Timers"
        ],
        "summary": "Delete a single Timer",
        "operationId": "Timer#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Timer",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timers"
        ],
        "summary": "Create a new Timer",
        "operationId": "Timer#create",
        "description": "Outlines the parameters and data fields used when creating a new Timer",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Timer_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Timers",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "activity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Activity associated with the Timer. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "activity"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/trust_line_items.json": {
      "get": {
        "tags": [
          "Trust Line Items"
        ],
        "summary": "Return the data for all TrustLineItems",
        "operationId": "TrustLineItem#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all TrustLineItems",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bill_id",
            "in": "query",
            "description": "The unique identifier for a single Bill. The keyword `null` is not valid for this field. The list will be filtered to include only the TrustLineItem records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter TrustLineItem records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter TrustLineItem records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of TrustLineItem records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a TrustLineItem. The list will be filtered to include only the TrustLineItem records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the TrustLineItem records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter TrustLineItem records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TrustLineItem_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/trust_line_items/{id}.json": {
      "patch": {
        "tags": [
          "Trust Line Items"
        ],
        "summary": "Update a single TrustLineItem",
        "operationId": "TrustLineItem#update",
        "description": "Outlines the parameters and data fields used when updating a single TrustLineItem",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the TrustLineItem.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TrustLineItem_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Trust Line Items",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for the TrustLineItem. (Expects an ISO-8601 date)."
                      },
                      "note": {
                        "type": "string",
                        "description": "Note for the TrustLineItem."
                      },
                      "total": {
                        "type": "number",
                        "format": "double",
                        "description": "Total amount the TrustLineItem is for."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/trust_requests.json": {
      "post": {
        "tags": [
          "Trust Requests"
        ],
        "summary": "Create a new TrustRequest",
        "operationId": "TrustRequest#create",
        "description": "Outlines the parameters and data fields used when creating a new TrustRequest",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRequest_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Trust Requests",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The currency_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The matter id associated to the TrustRequest"
                            },
                            "trust_amount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The matter level TrustRequest's amount"
                            },
                            "note": {
                              "type": "string",
                              "description": "The client level TrustRequest note"
                            }
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "type": "string",
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The currency_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The matter id associated to the TrustRequest"
                            },
                            "trust_amount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The matter level TrustRequest's amount"
                            },
                            "note": {
                              "type": "string",
                              "description": "The client level TrustRequest note"
                            }
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "type": "string",
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "approved": {
                        "type": "boolean",
                        "description": "Whether or not the TrustRequest should be automatically approved."
                      },
                      "client_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The client_id associated to the TrustRequest"
                      },
                      "currency_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The currency_id associated to the TrustRequest"
                      },
                      "due_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is due (Expects an ISO-8601 date)."
                      },
                      "issue_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the TrustRequest is issued (Expects an ISO-8601 date)."
                      },
                      "matter": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The matter id associated to the TrustRequest"
                            },
                            "trust_amount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The matter level TrustRequest's amount"
                            },
                            "note": {
                              "type": "string",
                              "description": "The client level TrustRequest note"
                            }
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "The client level TrustRequest note"
                      },
                      "trust_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The TrustRequest's amount"
                      },
                      "trust_type": {
                        "type": "string",
                        "enum": [
                          "client",
                          "matter"
                        ],
                        "description": "The type of TrustRequest"
                      }
                    },
                    "required": [
                      "trust_type",
                      "client_id",
                      "issue_date",
                      "due_date",
                      "approved",
                      "trust_amount"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/users/who_am_i.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return the data for the current User",
        "operationId": "User#who_am_i",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single User",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/User_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/users.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return the data for all Users",
        "operationId": "User#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Users",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter User records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter User records to those that are enabled or disabled.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter User records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "include_co_counsel",
            "in": "query",
            "description": "Filter User to include co-counsel users",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of User records to be returned. Limit can range between 1 and 2000. Default: `2000`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter User records to those with the given name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the User records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "email(asc)",
                "email(desc)",
                "enabled(asc)",
                "enabled(desc)",
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "first_name(asc)",
                "first_name(desc)",
                "last_name(asc)",
                "last_name(desc)",
                "initials(asc)",
                "initials(desc)",
                "subscription_type(asc)",
                "subscription_type(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pending_setup",
            "in": "query",
            "description": "Filter User records based on whether or not they are still being setup.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter User records to those with a specific role.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "accounts",
                "billing",
                "reports"
              ]
            }
          },
          {
            "name": "subscription_type",
            "in": "query",
            "description": "Filter User records to those with a specific subscription type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "attorney",
                "nonattorney"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter User records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/User_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}.json": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return the data for a single User",
        "operationId": "User#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single User",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the User.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/User_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/utbms/sets.json": {
      "get": {
        "tags": [
          "Utbms Sets"
        ],
        "summary": "Return the data for all the utbms sets",
        "operationId": "UtbmsSet#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all UtbmsSets",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter UtbmsSet records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter UtbmsSet records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of UtbmsSet records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the UtbmsSet records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter UtbmsSet records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsSet_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utbms/codes.json": {
      "get": {
        "tags": [
          "Utbms Codes"
        ],
        "summary": "Return the data for all UtbmsCodes",
        "operationId": "UtbmsCode#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all UtbmsCodes",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter UtbmsCode records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter UtbmsCode records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of UtbmsCode records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the UtbmsCode records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name(asc)",
                "name(desc)",
                "id(asc)",
                "id(desc)",
                "set(asc)",
                "set(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter UtbmsCode records to those of a given type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "UtbmsTask",
                "UtbmsActivity",
                "UtbmsExpense"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter UtbmsCode records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "utbms_set_id",
            "in": "query",
            "description": "The unique identifier for a single UtbmsSet. Use the keyword `null` to match those without a UtbmsCode. The list will be filtered to include only the UtbmsCode records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsCode_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utbms/codes/{id}.json": {
      "get": {
        "tags": [
          "Utbms Codes"
        ],
        "summary": "Return the data for a single UtbmsCode",
        "operationId": "UtbmsCode#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single UtbmsCode",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the UtbmsCode.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UtbmsCode_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/webhooks.json": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Return the data for all Webhooks",
        "operationId": "Webhook#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Webhooks",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Webhook records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Webhook records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Webhook records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Webhook records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Webhook records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create a new Webhook",
        "operationId": "Webhook#create",
        "description": "Outlines the parameters and data fields used when creating a new Webhook",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Webhooks",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    },
                    "required": [
                      "url",
                      "model",
                      "fields"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/webhooks/{id}.json": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Return the data for a single Webhook",
        "operationId": "Webhook#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Webhook",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Webhook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update a single Webhook",
        "operationId": "Webhook#update",
        "description": "Outlines the parameters and data fields used when updating a single Webhook",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Webhook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Webhooks",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "created",
                            "updated",
                            "deleted",
                            "matter_opened",
                            "matter_pended",
                            "matter_closed"
                          ]
                        },
                        "description": "The events your webhook is subscribed to."
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the Webhook will expire. (Expects an ISO-8601 timestamp)."
                      },
                      "fields": {
                        "type": "string",
                        "description": "Fields to be included in the Webhook request."
                      },
                      "model": {
                        "type": "string",
                        "enum": [
                          "activity",
                          "bill",
                          "calendar_entry",
                          "clio_payments_payment",
                          "communication",
                          "contact",
                          "document",
                          "folder",
                          "matter",
                          "task"
                        ],
                        "description": "What model the Webhook is for. This field accepts either [the string identifier of the model or its ID](#section/Supported-Models)"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of where to POST the Webhook. Note that only URLs using the `https` protocol will be accepted."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a single Webhook",
        "operationId": "Webhook#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Webhook",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Webhook.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/lauk_civil_certificated_rates.json": {
      "get": {
        "tags": [
          "Civil Certificated Rates"
        ],
        "summary": "List Civil Certificated Rates",
        "operationId": "LaukCivilCertificatedRate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LaukCivilCertificatedRates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity",
            "in": "query",
            "description": "Filter by activity.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_sub_category",
            "in": "query",
            "description": "Filter by activity sub-category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attended_several_hearings_for_multiple_clients",
            "in": "query",
            "description": "Filter by whether multiple hearings were attended for multiple clients.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "category_of_law",
            "in": "query",
            "description": "Filter by category of law.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "change_of_solicitor",
            "in": "query",
            "description": "Filter by change of solicitor status.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "court",
            "in": "query",
            "description": "Filter by court.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eligible_for_sqm",
            "in": "query",
            "description": "Filter by SQM eligibility.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fee_scheme",
            "in": "query",
            "description": "Fee scheme",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_conducting_solicitor",
            "in": "query",
            "description": "Filter by first conducting solicitor status.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter by key.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LaukCivilCertificatedRate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "number_of_clients",
            "in": "query",
            "description": "Filter by number of clients.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party",
            "in": "query",
            "description": "Filter by party.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "post_transfer_clients_represented",
            "in": "query",
            "description": "Filter by post-transfer clients represented.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate_type",
            "in": "query",
            "description": "Filter by rate type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_type",
            "in": "query",
            "description": "Filter by session type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "description": "Filter by user type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LaukCivilCertificatedRate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/lauk_civil_controlled_rates.json": {
      "get": {
        "tags": [
          "Civil Controlled Rates"
        ],
        "summary": "List Civil Controlled Rates",
        "operationId": "LaukCivilControlledRate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LaukCivilControlledRates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity",
            "in": "query",
            "description": "Filter by activity.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_of_law",
            "in": "query",
            "description": "Filter by category of law.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter by key.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LaukCivilControlledRate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_type_1",
            "in": "query",
            "description": "Filter by matter type 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_type_2",
            "in": "query",
            "description": "Filter by matter type 2.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate_type",
            "in": "query",
            "description": "Filter by rate type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LaukCivilControlledRate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/lauk_criminal_controlled_rates.json": {
      "get": {
        "tags": [
          "Criminal Controlled Rates"
        ],
        "summary": "List Criminal Controlled Rates",
        "operationId": "LaukCriminalControlledRate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LaukCriminalControlledRates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity",
            "in": "query",
            "description": "Filter by activity.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_of_law",
            "in": "query",
            "description": "Filter by category of law.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "counsel",
            "in": "query",
            "description": "Filter by counsel.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "court",
            "in": "query",
            "description": "Filter by court.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter by key.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LaukCriminalControlledRate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate_type",
            "in": "query",
            "description": "Filter by rate type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solicitor_type",
            "in": "query",
            "description": "Filter by solicitor type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standard_fee_category",
            "in": "query",
            "description": "Filter by standard fee category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LaukCriminalControlledRate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/lauk_expense_categories.json": {
      "get": {
        "tags": [
          "Expense Categories"
        ],
        "summary": "List Expense Categories",
        "operationId": "LaukExpenseCategory#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all LaukExpenseCategories",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter by key.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of LaukExpenseCategory records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by expense name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "practice_area",
            "in": "query",
            "description": "Filter by expense practice area.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Sets the expense rate returned based on the region. If the region is set to London, it will return the London rate; otherwise, it will return the non-London rate.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LaukExpenseCategory_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/comments.json": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Return the data for all Comments",
        "operationId": "Comment#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Comments",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Comment records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_id",
            "in": "query",
            "description": "The ID of the Document or Folder this Comment belongs to",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Comment records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Comment records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Comment_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a new Comment",
        "operationId": "Comment#create",
        "description": "Outlines the parameters and data fields used when creating a new Comment",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Comment_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Comments",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    },
                    "required": [
                      "message",
                      "item"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    },
                    "required": [
                      "message",
                      "item"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    },
                    "required": [
                      "message",
                      "item"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/comments/{id}.json": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Return the data for a single Comment",
        "operationId": "Comment#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Comment",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Comment.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Comment_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Comments"
        ],
        "summary": "Update a single Comment",
        "operationId": "Comment#update",
        "description": "Outlines the parameters and data fields used when updating a single Comment",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Comment.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Comment_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Comments",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the Document or Folder to which the Comment is associated."
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "The content of the Comment."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete a single Comment",
        "operationId": "Comment#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single Comment",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Comment.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_archives/{id}/download.json": {
      "get": {
        "tags": [
          "Document Archives"
        ],
        "summary": "Download the DocumentArchive",
        "operationId": "DocumentArchive#download",
        "description": "Download the DocumentArchive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentArchive.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_archives.json": {
      "post": {
        "tags": [
          "Document Archives"
        ],
        "summary": "Create a new DocumentArchive",
        "operationId": "DocumentArchive#create",
        "description": "Outlines the parameters and data fields used when creating a new DocumentArchive",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentArchive_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Archives",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single Document or Folder associated with the DocumentArchive. Use the keyword `null` to specify no association."
                            },
                            "type": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The type of the item to download"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "items"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/document_archives/{id}.json": {
      "get": {
        "tags": [
          "Document Archives"
        ],
        "summary": "Return the data for a single DocumentArchive",
        "operationId": "DocumentArchive#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentArchive",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentArchive.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentArchive_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/documents/{id}/download.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download the Document",
        "operationId": "Document#download",
        "description": "Download the Document",
        "parameters": [
          {
            "name": "document_version_id",
            "in": "query",
            "description": "The unique identifier for a DocumentVersion to be downloaded. Defaults to the latest.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Document.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/documents/{id}/copy.json": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Copy a Document",
        "operationId": "Document#copy",
        "description": "Copies the latest document version of a Document into a new Document. The parameters `filename` and `name` will be copied from the source Document if none are provided.\n",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Document.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Document_Show"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Documents",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "parent"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "parent"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/documents/{id}/versions.json": {
      "get": {
        "tags": [
          "Document Versions"
        ],
        "summary": "Return the data for all DocumentVersions",
        "operationId": "DocumentVersion#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentVersions",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fully_uploaded",
            "in": "query",
            "description": "Filter DocumentVersion records to those with the given `fully_uploaded` status.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier for the DocumentVersion.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of DocumentVersion records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentVersion_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Return the data for all Documents",
        "operationId": "Document#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Documents",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Document records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "in": "query",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "external_property_name",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Document records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "description": "Allow trashed Document record to be included.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Document records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "description": "Filter Document records to those that are locked.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Document records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at(asc)",
                "created_at(desc)",
                "document_number(asc)",
                "document_number(desc)",
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)",
                "received_at(asc)",
                "received_at(desc)",
                "updated_at(asc)",
                "updated_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "The unique identifier for a single Folder. Use the keyword `null` to match those without a Document. The list will be filtered to include only the Document records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Filters Document record to those being a child of the parent Folder, or a descendant of the parent Folder. Default is `children`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "descendants",
                "children"
              ]
            }
          },
          {
            "name": "show_uncompleted",
            "in": "query",
            "description": "Allow Document record being uploaded to be included.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Document records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Document_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create a new Document",
        "operationId": "Document#create",
        "description": "Create a Document, or Create Document Version to an existing Document.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Document_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Documents",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "content_type": {
                        "type": "string",
                        "description": "A standard MIME type describing the format of the object data. If the field is not specified, it is determined by the file extension."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "filename": {
                        "type": "string",
                        "default": "name",
                        "description": "Name of the original file."
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          },
                          "required": [
                            "part_number",
                            "content_length"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/documents/{id}.json": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Return the data for a single Document",
        "operationId": "Document#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Document",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Document.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Document_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Documents"
        ],
        "summary": "Update a single Document",
        "operationId": "Document#update",
        "description": "Update Document, move Document to another Folder, and/or restore a trashed Document.\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Document.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Document_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Documents",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "copy_version": {
                        "type": "boolean",
                        "description": "Indicates whether to create a new version with the updated filename on rename. This is intended to handle cases where the document extension has been changed; if the document extension has not changed, no new version will be created."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Document should be restored."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "copy_version": {
                        "type": "boolean",
                        "description": "Indicates whether to create a new version with the updated filename on rename. This is intended to handle cases where the document extension has been changed; if the document extension has not changed, no new version will be created."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Document should be restored."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "communication_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Related communication record."
                      },
                      "copy_version": {
                        "type": "boolean",
                        "description": "Indicates whether to create a new version with the updated filename on rename. This is intended to handle cases where the document extension has been changed; if the document extension has not changed, no new version will be created."
                      },
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Document. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Document. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Document**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Document."
                            }
                          }
                        }
                      },
                      "fully_uploaded": {
                        "type": "boolean",
                        "description": "Indicates whether document is uploaded.\n\nWhen marking the document fully uploaded, it arises errors when:\n* The file is not successfully uploaded.\n* Not all the file parts are uploaded.\n* The document is already marked as fully uploaded.\n"
                      },
                      "multiparts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "part_number": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The part number of multipart upload. It must be an integer between 1 to 10,000, inclusive.\n\nMultipart upload supports upload a single file as a set of parts.\nEach part is a contiguous portion of the data.\nA `part_number` uniquely identifies a part and also defines its position within the document being uploaded.\nEach part must be at least 5 MB in size, except the last part.\nThere is no minimum size limit on the last part.\n\nThe URLs of multipart upload are returned in the field, `put_url`, with the corresponding `multipart`\n\nThe API handles maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts,\nmake a PUT request with `fully_uploaded` equal to `false`, and another set of part numbers.\n"
                            },
                            "content_length": {
                              "type": "string",
                              "description": "The size of the part of the upload file in bytes."
                            },
                            "content_md5": {
                              "type": "string",
                              "description": "The base64-encoded 128-bit MD5 digest of the part data. This header can be used as a message integrity check to verify that the part data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Document name."
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Document",
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Document\" represents an existing Clio document. It is specified when you provide a new revision (or document version) to an existing document.\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "received_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time the document was received (Expects an ISO-8601 timestamp)."
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Document should be restored."
                      },
                      "uuid": {
                        "type": "string",
                        "description": "UUID associated with the document version. UUID is required to mark a document fully uploaded."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete a single Document",
        "operationId": "Document#destroy",
        "description": "Deleting a Document using this method will move it to the trash instead of permanently deleting it. Trashed Documents are permanently deleted after 30 days. The following errors may be returned:\n\n- `409 Conflict`: The Document (or one of its ancestor folders) is currently being modified by another request, and cannot be trashed.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Document.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_automations.json": {
      "get": {
        "tags": [
          "Document Automations"
        ],
        "summary": "Return the data for all DocumentAutomations",
        "operationId": "DocumentAutomation#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentAutomations",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter DocumentAutomation records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter DocumentAutomation records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of DocumentAutomation records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the DocumentAutomation records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter DocumentAutomation records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomation_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Automations"
        ],
        "summary": "Create a new DocumentAutomation",
        "operationId": "DocumentAutomation#create",
        "description": "Outlines the parameters and data fields used when creating a new DocumentAutomation",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomation_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Automations",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "pdf",
                            "original"
                          ]
                        },
                        "description": "The formats the document should be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "pdf",
                            "original"
                          ]
                        },
                        "description": "The formats the document should be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentTemplate associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename the generated document should have."
                      },
                      "formats": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "pdf",
                            "original"
                          ]
                        },
                        "description": "The formats the document should be generated as. It can either be generated as a PDF and/or in whatever type the document template is."
                      },
                      "matter": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single Matter associated with the DocumentAutomation. The keyword `null` is not valid for this field."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "matter",
                      "filename",
                      "document_template",
                      "formats"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/document_automations/{id}.json": {
      "get": {
        "tags": [
          "Document Automations"
        ],
        "summary": "Return the data for a single DocumentAutomation",
        "operationId": "DocumentAutomation#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentAutomation",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentAutomation.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAutomation_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      }
    },
    "/document_categories.json": {
      "get": {
        "tags": [
          "Document Categories"
        ],
        "summary": "Return the data for all DocumentCategories",
        "operationId": "DocumentCategory#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentCategories",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter DocumentCategory records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter DocumentCategory records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of DocumentCategory records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the DocumentCategory records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching a given string.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter DocumentCategory records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategory_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Categories"
        ],
        "summary": "Create a new DocumentCategory",
        "operationId": "DocumentCategory#create",
        "description": "Outlines the parameters and data fields used when creating a new DocumentCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/document_categories/{id}.json": {
      "get": {
        "tags": [
          "Document Categories"
        ],
        "summary": "Return the data for a single DocumentCategory",
        "operationId": "DocumentCategory#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentCategory",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Document Categories"
        ],
        "summary": "Update a single DocumentCategory",
        "operationId": "DocumentCategory#update",
        "description": "Outlines the parameters and data fields used when updating a single DocumentCategory",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCategory_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "What the DocumentCategory should be called."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Document Categories"
        ],
        "summary": "Delete a single DocumentCategory",
        "operationId": "DocumentCategory#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single DocumentCategory",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentCategory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/document_templates/{id}/download.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Get the contents of the DocumentTemplate",
        "operationId": "DocumentTemplate#download",
        "description": "Get the contents of the DocumentTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "See Other"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_templates.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Return the data for all DocumentTemplates",
        "operationId": "DocumentTemplate#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all DocumentTemplates",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter DocumentTemplate records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter DocumentTemplate records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of DocumentTemplate records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the DocumentTemplate records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "filename(asc)",
                "filename(desc)",
                "category.name(asc)",
                "category.name(desc)",
                "last_modified(asc)",
                "last_modified(desc)",
                "last_modified_by.name(asc)",
                "last_modified_by.name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter DocumentTemplate records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplate_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Create a new DocumentTemplate",
        "operationId": "DocumentTemplate#create",
        "description": "Outlines the parameters and data fields used when creating a new DocumentTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Templates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    },
                    "required": [
                      "file"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/document_templates/{id}.json": {
      "get": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Return the data for a single DocumentTemplate",
        "operationId": "DocumentTemplate#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single DocumentTemplate",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Update a single DocumentTemplate",
        "operationId": "DocumentTemplate#update",
        "description": "Outlines the parameters and data fields used when updating a single DocumentTemplate",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTemplate_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Document Templates",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the DocumentTemplate. The keyword `null` is not valid for this field."
                          }
                        }
                      },
                      "file": {
                        "type": "string",
                        "description": "A file that contains the DocumentTemplate. The file can be uploaded through a form as application/x-www-form-urlencoded or multipart/form-data request.\nAlternatively, the file can be converted to a BASE64-encoded string and serialized to JSON.\n"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the file. The field is required when the file is BASE64-encoded string."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Document Templates"
        ],
        "summary": "Delete a single DocumentTemplate",
        "operationId": "DocumentTemplate#destroy",
        "description": "Outlines the parameters, optional and required, used when deleting the record for a single DocumentTemplate",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the DocumentTemplate.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/folders/list.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Return the data of the contents of a Folder",
        "operationId": "Folder#list",
        "description": "Return the data of the contents of a Folder.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Folder records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "in": "query",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "external_property_name",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Folder records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "description": "Allow trashed Folder record to be included.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Folder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Folder records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "document_number(asc)",
                "document_number(desc)",
                "name(asc)",
                "name(desc)",
                "updated_at(asc)",
                "updated_at(desc)",
                "created_at(asc)",
                "created_at(desc)",
                "received_at(asc)",
                "received_at(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "The unique identifier for a single Folder.\n\nWhen returning the data of the contents of a Folder, the keyword `null` is not valid for this field. If no Folder is provided, it will default to the account's root Folder.\n\nWhen returning the data for all Folders, use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Filters Folder record to those being a child of the parent Folder, or a descendant of the parent Folder. Default is `children`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "descendants",
                "children"
              ]
            }
          },
          {
            "name": "show_uncompleted",
            "in": "query",
            "description": "Allow Folder record being uploaded to be included.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Folder records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Item_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/folders.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Return the data for all Folders",
        "operationId": "Folder#index",
        "description": "Outlines the parameters, optional and required, used when requesting the data for all Folders",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "description": "The unique identifier for a single Contact. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "created_since",
            "in": "query",
            "description": "Filter Folder records to those having the `created_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "document_category_id",
            "in": "query",
            "description": "The unique identifier for a single DocumentCategory. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "external_property_name",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) name set.\n\ne.g. `?external_property_name=Name`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_property_value",
            "in": "query",
            "description": "Filter records to only those with the given external property(s) value set. Requires external property name as well.\n\ne.g. `?external_property_name=Name&external_property_value=Value`\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids[]",
            "in": "query",
            "description": "Filter Folder records to those having the specified unique identifiers.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "description": "Allow trashed Folder record to be included.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of Folder records to be returned. Limit can range between 1 and 200. Default: `200`.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "matter_id",
            "in": "query",
            "description": "The unique identifier for a single Matter. Use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Orders the Folder records by the given field. Default: `id(asc)`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "id(asc)",
                "id(desc)",
                "name(asc)",
                "name(desc)"
              ]
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "A token specifying which page to return.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "The unique identifier for a single Folder.\n\nWhen returning the data of the contents of a Folder, the keyword `null` is not valid for this field. If no Folder is provided, it will default to the account's root Folder.\n\nWhen returning the data for all Folders, use the keyword `null` to match those without a Folder. The list will be filtered to include only the Folder records with the matching property.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Wildcard search for `name` matching the given string.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Filters Folder record to those being a child of the parent Folder, or a descendant of the parent Folder. Default is `children`.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "descendants",
                "children"
              ]
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filter Folder records to those having the `updated_at` field after a specific time. (Expects an ISO-8601 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Folder_List"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Create a new Folder",
        "operationId": "Folder#create",
        "description": "Create a Folder to an existing folder.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Folder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Folders",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    },
                    "required": [
                      "name",
                      "parent"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    },
    "/folders/{id}.json": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Return the data for a single Folder",
        "operationId": "Folder#show",
        "description": "Outlines the parameters, optional and required, used when requesting the data for a single Folder",
        "parameters": [
          {
            "name": "IF-MODIFIED-SINCE",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if it has been modified after the given date. (Expects an RFC 2822 timestamp).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IF-NONE-MATCH",
            "in": "header",
            "description": "The server will send the requested resource with a 200 status, but only if the existing resource's [ETag](#section/ETags) doesn't match any of the values listed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Folder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Folder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          }
        }
      },
      "patch": {
        "tags": [
          "Folders"
        ],
        "summary": "Update a single Folder",
        "operationId": "Folder#update",
        "description": "Update Folder, move Folder to another Folder, and/or restore a trashed Folder.\n",
        "parameters": [
          {
            "name": "IF-MATCH",
            "in": "header",
            "description": "The server will update the requested resource and send back a 200 status, but only if value in the header matches the existing resource's [ETag](#section/ETags).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to be returned. See response samples for what fields are available. For more information see the [fields section](#section/Fields).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Folder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Folder_Show"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request Body for Folders",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "document_category": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier for a single DocumentCategory associated with the Folder. Use the keyword `null` to specify no association."
                          }
                        }
                      },
                      "external_properties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique identifier for a single ExternalProperty associated with the Folder. The keyword `null` is not valid for this field."
                            },
                            "name": {
                              "type": "string",
                              "description": "The ExternalProperty name. Note: **there is a limit of 5 external_properties per Folder**"
                            },
                            "value": {
                              "type": "string",
                              "description": "The ExternalProperty value."
                            },
                            "_destroy": {
                              "type": "boolean",
                              "description": "The destroy flag. If the flag is set to `true` and the unique identifier of the associated ExternalProperty is present, the ExternalProperty is deleted from the Folder."
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the Folder"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The unique identifier of the parent object."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Folder",
                              "Contact",
                              "Matter"
                            ],
                            "description": "Type of parent object:\n* \"Folder\" represents a specified folder on Clio by folder id. It if specified when you add / move an item to a folder.\n* \"Contact\" represents a contact folder on Clio identified by contact id. It is specified when you add / move an item to a contact folder. A contact folder will be created for the specified contact if none exists already.\n* \"Matter\" represents a matter folder on Clio identified by matter id. It is specified when you add / move an item to a matter folder.\n"
                          }
                        }
                      },
                      "restore": {
                        "type": "boolean",
                        "description": "Whether or not a trashed Folder should be restored."
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        }
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "Delete a single Folder",
        "operationId": "Folder#destroy",
        "description": "Deleting a Folder using this method will move it to the trash instead of permanently deleting it. Trashed Folders are permanently deleted after 30 days. The following errors may be returned:\n\n- `400 Bad Request`: The Folder cannot be trashed. The `type` of the error will be `DeleteFailed` and the `message` of the error will be one of the following:\n  - `Delete failed: This folder contains more than 100,000 items and cannot be trashed. Please trash some of the items inside it before trying again.`\n  - `Delete failed: This item contains locked items and cannot be deleted.`\n  - `Delete failed: The root folder cannot be trashed`\n- `409 Conflict`: The Folder (or one of its descendants) is currently being modified by another request, and cannot be trashed.\n",
        "parameters": [
          {
            "name": "X-API-VERSION",
            "in": "header",
            "description": "The [API minor version](#section/Minor-Versions). Default: latest version.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the Folder.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDetail": {
        "type": "object",
        "required": [
          "type",
          "message"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Unique name for this error"
          },
          "message": {
            "type": "string",
            "description": "Detailed message about the error"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetail"
          }
        }
      },
      "IdsResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "A list of ids"
          }
        }
      },
      "Comment_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Comment*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Comment*"
          },
          "message": {
            "type": "string",
            "description": "The content of the Comment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Comment* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Comment* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Comment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Comment_base"
          },
          {
            "type": "object",
            "properties": {
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              }
            }
          }
        ]
      },
      "Comment_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Comment"
          }
        }
      },
      "Comment_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Comment List Response",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "DocumentArchive_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *DocumentArchive*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentArchive*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentArchive* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentArchive* was last updated (as a ISO-8601 timestamp)"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size of the DocumentArchive in bytes."
          },
          "progress": {
            "type": "number",
            "format": "double",
            "description": "The percent completion of the DocumentArchive."
          },
          "state": {
            "type": "string",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "completed",
              "failed"
            ],
            "description": "The current state of the DocumentArchive."
          },
          "message": {
            "type": "string",
            "description": "A message to indicate why the DocumentArchive didn't complete."
          }
        }
      },
      "DocumentArchive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentArchive_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "DocumentArchive_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentArchive"
          }
        }
      },
      "DocumentAutomation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *DocumentAutomation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentAutomation*"
          },
          "state": {
            "type": "string",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "empty",
              "failed",
              "completed"
            ],
            "description": "A text description of what the automation is currently doing"
          },
          "export_formats": {
            "type": "string",
            "enum": [
              "pdf",
              "original"
            ],
            "description": "An array of what formats were requested"
          },
          "filename": {
            "type": "string",
            "description": "The name of the file being generated."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentAutomation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentAutomation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentAutomation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentAutomation_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "document_template": {
                "$ref": "#/components/schemas/DocumentTemplate_base",
                "description": "DocumentTemplate"
              },
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document_base"
                },
                "description": "Document"
              }
            }
          }
        ]
      },
      "DocumentAutomation_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentAutomation"
          }
        }
      },
      "DocumentAutomation_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentAutomation List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentAutomation"
            }
          }
        }
      },
      "DocumentCategory_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *DocumentCategory*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentCategory*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *DocumentCategory*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentCategory* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentCategory* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentCategory_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "DocumentCategory_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentCategory"
          }
        }
      },
      "DocumentCategory_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentCategory List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentCategory"
            }
          }
        }
      },
      "Document_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Document*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Document*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Document* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "enum": [
              "Document"
            ],
            "description": "The type of the *Document*"
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Document is locked. Locked Document cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Document"
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the last document version was received (as an ISO-8601 timestamp)"
          },
          "filename": {
            "type": "string",
            "description": "The uploaded file name of the latest document version."
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The file size"
          },
          "content_type": {
            "type": "string",
            "description": "The uploaded file content type"
          }
        }
      },
      "Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Document_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/LinkedFolder_base",
                "description": "LinkedFolder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/ClioCreator_base",
                "description": "ClioCreator"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion",
                "description": "DocumentVersion"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "Document_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "Document_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Document List Response",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "DocumentTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *DocumentTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentTemplate*"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size in bytes of the template"
          },
          "content_type": {
            "type": "string",
            "description": "A standard MIME type describing the format of the object data."
          },
          "filename": {
            "type": "string",
            "description": "The name of the original file that was uploaded"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "DocumentTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentTemplate_base"
          },
          {
            "type": "object",
            "properties": {
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "last_modified_by": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "DocumentTemplate_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentTemplate"
          }
        }
      },
      "DocumentTemplate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentTemplate List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentTemplate"
            }
          }
        }
      },
      "DocumentVersion_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *DocumentVersion*"
          },
          "document_id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the parent document."
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *DocumentVersion*"
          },
          "uuid": {
            "type": "string",
            "description": "UUID associated with the DocumentVersion. UUID is required to mark a document fully uploaded."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentVersion* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *DocumentVersion* was last updated (as a ISO-8601 timestamp)"
          },
          "filename": {
            "type": "string",
            "description": "The uploaded file name of the DocumentVersion."
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The size of the DocumentVersion in bytes."
          },
          "version_number": {
            "type": "integer",
            "format": "int32",
            "description": "The ordered number of when this DocumentVersion was uploaded."
          },
          "content_type": {
            "type": "string",
            "description": "A standard MIME type describing the format of the object data."
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the DocumentVersion was received (as an ISO-8601 timestamp)"
          },
          "put_url": {
            "type": "string",
            "description": "A signed URL for uploading the file in a single operation. It expires in 10 minutes. If the document is fully uploaded, the field is empty."
          },
          "fully_uploaded": {
            "type": "boolean",
            "description": "True if the DocumentVersion is uploaded. False if the DocumentVersion is being uploaded."
          }
        }
      },
      "DocumentVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentVersion_base"
          },
          {
            "type": "object",
            "properties": {
              "creator": {
                "$ref": "#/components/schemas/ClioCreator_base",
                "description": "ClioCreator"
              },
              "put_headers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultipartHeader_base"
                },
                "description": "MultipartHeader"
              },
              "multiparts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Multipart"
                },
                "description": "Multipart"
              }
            }
          }
        ]
      },
      "DocumentVersion_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "DocumentVersion List Response",
            "items": {
              "$ref": "#/components/schemas/DocumentVersion"
            }
          }
        }
      },
      "Folder_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Folder*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Folder*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "enum": [
              "Folder"
            ],
            "description": "The type of the *Folder*"
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Folder is locked. Locked Folder cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Folder"
          },
          "root": {
            "type": "boolean",
            "description": "Whether or not the Folder is the root folder. There is only one root folder per account"
          }
        }
      },
      "Folder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/LinkedFolder_base",
                "description": "LinkedFolder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/ClioCreator_base",
                "description": "ClioCreator"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "Folder_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Folder"
          }
        }
      },
      "Folder_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Folder List Response",
            "items": {
              "$ref": "#/components/schemas/Folder"
            }
          }
        }
      },
      "Item_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Item*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Item*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Item* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "enum": [
              "Document",
              "Folder"
            ],
            "description": "The type of the *Item*"
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Item is locked. Locked Item cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the Item"
          }
        }
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Item_base"
          },
          {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/LinkedFolder_base",
                "description": "LinkedFolder"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "document_category": {
                "$ref": "#/components/schemas/DocumentCategory_base",
                "description": "DocumentCategory"
              },
              "creator": {
                "$ref": "#/components/schemas/ClioCreator_base",
                "description": "ClioCreator"
              },
              "latest_document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "Item_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Item List Response",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "Account_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Account*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Account*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Account*"
          },
          "state": {
            "type": "string",
            "description": "Account state"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Account* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Account* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_base"
          },
          {
            "type": "object",
            "properties": {
              "owner": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "ActivityDescription_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ActivityDescription*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityDescription*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ActivityDescription*"
          },
          "visible_to_co_counsel": {
            "type": "boolean",
            "description": "A toggle that determines if a co-counsel user of the firm can have access to this activity description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityDescription* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityDescription* was last updated (as a ISO-8601 timestamp)"
          },
          "default": {
            "type": "boolean",
            "description": "Whether it is the user's default activity description"
          },
          "type": {
            "type": "string",
            "description": "The type of the *ActivityDescription*"
          },
          "utbms_activity_id": {
            "type": "integer",
            "format": "int64",
            "description": "The UTBMS activity id if the *ActivityDescription* is a UTBMS activity description"
          },
          "utbms_task_name": {
            "type": "string",
            "description": "The UTBMS activity task name if attached to a UTBMS activity description"
          },
          "utbms_task_id": {
            "type": "integer",
            "format": "int64",
            "description": "The UTBMS activity task id if attached to a UTBMS activity description"
          },
          "xero_service_code": {
            "type": "string",
            "description": "Custom Xero service code for this activity description"
          },
          "accessible_to_user": {
            "type": "boolean",
            "description": "Determines if activity description is accessible to user"
          },
          "category_type": {
            "type": "string",
            "description": "Activity category rate type. Either hourly or flat fee"
          },
          "currency": {
            "type": "object",
            "description": "The currency of the activity description"
          }
        }
      },
      "ActivityDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityDescription_base"
          },
          {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group_base"
                },
                "description": "Group"
              },
              "rate": {
                "$ref": "#/components/schemas/ActivityDescriptionRate_base",
                "description": "ActivityDescriptionRate"
              },
              "utbms_task": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "utbms_activity": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              }
            }
          }
        ]
      },
      "ActivityDescription_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityDescription"
          }
        }
      },
      "ActivityDescription_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityDescription List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityDescription"
            }
          }
        }
      },
      "ActivityRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ActivityRate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityRate*"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate. Either hourly value or flat rate value"
          },
          "flat_rate": {
            "type": "boolean",
            "description": "Whether this is a flat rate"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityRate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ActivityRate* was last updated (as a ISO-8601 timestamp)"
          },
          "contact_id": {
            "type": "integer",
            "format": "int64",
            "description": "Filter ActivityRate records for the contact."
          },
          "co_counsel_contact_id": {
            "type": "integer",
            "format": "int64",
            "description": "Filter ActivityRate records for the co-counsel."
          }
        }
      },
      "ActivityRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityRate_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              }
            }
          }
        ]
      },
      "ActivityRate_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityRate"
          }
        }
      },
      "ActivityRate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ActivityRate List Response",
            "items": {
              "$ref": "#/components/schemas/ActivityRate"
            }
          }
        }
      },
      "Activity_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Activity*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Activity*"
          },
          "type": {
            "type": "string",
            "enum": [
              "TimeEntry",
              "ExpenseEntry",
              "HardCostEntry",
              "SoftCostEntry"
            ],
            "description": "The type of the *Activity*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the *Activity* was performed (as a ISO-8601 date)"
          },
          "quantity_in_hours": {
            "type": "number",
            "format": "double",
            "description": "The number of hours the TimeEntry took."
          },
          "rounded_quantity_in_hours": {
            "type": "number",
            "format": "double",
            "description": "The number of hours rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "The field is applicable to TimeEntry, ExpenseEntry, and SoftCostEntry.\n\n**Version <= 4.0.3:**\nThe number of hours the TimeEntry took.\n\n**Latest version:**\nThe number of seconds the TimeEntry took.\n"
          },
          "rounded_quantity": {
            "type": "number",
            "format": "double",
            "description": "The field is applicable to time entries only.\n\n**Version <= 4.0.3:**\nThe number of hours rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n\n**Latest version:**\nThe number of seconds rounded accordingly to the billing settings.\nThe rounded value is used to calculate the total.\n"
          },
          "quantity_redacted": {
            "type": "boolean",
            "description": "Is `true` if any of the following fields are redacted:\n`quantity`, `rounded_quantity`, `rounded_quantity_in_hours`, `quantity_in_hours`, `total`, `non_billable_total`\n"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The hourly or flat rate of the *Activity*"
          },
          "note": {
            "type": "string",
            "description": "The details about the *Activity*"
          },
          "flat_rate": {
            "type": "boolean",
            "description": "Whether the *Activity* is a flat rate"
          },
          "billed": {
            "type": "boolean",
            "description": "Whether the *Activity* has been added to an active bill that is in the state of `awaiting_payment` or `paid`"
          },
          "on_bill": {
            "type": "boolean",
            "description": "Whether the *Activity* has been added to an active bill that is in the state of `draft`, `awaiting_approval`, `awaiting_payment` or `paid`"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total cost of draft, billable and billed items in the *Activity*"
          },
          "contingency_fee": {
            "type": "boolean",
            "description": "Whether or not the *Activity* is a contingency fee"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Activity* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Activity* was last updated (as a ISO-8601 timestamp)"
          },
          "reference": {
            "type": "string",
            "description": "A check reference for a HardCostEntry."
          },
          "non_billable": {
            "type": "boolean",
            "description": "Whether the *Activity* is non-billable"
          },
          "non_billable_total": {
            "type": "number",
            "format": "double",
            "description": "The total cost of non-billable items in the *Activity*"
          },
          "no_charge": {
            "type": "boolean",
            "description": "Whether the non-billable *Activity* is shown on the bill."
          },
          "tax_setting": {
            "type": "string",
            "enum": [
              "no_tax",
              "tax_1_only",
              "tax_2_only",
              "tax_1_and_tax_2"
            ],
            "description": "The option denoting whether primary tax, secondary tax, or both is applied to an expense entry."
          },
          "currency": {
            "type": "object",
            "description": "The currency of the *Activity*"
          }
        }
      },
      "Activity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Activity_base"
          },
          {
            "type": "object",
            "properties": {
              "activity_description": {
                "$ref": "#/components/schemas/ActivityDescription_base",
                "description": "ActivityDescription"
              },
              "expense_category": {
                "$ref": "#/components/schemas/ExpenseCategory_base",
                "description": "ExpenseCategory"
              },
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "communication": {
                "$ref": "#/components/schemas/Communication_base",
                "description": "Communication"
              },
              "client_portal": {
                "$ref": "#/components/schemas/ClientPortal_base",
                "description": "ClientPortal"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "matter_note": {
                "$ref": "#/components/schemas/Note_base",
                "description": "Note"
              },
              "contact_note": {
                "$ref": "#/components/schemas/Note_base",
                "description": "Note"
              },
              "subject": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              },
              "timer": {
                "$ref": "#/components/schemas/Timer_base",
                "description": "Timer"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "utbms_expense": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "vendor": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "calendar_entry": {
                "$ref": "#/components/schemas/Activity_CalendarEntry_base",
                "description": "CalendarEntry"
              },
              "task": {
                "$ref": "#/components/schemas/Activity_Task_base",
                "description": "Task"
              },
              "text_message_conversation": {
                "$ref": "#/components/schemas/Activity_TextMessageConversation_base",
                "description": "TextMessageConversation"
              },
              "document_version": {
                "$ref": "#/components/schemas/DocumentVersion_base",
                "description": "DocumentVersion"
              },
              "legal_aid_uk_activity": {
                "$ref": "#/components/schemas/LegalAidUkActivity_base",
                "description": "LegalAidUkActivity"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              }
            }
          }
        ]
      },
      "Activity_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Activity"
          }
        }
      },
      "Activity_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Activity List Response",
            "items": {
              "$ref": "#/components/schemas/Activity"
            }
          }
        }
      },
      "Activity_CalendarEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CalendarEntry*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarEntry*"
          },
          "calendar_owner_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the calendar owner."
          }
        }
      },
      "Activity_Task_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Task*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Task*"
          }
        }
      },
      "Activity_TextMessageConversation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TextMessageConversation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TextMessageConversation*"
          }
        }
      },
      "Address_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Address*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Address*"
          },
          "street": {
            "type": "string",
            "description": "Street of the *Address*"
          },
          "city": {
            "type": "string",
            "description": "City of the *Address*"
          },
          "province": {
            "type": "string",
            "description": "Province or state of the *Address*"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code of the *Address*"
          },
          "country": {
            "type": "string",
            "description": "Country of the *Address*"
          },
          "name": {
            "type": "string",
            "enum": [
              "Work",
              "Home",
              "Billing",
              "Other"
            ],
            "description": "The name of the *Address*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Address* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Address* was last updated (as a ISO-8601 timestamp)"
          },
          "primary": {
            "type": "boolean",
            "description": "Whether it is the default for this contact"
          }
        }
      },
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Allocation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Allocation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Allocation*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the allocation was applied (as a ISO-8601 date)"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The total amount of money that the user has allocated"
          },
          "interest": {
            "type": "boolean",
            "description": "Whether the allocation is applied to interest amount"
          },
          "voided_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time the *Allocation* was voided (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Allocation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Allocation* was last updated (as a ISO-8601 timestamp)"
          },
          "description": {
            "type": "string",
            "description": "The description from the associated Credit Memo (if applicable)"
          },
          "has_online_payment": {
            "type": "boolean",
            "description": "Whether this allocation is associated with an online payment or not"
          },
          "destroyable": {
            "type": "boolean",
            "description": "Whether the record can be deleted or not"
          },
          "payment_type": {
            "type": "string",
            "description": "A string indicating whether the payment is a card or an eCheck payment."
          }
        }
      },
      "Allocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Allocation_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "source_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "destination_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "parent": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "Allocation_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Allocation"
          }
        }
      },
      "Allocation_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Allocation List Response",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          }
        }
      },
      "Balance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Balance*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount for this Balance."
          },
          "type": {
            "type": "string",
            "enum": [
              "Matter",
              "Client"
            ],
            "description": "The type of Balance this data is for."
          },
          "interest_amount": {
            "type": "number",
            "format": "double",
            "description": "The interest amount for this Balance."
          },
          "due": {
            "type": "number",
            "format": "double",
            "description": "The amount due for this Balance, factoring in applicable discounts."
          }
        }
      },
      "Balance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Balance_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BankAccount_base": {
        "type": "object",
        "properties": {
          "account_number": {
            "type": "string",
            "description": "The account number for *BankAccount*"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The current balance of the *BankAccount*"
          },
          "bank_transactions_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of bank transactions associated with the account."
          },
          "clio_payment_page_link": {
            "type": "string",
            "description": "Link to Single Payment Page which allows to transfer funds without logging in."
          },
          "clio_payment_page_qr_code": {
            "type": "string",
            "description": "A QR code that links to a Single Payment Page which allows to transfer funds without logging in."
          },
          "clio_payments_enabled": {
            "type": "boolean",
            "description": "Whether the bank account is connected to Clio Payments"
          },
          "controlled_account": {
            "type": "boolean",
            "description": "Whether is a controlled account"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankAccount* was created (as a ISO-8601 timestamp)"
          },
          "currency": {
            "type": "string",
            "description": "The currency type of the *BankAccount*"
          },
          "currency_symbol": {
            "type": "string",
            "description": "The currency symbol of the *BankAccount*"
          },
          "currency_id": {
            "type": "number",
            "format": "double",
            "description": "The currency ID of the *BankAccount*"
          },
          "default_account": {
            "type": "boolean",
            "description": "Whether it is the default account"
          },
          "domicile_branch": {
            "type": "string",
            "description": "The name of the branch where the account was opened"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankAccount*"
          },
          "general_ledger_number": {
            "type": "string",
            "description": "General ledger number"
          },
          "holder": {
            "type": "string",
            "description": "The name of the person or business that owns the *BankAccount*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BankAccount*"
          },
          "institution": {
            "type": "string",
            "description": "The financial institution where the *BankAccount* is registered"
          },
          "name": {
            "type": "string",
            "description": "The name of the *BankAccount*"
          },
          "swift": {
            "type": "string",
            "description": "A unique identification code for the financial institution"
          },
          "transit_number": {
            "type": "string",
            "description": "Transit number for the bank account branch"
          },
          "type": {
            "type": "string",
            "enum": [
              "Operating",
              "Trust"
            ],
            "description": "The type of the *BankAccount*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankAccount* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "BankAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankAccount_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "BankAccount_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankAccount"
          }
        }
      },
      "BankAccount_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankAccount List Response",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          }
        }
      },
      "BankTransaction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BankTransaction*"
          },
          "type": {
            "type": "string",
            "description": "The type of the *BankTransaction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankTransaction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransaction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransaction* was last updated (as a ISO-8601 timestamp)"
          },
          "bank_account_id": {
            "type": "integer",
            "format": "int64",
            "description": "The associated bank account."
          },
          "source": {
            "type": "string",
            "description": "Where the transaction came from."
          },
          "confirmation": {
            "type": "string",
            "description": "The reference code for the transaction."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the transaction."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the transaction."
          },
          "currency": {
            "type": "string",
            "description": "The currency of the transaction."
          },
          "currency_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the currency of the transaction."
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction."
          },
          "exchange_rate": {
            "type": "number",
            "format": "double",
            "description": "The exchange rate of the transaction."
          },
          "transaction_type": {
            "type": "string",
            "description": "What kind of transaction."
          },
          "funds_in": {
            "type": "number",
            "format": "double",
            "description": "The amount of funds received in this transaction."
          },
          "funds_out": {
            "type": "number",
            "format": "double",
            "description": "The amount of funds withdrawn in this transaction."
          },
          "clio_payments_transaction": {
            "type": "boolean",
            "description": "Whether the transaction was created through online payments."
          },
          "current_account_balance": {
            "type": "number",
            "format": "double",
            "description": "The current account balance."
          },
          "read_only_confirmation": {
            "type": "boolean",
            "description": "Whether the transaction's reference code is read-only."
          }
        }
      },
      "BankTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankTransaction_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "allocation": {
                "$ref": "#/components/schemas/Allocation_base",
                "description": "Allocation"
              }
            }
          }
        ]
      },
      "BankTransaction_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankTransaction"
          }
        }
      },
      "BankTransaction_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BankTransaction List Response",
            "items": {
              "$ref": "#/components/schemas/BankTransaction"
            }
          }
        }
      },
      "BankTransfer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BankTransfer*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BankTransfer*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the transfer."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the transfer."
          },
          "description": {
            "type": "string",
            "description": "The description of the transfer."
          },
          "primary_authorizer": {
            "type": "string",
            "description": "The primary authorizer of the transfer."
          },
          "secondary_authorizer": {
            "type": "string",
            "description": "The secondary authorizer of the transfer."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransfer* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BankTransfer* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "BankTransfer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BankTransfer_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "source_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              }
            }
          }
        ]
      },
      "BankTransfer_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BankTransfer"
          }
        }
      },
      "Bill_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Bill*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Bill*"
          },
          "number": {
            "type": "string",
            "description": "The *Bill* identifier (not necessarily numeric)'"
          },
          "issued_at": {
            "type": "string",
            "format": "date",
            "description": "The time the *Bill* was issued (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Bill* was created (as a ISO-8601 timestamp)"
          },
          "due_at": {
            "type": "string",
            "format": "date",
            "description": "The date the *Bill* is due (as a ISO-8601 date)"
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "description": "The tax rate to the *Bill*"
          },
          "secondary_tax_rate": {
            "type": "number",
            "format": "double",
            "description": "A secondary tax rate applied to the *Bill*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Bill* was last updated (as a ISO-8601 timestamp)"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Bill*"
          },
          "purchase_order": {
            "type": "string",
            "description": "The purchase order of the *Bill*"
          },
          "type": {
            "type": "string",
            "enum": [
              "MatterBill",
              "ClientBill"
            ],
            "description": "The type of the *Bill*"
          },
          "memo": {
            "type": "string",
            "description": "A memo for the *Bill*"
          },
          "start_at": {
            "type": "string",
            "format": "date",
            "description": "The time the billing period starts (as a ISO-8601 date)"
          },
          "end_at": {
            "type": "string",
            "format": "date",
            "description": "The time the billing period ends (as a ISO-8601 date)"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The outstanding balance of the *Bill*"
          },
          "state": {
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "awaiting_payment",
              "paid",
              "void",
              "deleted"
            ],
            "description": "The billing state the *Bill* is in"
          },
          "kind": {
            "type": "string",
            "enum": [
              "revenue_kind",
              "summary_kind",
              "trust_kind",
              "aggregate_all",
              "aggregate_split",
              "aggregate_services",
              "aggregate_expenses"
            ],
            "description": "The kind of the *Bill*"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total with interest of the *Bill*"
          },
          "paid": {
            "type": "number",
            "format": "double",
            "description": "The total amount paid for the *Bill*"
          },
          "paid_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the last payment on the *Bill*"
          },
          "pending": {
            "type": "number",
            "format": "double",
            "description": "The amount of pending credit card payments on the *Bill*"
          },
          "due": {
            "type": "number",
            "format": "double",
            "description": "The total amount of the *Bill* with interest and less discounts"
          },
          "discount_services_only": {
            "type": "string",
            "description": "The selected discount is applied to services only."
          },
          "can_update": {
            "type": "boolean",
            "description": "This value indicates if your *Bill*'s line items and information can be updated."
          },
          "credits_issued": {
            "type": "number",
            "format": "double",
            "description": "The total credits issued for the *Bill*"
          },
          "shared": {
            "type": "boolean",
            "description": "Whether the *Bill* is a shared"
          },
          "last_sent_at": {
            "type": "string",
            "format": "date-time",
            "description": "The last time the *Bill* was sent (as a ISO-8601 date)"
          },
          "services_secondary_tax": {
            "type": "number",
            "format": "double",
            "description": "The total secondary tax of the bill's line items of a service kind"
          },
          "services_sub_total": {
            "type": "number",
            "format": "double",
            "description": "The sub total of all the bill's line items of a service kind"
          },
          "services_tax": {
            "type": "number",
            "format": "double",
            "description": "The total tax of the bill's line items of a service kind"
          },
          "services_taxable_sub_total": {
            "type": "integer",
            "format": "int64",
            "description": "The services portion of the bill's primary tax"
          },
          "services_secondary_taxable_sub_total": {
            "type": "integer",
            "format": "int64",
            "description": "The services portion of the bill's secondary tax"
          },
          "taxable_sub_total": {
            "type": "integer",
            "format": "int64",
            "description": "The total taxable bill amount"
          },
          "secondary_taxable_sub_total": {
            "type": "integer",
            "format": "int64",
            "description": "The subtotal of the bill's secondary tax"
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "Sub total for the *Bill*"
          },
          "tax_sum": {
            "type": "number",
            "format": "double",
            "description": "Sum of primary tax for the model"
          },
          "secondary_tax_sum": {
            "type": "number",
            "format": "double",
            "description": "Sum of secondary tax for the model"
          },
          "total_tax": {
            "type": "number",
            "format": "double",
            "description": "The total amount of tax for the bill."
          },
          "available_state_transitions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "awaiting_approval",
                "awaiting_payment",
                "paid",
                "void",
                "deleted"
              ]
            },
            "description": "The available *Bill* state transitions."
          }
        }
      },
      "Bill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "discount": {
                "$ref": "#/components/schemas/Discount_base",
                "description": "Discount"
              },
              "interest": {
                "$ref": "#/components/schemas/Interest_base",
                "description": "Interest"
              },
              "matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Matter_base"
                },
                "description": "Matter"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "bill_theme": {
                "$ref": "#/components/schemas/BillTheme_base",
                "description": "BillTheme"
              },
              "original_bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Balance_base"
                },
                "description": "Balance"
              },
              "matter_totals": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MatterBalance_base"
                },
                "description": "MatterBalance"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              },
              "billing_setting": {
                "$ref": "#/components/schemas/BillingSetting_base",
                "description": "BillingSetting"
              },
              "client_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "legal_aid_uk_bill": {
                "$ref": "#/components/schemas/LegalAidUkBill_base",
                "description": "LegalAidUkBill"
              },
              "split_invoice": {
                "$ref": "#/components/schemas/SplitInvoice_base",
                "description": "SplitInvoice"
              }
            }
          }
        ]
      },
      "Bill_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Bill"
          }
        }
      },
      "Bill_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Bill List Response",
            "items": {
              "$ref": "#/components/schemas/Bill"
            }
          }
        }
      },
      "BillTheme_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BillTheme*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BillTheme*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillTheme* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillTheme* was last updated (as a ISO-8601 timestamp)"
          },
          "account_id": {
            "type": "integer",
            "format": "int64",
            "description": "The account number the *BillTheme* belongs to"
          },
          "default": {
            "type": "boolean",
            "description": "Whether the *BillTheme* is the default for its account"
          },
          "name": {
            "type": "string",
            "description": "The name of the *BillTheme*"
          },
          "config": {
            "type": "string",
            "description": "The configuration of the *BillTheme*"
          }
        }
      },
      "BillTheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillTheme_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BillTheme_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillTheme"
          }
        }
      },
      "BillTheme_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillTheme List Response",
            "items": {
              "$ref": "#/components/schemas/BillTheme"
            }
          }
        }
      },
      "BillableClient_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BillableClient*"
          },
          "unbilled_hours": {
            "type": "number",
            "format": "double",
            "description": "The unbilled hours of  the client"
          },
          "unbilled_amount": {
            "type": "number",
            "format": "double",
            "description": "The unbilled amount of the client"
          },
          "amount_in_trust": {
            "type": "number",
            "format": "double",
            "description": "The trust amount available for the client"
          },
          "name": {
            "type": "string",
            "description": "The name of the Client"
          },
          "billable_matters_count": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of billable matters the client has"
          }
        }
      },
      "BillableClient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillableClient_base"
          },
          {
            "type": "object",
            "properties": {
              "billable_matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillableMatter_base"
                },
                "description": "BillableMatter"
              }
            }
          }
        ]
      },
      "BillableClient_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableClient List Response",
            "items": {
              "$ref": "#/components/schemas/BillableClient"
            }
          }
        }
      },
      "BillableMatter_base": {
        "type": "object",
        "properties": {
          "currency_code": {
            "type": "string",
            "description": "The currency code"
          },
          "currency_id": {
            "type": "integer",
            "format": "int64",
            "description": "The currency ID"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BillableMatter*"
          },
          "unbilled_hours": {
            "type": "number",
            "format": "double",
            "description": "The unbilled number of hours for the matter"
          },
          "unbilled_amount": {
            "type": "number",
            "format": "double",
            "description": "The unbilled amount for the matter"
          },
          "amount_in_trust": {
            "type": "number",
            "format": "double",
            "description": "The trust amount available for the matter"
          },
          "display_number": {
            "type": "string",
            "description": "The reference to the matter"
          }
        }
      },
      "BillableMatter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillableMatter_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "BillableMatter_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillableMatter"
          }
        }
      },
      "BillableMatter_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "BillableMatter List Response",
            "items": {
              "$ref": "#/components/schemas/BillableMatter"
            }
          }
        }
      },
      "CalendarEntryEventType_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CalendarEntryEventType*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarEntryEventType*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntryEventType* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntryEventType* was last updated (as a ISO-8601 timestamp)"
          },
          "color": {
            "type": "string",
            "enum": [
              "#367B9C",
              "#FFA5A4",
              "#83D17F",
              "#FFAC7B",
              "#8E3F64",
              "#C75300",
              "#009CEC",
              "#62D6B1",
              "#9EEDCB",
              "#F9A2C4",
              "#616161",
              "#BBDA81",
              "#DFD3F8",
              "#D6C4A5",
              "#FFD478",
              "#6AC9DE",
              "#EABBB0",
              "#BFC2E1",
              "#DADADA",
              "#CDE2F5"
            ],
            "description": "The color describing the *CalendarEntryEventType*"
          },
          "name": {
            "type": "string",
            "description": "The name for the *CalendarEntryEventType*"
          }
        }
      },
      "CalendarEntryEventType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CalendarEntryEventType_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "CalendarEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CalendarEntry*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarEntry*"
          },
          "summary": {
            "type": "string",
            "description": "A short summary of the *CalendarEntry*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *CalendarEntry*"
          },
          "location": {
            "type": "string",
            "description": "The geographic location of the *CalendarEntry*"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* starts (as an ISO-8601 timestamp)"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* ends (as an ISO-8601 timestamp)"
          },
          "all_day": {
            "type": "boolean",
            "description": "Whether the event is all day"
          },
          "recurrence_rule": {
            "type": "string",
            "description": "Recurrence rule for expanding"
          },
          "parent_calendar_entry_id": {
            "type": "integer",
            "format": "int64",
            "description": "Identifier for the parent *CalendarEntry*"
          },
          "court_rule": {
            "type": "boolean",
            "description": "Whether this event is associated with a Court Rule"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarEntry* was last updated (as a ISO-8601 timestamp)"
          },
          "permission": {
            "type": "string",
            "description": "The view permission for the current user, will return 'viewer' when permission is 'limited_viewer' and the user is an attendee."
          },
          "calendar_owner_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the calendar owner."
          },
          "start_at_time_zone": {
            "type": "string",
            "description": "Original start at time zone of the event."
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of `TimeEntry` activities associated with the *CalendarEntry*"
          }
        }
      },
      "CalendarEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CalendarEntry_base"
          },
          {
            "type": "object",
            "properties": {
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              },
              "conference_meeting": {
                "$ref": "#/components/schemas/ConferenceMeeting_base",
                "description": "ConferenceMeeting"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "matter_docket": {
                "$ref": "#/components/schemas/MatterDocket_base",
                "description": "MatterDocket"
              },
              "calendar_owner": {
                "$ref": "#/components/schemas/Calendar_base",
                "description": "Calendar"
              },
              "parent_calendar_entry": {
                "$ref": "#/components/schemas/CalendarEntry_base",
                "description": "CalendarEntry"
              },
              "calendar_entry_event_type": {
                "$ref": "#/components/schemas/CalendarEntryEventType_base",
                "description": "CalendarEntryEventType"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attendee_base"
                },
                "description": "Attendee"
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Calendar_base"
                },
                "description": "Calendar"
              },
              "reminders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reminder_base"
                },
                "description": "Reminder"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              }
            }
          }
        ]
      },
      "CalendarEntry_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CalendarEntry"
          }
        }
      },
      "CalendarEntry_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarEntry List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarEntry"
            }
          }
        }
      },
      "Calendar_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Calendar*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Calendar*"
          },
          "color": {
            "type": "string",
            "enum": [
              "#367B9C",
              "#FFA5A4",
              "#83D17F",
              "#FFAC7B",
              "#8E3F64",
              "#C75300",
              "#009CEC",
              "#62D6B1",
              "#9EEDCB",
              "#F9A2C4",
              "#616161",
              "#BBDA81",
              "#DFD3F8",
              "#D6C4A5",
              "#FFD478",
              "#6AC9DE",
              "#EABBB0",
              "#BFC2E1",
              "#DADADA",
              "#CDE2F5"
            ],
            "description": "Color"
          },
          "light_color": {
            "type": "string",
            "enum": [
              "#5DA5C7",
              "#F95957",
              "#209412",
              "#FF7715",
              "#DE649D",
              "#FF6B02",
              "#56C4FC",
              "#00B177",
              "#50D19B",
              "#F14A8C",
              "#A3A2A2",
              "#84AB3B",
              "#B091EE",
              "#BD9E69",
              "#F2A000",
              "#00A5CA",
              "#CB5A3D",
              "#959CD0",
              "#B0B0B0",
              "#7BA6CD"
            ],
            "description": "Accent color to complement the main calendar color."
          },
          "court_rules_default_calendar": {
            "type": "boolean",
            "description": "Whether the calendar is default court rules calendar for current user"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Calendar*"
          },
          "permission": {
            "type": "string",
            "enum": [
              "owner",
              "editor",
              "viewer",
              "limited_viewer",
              "none"
            ],
            "description": "The user's permission to the *Calendar*"
          },
          "type": {
            "type": "string",
            "enum": [
              "AccountCalendar",
              "AdhocCalendar",
              "UserCalendar"
            ],
            "description": "The type of the *Calendar*"
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the *Calendar* will be shown by default in the Clio Web UI (assuming no source is provided)."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Calendar* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Calendar* was last updated (as a ISO-8601 timestamp)"
          },
          "source": {
            "type": "string",
            "enum": [
              "web",
              "mobile"
            ],
            "description": "The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web')."
          }
        }
      },
      "Calendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Calendar_base"
          },
          {
            "type": "object",
            "properties": {
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "Calendar_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Calendar"
          }
        }
      },
      "Calendar_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Calendar List Response",
            "items": {
              "$ref": "#/components/schemas/Calendar"
            }
          }
        }
      },
      "ClioPaymentsLink_base": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether or not the payment link is active."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The defined amount of the payment link, if set."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioPaymentsLink* was created (as a ISO-8601 timestamp)"
          },
          "currency": {
            "type": "string",
            "description": "The currency the payment link will collect."
          },
          "description": {
            "type": "string",
            "description": "The defined description of the payment link, if set."
          },
          "email_address": {
            "type": "string",
            "description": "The email address to pre-fill the field on the the payment link, if set."
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ClioPaymentsLink*"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO 8601 date and time the payment link will expire."
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ClioPaymentsLink*"
          },
          "is_allocated_as_revenue": {
            "type": "boolean",
            "description": "Whether the payment link is allocated as revenue."
          },
          "redirect_url": {
            "type": "string",
            "description": "The URL to redirect the client to after the payment has been made."
          },
          "url": {
            "type": "string",
            "description": "The URL of the payment link."
          }
        }
      },
      "ClioPaymentsLink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClioPaymentsLink_base"
          },
          {
            "type": "object",
            "properties": {
              "bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "clio_payments_payment": {
                "$ref": "#/components/schemas/ClioPaymentsPayment_base",
                "description": "ClioPaymentsPayment"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "destination_contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "ClioPaymentsLink_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClioPaymentsLink"
          }
        }
      },
      "ClioPaymentsLink_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ClioPaymentsLink List Response",
            "items": {
              "$ref": "#/components/schemas/ClioPaymentsLink"
            }
          }
        }
      },
      "ClioPaymentsPayment_base": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the payment."
          },
          "confirmation_number": {
            "type": "string",
            "description": "The confirmation number of the payment."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioPaymentsPayment* was created (as a ISO-8601 timestamp)"
          },
          "currency": {
            "type": "string",
            "description": "The currency the payment was processed in."
          },
          "deposit_as_revenue": {
            "type": "boolean",
            "description": "Whether the payment was deposited as revenue."
          },
          "description": {
            "type": "string",
            "description": "The description of the payment."
          },
          "email_address": {
            "type": "string",
            "description": "The email address of the client."
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ClioPaymentsPayment*"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "authorized",
              "completed",
              "voided",
              "failed",
              "canceled",
              "requires_confirmation",
              "completed_requiring_allocation"
            ],
            "description": "The state of the payment (authorized, completed, failed, etc)."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioPaymentsPayment* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ClioPaymentsPayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ClioPaymentsPayment_base"
          },
          {
            "type": "object",
            "properties": {
              "bank_transaction": {
                "$ref": "#/components/schemas/BankTransaction_base",
                "description": "BankTransaction"
              },
              "clio_payments_link": {
                "$ref": "#/components/schemas/ClioPaymentsLink_base",
                "description": "ClioPaymentsLink"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "destination_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Allocation_base"
                },
                "description": "Allocation"
              },
              "bills": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bill_base"
                },
                "description": "Bill"
              },
              "matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Matter_base"
                },
                "description": "Matter"
              }
            }
          }
        ]
      },
      "ClioPaymentsPayment_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClioPaymentsPayment"
          }
        }
      },
      "ClioPaymentsPayment_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ClioPaymentsPayment List Response",
            "items": {
              "$ref": "#/components/schemas/ClioPaymentsPayment"
            }
          }
        }
      },
      "Communication_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Communication*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Communication*"
          },
          "subject": {
            "type": "string",
            "description": "The subject line of the *Communication*"
          },
          "body": {
            "type": "string",
            "description": "The main content of the *Communication*"
          },
          "type": {
            "type": "string",
            "enum": [
              "EmailCommunication",
              "PhoneCommunication"
            ],
            "description": "The type of the *Communication*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the *Communication* (as a ISO-8601 datestamp)"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of time_entries associated with the *Communication*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Communication* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Communication* was last updated (as a ISO-8601 timestamp)"
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date-time of the *Communication* (in ISO-8601 format)"
          }
        }
      },
      "Communication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Communication_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "communication_eml_file": {
                "$ref": "#/components/schemas/CommunicationEmlFile_base",
                "description": "CommunicationEmlFile"
              },
              "senders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Participant"
                },
                "description": "Participant"
              },
              "receivers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Participant"
                },
                "description": "Participant"
              },
              "external_properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalProperty_base"
                },
                "description": "ExternalProperty"
              },
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              },
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document_base"
                },
                "description": "Document"
              },
              "notification_event_subscribers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationEventSubscriber_base"
                },
                "description": "NotificationEventSubscriber"
              }
            }
          }
        ]
      },
      "Communication_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Communication"
          }
        }
      },
      "Communication_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Communication List Response",
            "items": {
              "$ref": "#/components/schemas/Communication"
            }
          }
        }
      },
      "Contact_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Contact*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Contact*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *Contact*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "Date of birth"
          },
          "type": {
            "type": "string",
            "enum": [
              "Company",
              "Person"
            ],
            "description": "The type of the *Contact*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Contact* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Contact* was last updated (as a ISO-8601 timestamp)"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix of the *Contact* (Mr, Mrs, etc)"
          },
          "title": {
            "type": "string",
            "description": "The designated title of the *Contact*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *Contact*"
          },
          "clio_connect_email": {
            "type": "string",
            "description": "Clio Connect email if the *Contact* is a ClioConnect User"
          },
          "locked_clio_connect_email": {
            "type": "boolean",
            "description": "A boolean indicating if the ability to modify this *Contacts Clio connect email is locked."
          },
          "client_connect_user_id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID for the Clio Connect user associated with this *Contact*"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address associated with this *Contact*."
          },
          "secondary_email_address": {
            "type": "string",
            "description": "The secondary email address associated with this *Contact*."
          },
          "primary_phone_number": {
            "type": "string",
            "description": "The primary phone number associated with this *Contact*."
          },
          "secondary_phone_number": {
            "type": "string",
            "description": "The secondary phone number of the *Contact*."
          },
          "ledes_client_id": {
            "type": "string",
            "description": "LEDES client id of the Contact"
          },
          "has_clio_for_clients_permission": {
            "type": "boolean",
            "description": "True if at least one resource has been shared with the contact using Clio for Clients."
          },
          "is_client": {
            "type": "boolean",
            "description": "Whether or not the Contact is a client"
          },
          "is_clio_for_client_user": {
            "type": "boolean",
            "description": "Whether or not this contact has client_login and client_user (can be created due to addition to client portal or client_share_permissions)"
          },
          "is_co_counsel": {
            "type": "boolean",
            "description": "Whether or not the Contact has matters shared as co-counsel"
          },
          "is_bill_recipient": {
            "type": "boolean",
            "description": "Whether the Contact is a bill recipient on at least one matter."
          },
          "sales_tax_number": {
            "type": "string",
            "description": "The sales tax number of the *Contact*"
          },
          "currency": {
            "type": "object",
            "description": "Currency of the *Contact*"
          }
        }
      },
      "Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact_base"
          },
          {
            "type": "object",
            "properties": {
              "activity_rates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityRate_base"
                },
                "description": "ActivityRate"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue"
                },
                "description": "CustomFieldValue"
              },
              "custom_field_set_associations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldSetAssociation_base"
                },
                "description": "CustomFieldSetAssociation"
              },
              "email_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailAddress_base"
                },
                "description": "EmailAddress"
              },
              "instant_messengers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstantMessenger_base"
                },
                "description": "InstantMessenger"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber_base"
                },
                "description": "PhoneNumber"
              },
              "web_sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebSite_base"
                },
                "description": "WebSite"
              },
              "notification_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationMethod_base"
                },
                "description": "NotificationMethod"
              },
              "account_balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance_base"
                },
                "description": "AccountBalance"
              },
              "related_contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact_base"
                },
                "description": "Contact"
              },
              "primary_work_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "primary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "secondary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "company": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "payment_profile": {
                "$ref": "#/components/schemas/PaymentProfile_base",
                "description": "PaymentProfile"
              },
              "folder": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "co_counsel_rate": {
                "$ref": "#/components/schemas/ActivityRate_base",
                "description": "ActivityRate"
              },
              "primary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              },
              "legal_aid_uk_contact": {
                "$ref": "#/components/schemas/LegalAidUkContact_base",
                "description": "LegalAidUkContact"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              }
            }
          }
        ]
      },
      "Contact_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "Contact_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Contact List Response",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "ConversationMessage_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ConversationMessage*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ConversationMessage*"
          },
          "date": {
            "type": "string",
            "description": "The creation date of the message in the current user's time zone"
          },
          "body": {
            "type": "string",
            "description": "The main content of the *ConversationMessage*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMessage* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMessage* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ConversationMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConversationMessage_base"
          },
          {
            "type": "object",
            "properties": {
              "sender": {
                "$ref": "#/components/schemas/UnredactedParticipant_base",
                "description": "UnredactedParticipant"
              },
              "document": {
                "$ref": "#/components/schemas/Document_base",
                "description": "Document"
              },
              "conversation": {
                "$ref": "#/components/schemas/Conversation_base",
                "description": "Conversation"
              },
              "receivers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnredactedParticipant_base"
                },
                "description": "UnredactedParticipant"
              }
            }
          }
        ]
      },
      "ConversationMessage_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ConversationMessage"
          }
        }
      },
      "ConversationMessage_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ConversationMessage List Response",
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            }
          }
        }
      },
      "Conversation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Conversation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Conversation*"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether the conversation has been archived"
          },
          "read_only": {
            "type": "boolean",
            "description": "Whether the conversation is read only"
          },
          "current_user_is_member": {
            "type": "boolean",
            "description": "Whether the current user is a member of this conversation"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Conversation*"
          },
          "message_count": {
            "type": "integer",
            "format": "int64",
            "description": "The number of messages in this conversation"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int64",
            "description": "The number of time entries applied to this conversation"
          },
          "read": {
            "type": "boolean",
            "description": "Whether any messages in this conversation have been viewed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Conversation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Conversation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Conversation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Conversation_base"
          },
          {
            "type": "object",
            "properties": {
              "last_message": {
                "$ref": "#/components/schemas/ConversationMessage_base",
                "description": "ConversationMessage"
              },
              "first_message": {
                "$ref": "#/components/schemas/ConversationMessage_base",
                "description": "ConversationMessage"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConversationMessage_base"
                },
                "description": "ConversationMessage"
              },
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document_base"
                },
                "description": "Document"
              },
              "memberships": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConversationMembership"
                },
                "description": "ConversationMembership"
              }
            }
          }
        ]
      },
      "Conversation_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Conversation"
          }
        }
      },
      "Conversation_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Conversation List Response",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            }
          }
        }
      },
      "Jurisdiction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Jurisdiction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Jurisdiction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Jurisdiction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Jurisdiction* was last updated (as a ISO-8601 timestamp)"
          },
          "system_id": {
            "type": "integer",
            "format": "int64",
            "description": "Server ID"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "default": {
            "type": "boolean",
            "description": "Whether the *Jurisdiction* is default for the current user"
          },
          "display_timezone": {
            "type": "string",
            "description": "Formatted IANA timezone with UTC offset"
          },
          "valid_subscription": {
            "type": "boolean",
            "description": "Boolean value for whether the user has the jurisdictions"
          },
          "is_local_timezone": {
            "type": "boolean",
            "description": "Boolean value for when the timezone is in the local users timezone"
          }
        }
      },
      "Jurisdiction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Jurisdiction_base"
          },
          {
            "type": "object",
            "properties": {
              "service_types": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceType_base"
                },
                "description": "ServiceType"
              }
            }
          }
        ]
      },
      "Jurisdiction_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Jurisdiction"
          }
        }
      },
      "Jurisdiction_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Jurisdiction List Response",
            "items": {
              "$ref": "#/components/schemas/Jurisdiction"
            }
          }
        }
      },
      "JurisdictionsToTrigger_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *JurisdictionsToTrigger*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *JurisdictionsToTrigger*"
          },
          "system_id": {
            "type": "integer",
            "format": "int64",
            "description": "Server id"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *JurisdictionsToTrigger*"
          },
          "do_not_recalculate": {
            "type": "boolean",
            "description": "Whether the associated dates should not be recalculated"
          },
          "is_served": {
            "type": "boolean",
            "description": "Whether the user must select a Date Offset (Service Type)"
          },
          "is_requirements_required": {
            "type": "boolean",
            "description": "Whether the trigger has requirements"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *JurisdictionsToTrigger* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *JurisdictionsToTrigger* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "JurisdictionsToTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JurisdictionsToTrigger_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "JurisdictionsToTrigger_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JurisdictionsToTrigger"
          }
        }
      },
      "JurisdictionsToTrigger_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "JurisdictionsToTrigger List Response",
            "items": {
              "$ref": "#/components/schemas/JurisdictionsToTrigger"
            }
          }
        }
      },
      "MatterDocket_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterDocket*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterDocket*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *MatterDocket*"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The date the *MatterDocket* will start (as a ISO-8601 date)"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* will start, required for specific triggers (as a ISO-8601 timestamp)"
          },
          "status": {
            "type": "string",
            "description": "The status of the *MatterDocket* creation"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterDocket* was deleted (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterDocket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterDocket_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "jurisdiction": {
                "$ref": "#/components/schemas/Jurisdiction_base",
                "description": "Jurisdiction"
              },
              "trigger": {
                "$ref": "#/components/schemas/JurisdictionsToTrigger_base",
                "description": "JurisdictionsToTrigger"
              },
              "service_type": {
                "$ref": "#/components/schemas/ServiceType_base",
                "description": "ServiceType"
              },
              "calendar_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CalendarEntry_base"
                },
                "description": "CalendarEntry"
              }
            }
          }
        ]
      },
      "MatterDocket_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MatterDocket"
          }
        }
      },
      "MatterDocket_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MatterDocket List Response",
            "items": {
              "$ref": "#/components/schemas/MatterDocket"
            }
          }
        }
      },
      "ServiceType_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ServiceType*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ServiceType*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ServiceType* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ServiceType* was last updated (as a ISO-8601 timestamp)"
          },
          "system_id": {
            "type": "integer",
            "format": "int64",
            "description": "Server ID"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *ServiceType*"
          },
          "default": {
            "type": "boolean",
            "description": "Whether *ServiceType* is default for the current user"
          }
        }
      },
      "ServiceType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceType_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ServiceType_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceType"
          }
        }
      },
      "ServiceType_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ServiceType List Response",
            "items": {
              "$ref": "#/components/schemas/ServiceType"
            }
          }
        }
      },
      "CreditMemo_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CreditMemo*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CreditMemo*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date the *CreditMemo* was recorded (as a ISO-8601 date)"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Total amount credited"
          },
          "description": {
            "type": "string",
            "description": "A detailed description for the *CreditMemo*"
          },
          "discount": {
            "type": "boolean",
            "description": "Whether the *CreditMemo* is applied as discount"
          },
          "voided_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time the *CreditMemo* was voided (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CreditMemo* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CreditMemo* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CreditMemo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreditMemo_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Allocation_base"
                },
                "description": "Allocation"
              }
            }
          }
        ]
      },
      "CreditMemo_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreditMemo"
          }
        }
      },
      "CreditMemo_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CreditMemo List Response",
            "items": {
              "$ref": "#/components/schemas/CreditMemo"
            }
          }
        }
      },
      "Currency_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Currency*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Currency*"
          },
          "code": {
            "type": "string",
            "description": "ISO 4217 code for the *Currency*"
          },
          "sign": {
            "type": "string",
            "description": "Symbol used to denote monetary values using this *Currency*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Currency* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Currency* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Currency": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Currency_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Currency_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Currency List Response",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "CustomAction_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CustomAction*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomAction*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomAction* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomAction* was last updated (as a ISO-8601 timestamp)"
          },
          "label": {
            "type": "string",
            "description": "Text label to be displayed on the custom link."
          },
          "target_url": {
            "type": "string",
            "description": "Target URL which will be opened in a new tab when the user clicks the custom link."
          },
          "ui_reference": {
            "type": "string",
            "enum": [
              "activities/show",
              "documents/show",
              "contacts/show",
              "matters/show",
              "folders/show"
            ],
            "description": "UI reference location within Clio where the link will be displayed."
          }
        }
      },
      "CustomAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomAction_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "CustomAction_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomAction"
          }
        }
      },
      "CustomAction_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomAction List Response",
            "items": {
              "$ref": "#/components/schemas/CustomAction"
            }
          }
        }
      },
      "CustomField_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CustomField*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomField*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomField* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomField* was last updated (as a ISO-8601 timestamp)"
          },
          "name": {
            "type": "string",
            "description": "The name of the *CustomField*"
          },
          "parent_type": {
            "type": "string",
            "enum": [
              "Contact",
              "Matter"
            ],
            "description": "Type of object the *CustomField* is for"
          },
          "field_type": {
            "type": "string",
            "enum": [
              "checkbox",
              "contact",
              "currency",
              "date",
              "time",
              "email",
              "matter",
              "numeric",
              "picklist",
              "text_area",
              "text_line",
              "url"
            ],
            "description": "Field type of the *CustomField*"
          },
          "displayed": {
            "type": "boolean",
            "description": "Whether the *CustomField* is displayed by default"
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether the *CustomField* is deleted for future use"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the *CustomField* requires a value"
          },
          "display_order": {
            "type": "integer",
            "format": "int32",
            "description": "The display position of the *CustomField*"
          }
        }
      },
      "CustomField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField_base"
          },
          {
            "type": "object",
            "properties": {
              "picklist_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PicklistOption_base"
                },
                "description": "PicklistOption"
              }
            }
          }
        ]
      },
      "CustomField_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomField"
          }
        }
      },
      "CustomField_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomField List Response",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "CustomFieldSet_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CustomFieldSet*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomFieldSet*"
          },
          "name": {
            "type": "string",
            "description": "The name of the custom field set."
          },
          "parent_type": {
            "type": "string",
            "enum": [
              "Contact",
              "Matter"
            ],
            "description": "Type of object the *CustomFieldSet* is for."
          },
          "displayed": {
            "type": "boolean",
            "description": "Whether or not the *CustomFieldSet* should be displayed by default."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSet* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSet* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CustomFieldSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldSet_base"
          },
          {
            "type": "object",
            "properties": {
              "custom_fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomField_base"
                },
                "description": "CustomField"
              }
            }
          }
        ]
      },
      "CustomFieldSet_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomFieldSet"
          }
        }
      },
      "CustomFieldSet_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CustomFieldSet List Response",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSet"
            }
          }
        }
      },
      "EmailAddress_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *EmailAddress*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *EmailAddress*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *EmailAddress*"
          },
          "name": {
            "type": "string",
            "description": "A descriptive name for the *EmailAddress. Common values include `Home`, `Work`, and `Other`, as these are the only selectable options within Clio Manage, but other values may be returned for this field."
          },
          "primary": {
            "type": "boolean",
            "description": "Whether it is the default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EmailAddress* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EmailAddress* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "EmailAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmailAddress_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "EmailAddress_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "EmailAddress List Response",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          }
        }
      },
      "ExpenseCategory_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ExpenseCategory*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ExpenseCategory*"
          },
          "name": {
            "type": "string",
            "description": "The name of the expense category"
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "description": "The price charged per unit cost"
          },
          "entry_type": {
            "type": "string",
            "description": "The type of expense entry the category is associated to. Can be either \"hard_cost\", \"soft_cost\" or \"unassociated\""
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExpenseCategory* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExpenseCategory* was last updated (as a ISO-8601 timestamp)"
          },
          "xero_expense_code": {
            "type": "string",
            "description": "Custom Xero expense code for an expense category"
          },
          "accessible_to_user": {
            "type": "boolean",
            "description": "Determines if expense category is accessible to user"
          },
          "tax_setting": {
            "type": "string",
            "description": "The type of tax rate applied to the expense category."
          },
          "currency": {
            "type": "object",
            "description": "The currency details for the expense category"
          }
        }
      },
      "ExpenseCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExpenseCategory_base"
          },
          {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group_base"
                },
                "description": "Group"
              },
              "utbms_code": {
                "$ref": "#/components/schemas/UtbmsCode_base",
                "description": "UtbmsCode"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              }
            }
          }
        ]
      },
      "ExpenseCategory_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExpenseCategory"
          }
        }
      },
      "ExpenseCategory_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ExpenseCategory List Response",
            "items": {
              "$ref": "#/components/schemas/ExpenseCategory"
            }
          }
        }
      },
      "GrantFundingSource_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *GrantFundingSource*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *GrantFundingSource*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *GrantFundingSource*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *GrantFundingSource* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *GrantFundingSource* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "GrantFundingSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GrantFundingSource_base"
          },
          {
            "type": "object",
            "properties": {
              "grants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Grant_base"
                },
                "description": "Grant"
              }
            }
          }
        ]
      },
      "GrantFundingSource_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GrantFundingSource"
          }
        }
      },
      "GrantFundingSource_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "GrantFundingSource List Response",
            "items": {
              "$ref": "#/components/schemas/GrantFundingSource"
            }
          }
        }
      },
      "Grant_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Grant*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Grant*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Grant*"
          },
          "funding_code": {
            "type": "string",
            "description": "Funding code of the grant"
          },
          "funding_code_and_name": {
            "type": "string",
            "description": "Funding code and name of the grant"
          },
          "funding_source_name": {
            "type": "string",
            "description": "Name of the funding source of the grant"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Grant* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Grant* was last updated (as a ISO-8601 timestamp)"
          },
          "balance": {
            "type": "string",
            "description": "Balance of the grant"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "Start date of the grant"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "End date of the grant"
          }
        }
      },
      "Grant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Grant_base"
          },
          {
            "type": "object",
            "properties": {
              "grant_funding_source": {
                "$ref": "#/components/schemas/GrantFundingSource_base",
                "description": "GrantFundingSource"
              }
            }
          }
        ]
      },
      "Grant_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Grant"
          }
        }
      },
      "Grant_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Grant List Response",
            "items": {
              "$ref": "#/components/schemas/Grant"
            }
          }
        }
      },
      "Group_base": {
        "type": "object",
        "properties": {
          "client_connect_user": {
            "type": "boolean",
            "description": "Whether or not the Group is a UserGroup for a Clio Connect User"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Group*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Group*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Group*"
          },
          "type": {
            "type": "string",
            "enum": [
              "UserGroup",
              "AdhocGroup",
              "AccountGroup",
              "TeamGroup"
            ],
            "description": "The type of the *Group*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Group* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Group_base"
          },
          {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User_base"
                },
                "description": "User"
              }
            }
          }
        ]
      },
      "Group_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      "Group_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Group List Response",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "InterestCharge_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *InterestCharge*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *InterestCharge*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The *InterestCharge* date (as a ISO-8601 date)"
          },
          "description": {
            "type": "string",
            "description": "The description for the *InterestCharge*"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *InterestCharge*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InterestCharge* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InterestCharge* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "InterestCharge": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestCharge_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Balance_base"
                },
                "description": "Balance"
              },
              "matters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Matter_base"
                },
                "description": "Matter"
              }
            }
          }
        ]
      },
      "InterestCharge_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "InterestCharge List Response",
            "items": {
              "$ref": "#/components/schemas/InterestCharge"
            }
          }
        }
      },
      "Interest_base": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "double",
            "description": "Interest balance for the object"
          },
          "period": {
            "type": "integer",
            "format": "int32",
            "description": "Number of days that represent the frequency which your *Interest%* will be applied"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "Rate for the *Interest%*"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "Interest total for the object"
          },
          "type": {
            "type": "string",
            "enum": [
              "simple",
              "compound"
            ],
            "description": "Type of *Interest%* being applied"
          }
        }
      },
      "Interest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Interest_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "EventMetrics_base": {
        "type": "object",
        "properties": {
          "unread_mobile_events": {
            "type": "integer",
            "format": "int64",
            "description": "The number of unread mobile event notifications for the current user"
          },
          "unread_web_events": {
            "type": "integer",
            "format": "int64",
            "description": "The number of unread web event notifications for the current user"
          },
          "unread_secure_messages": {
            "type": "integer",
            "format": "int64",
            "description": "The number of unread secure messages for the current user"
          },
          "unread_client_portal_messages": {
            "type": "integer",
            "format": "int64",
            "description": "The number of unread client portal messages for the current user"
          },
          "unread_text_messages": {
            "type": "integer",
            "format": "int64",
            "description": "The number of unread text messages for the current user"
          }
        }
      },
      "EventMetrics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventMetrics_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "EventMetrics_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventMetrics"
          }
        }
      },
      "MyEvent_base": {
        "type": "object",
        "properties": {}
      },
      "MyEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MyEvent_base"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/Event_base",
                "description": "Event"
              }
            }
          }
        ]
      },
      "MyEvent_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MyEvent"
          }
        }
      },
      "MyEvent_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MyEvent List Response",
            "items": {
              "$ref": "#/components/schemas/MyEvent"
            }
          }
        }
      },
      "Event_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Event*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Event*"
          },
          "message": {
            "type": "string",
            "description": "Concise headline message describing the event"
          },
          "icon": {
            "type": "string",
            "description": "Font Awesome icon to display (without the fa- prefix)"
          },
          "title": {
            "type": "string",
            "description": "The title or subject of the event (e.g. Matter Number, Document Title)"
          },
          "title_url": {
            "type": "string",
            "description": "Target URL that will be opened if the user clicks on the event title"
          },
          "description": {
            "type": "string",
            "description": "Description or additional information about the event (e.g. Matter Description)"
          },
          "description_url": {
            "type": "string",
            "description": "Target URL that will be opened if the user clicks on the event description"
          },
          "primary_detail": {
            "type": "string",
            "description": "Optional additional information about the event (e.g. Matter Client, Document Author)"
          },
          "primary_detail_url": {
            "type": "string",
            "description": "Target URL that will be opened if the user clicks on the primary detail"
          },
          "secondary_detail": {
            "type": "string",
            "description": "Optional additional information about the event (e.g. Matter Status, Document Size)"
          },
          "secondary_detail_url": {
            "type": "string",
            "description": "Target URL that will be opened if the user clicks on the secondary detail"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the event occurred"
          },
          "mobile_icon": {
            "type": "string",
            "description": "Icon to be displayed in the mobile app"
          },
          "subject_type": {
            "type": "string",
            "description": "The type of subject that triggered the notification (e.g. Matter, Document)"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the subject that triggered the notification"
          }
        }
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LaukCivilCertificatedRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LaukCivilCertificatedRate*"
          },
          "activity": {
            "type": "string",
            "description": "Activity of the *LaukCivilCertificatedRate*"
          },
          "activity_sub_category": {
            "type": "string",
            "description": "Activity sub-category"
          },
          "activity_type": {
            "type": "string",
            "description": "Activity type"
          },
          "attended_several_hearings_for_multiple_clients": {
            "type": "boolean",
            "description": "Multiple hearings for multiple clients indicator"
          },
          "category_of_law": {
            "type": "string",
            "description": "Category of law"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCivilCertificatedRate* was created (as a ISO-8601 timestamp)"
          },
          "change_of_solicitor": {
            "type": "boolean",
            "description": "Change of solicitor indicator"
          },
          "court": {
            "type": "string",
            "description": "Court associated"
          },
          "eligible_for_sqm": {
            "type": "boolean",
            "description": "SQM eligibility (Legal Aid England and Wales)"
          },
          "exceptional": {
            "type": "number",
            "format": "decimal",
            "description": "Fee applied for high activity count"
          },
          "exceptional_warning": {
            "type": "string",
            "description": "Warning for exceptional status"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LaukCivilCertificatedRate*"
          },
          "fee": {
            "type": "number",
            "format": "decimal",
            "description": "Fee amount"
          },
          "fee_scheme": {
            "type": "string",
            "description": "Fee scheme"
          },
          "first_conducting_solicitor": {
            "type": "boolean",
            "description": "First conducting solicitor indicator"
          },
          "key": {
            "type": "string",
            "description": "Unique key"
          },
          "number_of_clients": {
            "type": "string",
            "description": "Number of clients"
          },
          "party": {
            "type": "string",
            "description": "Associated party"
          },
          "post_transfer_clients_represented": {
            "type": "string",
            "description": "Post-transfer clients represented"
          },
          "rate_type": {
            "type": "string",
            "description": "Rate type"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "session_type": {
            "type": "string",
            "description": "Session type"
          },
          "user_type": {
            "type": "string",
            "description": "User type"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCivilCertificatedRate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LaukCivilCertificatedRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LaukCivilCertificatedRate_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LaukCivilCertificatedRate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LaukCivilCertificatedRate List Response",
            "items": {
              "$ref": "#/components/schemas/LaukCivilCertificatedRate"
            }
          }
        }
      },
      "LaukCivilControlledRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LaukCivilControlledRate*"
          },
          "activity": {
            "type": "string",
            "description": "Activity of the *LaukCivilControlledRate*"
          },
          "activity_type": {
            "type": "string",
            "description": "Activity type"
          },
          "category_of_law": {
            "type": "string",
            "description": "Category of law"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCivilControlledRate* was created (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LaukCivilControlledRate*"
          },
          "exceptional": {
            "type": "number",
            "format": "decimal",
            "description": "Fee applied for high activity count"
          },
          "fee": {
            "type": "number",
            "format": "decimal",
            "description": "Fee amount"
          },
          "fee_scheme": {
            "type": "string",
            "description": "Fee scheme"
          },
          "key": {
            "type": "string",
            "description": "Unique key"
          },
          "rate_type": {
            "type": "string",
            "description": "Rate type"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCivilControlledRate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LaukCivilControlledRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LaukCivilControlledRate_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LaukCivilControlledRate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LaukCivilControlledRate List Response",
            "items": {
              "$ref": "#/components/schemas/LaukCivilControlledRate"
            }
          }
        }
      },
      "LaukCriminalControlledRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LaukCriminalControlledRate*"
          },
          "activity": {
            "type": "string",
            "description": "Activity of the *LaukCriminalControlledRate*"
          },
          "activity_type": {
            "type": "string",
            "description": "Activity type"
          },
          "category_of_law": {
            "type": "string",
            "description": "Category of law"
          },
          "counsel": {
            "type": "string",
            "description": "Associated counsel"
          },
          "court": {
            "type": "string",
            "description": "Court associated"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCriminalControlledRate* was created (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LaukCriminalControlledRate*"
          },
          "exceptional": {
            "type": "number",
            "format": "decimal",
            "description": "Fee applied for high activity count"
          },
          "fee": {
            "type": "number",
            "format": "decimal",
            "description": "Fee amount"
          },
          "fee_scheme": {
            "type": "string",
            "description": "Fee scheme"
          },
          "post_nov_24_exceptional": {
            "type": "number",
            "format": "decimal",
            "description": "Post-Nov 24 exceptional fee"
          },
          "post_nov_24_fee": {
            "type": "number",
            "format": "decimal",
            "description": "Post-Nov 24 fee amount"
          },
          "post_sept_22_exceptional": {
            "type": "number",
            "format": "decimal",
            "description": "Post-Sept 22 exceptional fee"
          },
          "post_sept_22_fee": {
            "type": "number",
            "format": "decimal",
            "description": "Post-Sept 22 fee amount"
          },
          "key": {
            "type": "string",
            "description": "Unique key"
          },
          "rate_type": {
            "type": "string",
            "description": "Rate type"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "solicitor_type": {
            "type": "string",
            "description": "Solicitor type"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukCriminalControlledRate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LaukCriminalControlledRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LaukCriminalControlledRate_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LaukCriminalControlledRate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LaukCriminalControlledRate List Response",
            "items": {
              "$ref": "#/components/schemas/LaukCriminalControlledRate"
            }
          }
        }
      },
      "LaukExpenseCategory_base": {
        "type": "object",
        "properties": {
          "certificated": {
            "type": "boolean",
            "description": "Certificated boolean identifier for expense"
          },
          "civil": {
            "type": "boolean",
            "description": "Civil boolean identifier for expense"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukExpenseCategory* was created (as a ISO-8601 timestamp)"
          },
          "criminal": {
            "type": "boolean",
            "description": "Criminal boolean identifier for expense"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LaukExpenseCategory*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LaukExpenseCategory*"
          },
          "key": {
            "type": "string",
            "description": "Unique key"
          },
          "name": {
            "type": "string",
            "description": "Expense name"
          },
          "rate": {
            "type": "number",
            "format": "decimal",
            "description": "Determines rate based on region param"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LaukExpenseCategory* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LaukExpenseCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LaukExpenseCategory_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "LaukExpenseCategory_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LaukExpenseCategory List Response",
            "items": {
              "$ref": "#/components/schemas/LaukExpenseCategory"
            }
          }
        }
      },
      "LineItem_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LineItem*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LineItem*"
          },
          "type": {
            "type": "string",
            "enum": [
              "ActivityLineItem",
              "LineItem",
              "NoChargeLineItem",
              "SummaryLineItem"
            ],
            "description": "The type of the *LineItem*"
          },
          "description": {
            "type": "string",
            "description": "The description for the *LineItem*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The *LineItem* date (as a ISO-8601 date)"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price of the *LineItem*"
          },
          "taxable": {
            "type": "boolean",
            "description": "Whether the *LineItem* is taxable"
          },
          "kind": {
            "type": "string",
            "enum": [
              "Service",
              "Expense"
            ],
            "description": "The kind of *LineItem*"
          },
          "note": {
            "type": "string",
            "description": "The note attached to the *LineItem*"
          },
          "secondary_taxable": {
            "type": "boolean",
            "description": "Whether the *LineItem* is secondary taxable"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *LineItem*"
          },
          "tax": {
            "type": "number",
            "format": "double",
            "description": "The tax amount for the *LineItem*"
          },
          "secondary_tax": {
            "type": "number",
            "format": "double",
            "description": "The secondary tax amount for the *LineItem*"
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "The subtotal amount for the *LineItem*"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "The amount of hours for the *LineItem*"
          },
          "group_ordering": {
            "type": "integer",
            "format": "int32",
            "description": "The value to specify the ordering of the *LineItem* on a bill"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LineItem* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LineItem* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItem_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "activity": {
                "$ref": "#/components/schemas/Activity_base",
                "description": "Activity"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "discount": {
                "$ref": "#/components/schemas/Discount_base",
                "description": "Discount"
              },
              "included_line_item_totals": {
                "$ref": "#/components/schemas/LineItemTotals_base",
                "description": "LineItemTotals"
              }
            }
          }
        ]
      },
      "LineItem_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LineItem"
          }
        }
      },
      "LineItem_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LineItem List Response",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        }
      },
      "LogEntry_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LogEntry*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LogEntry*"
          },
          "type": {
            "type": "string",
            "enum": [
              "MatterLogEntry",
              "ContactLogEntry"
            ],
            "description": "The type of the *LogEntry*"
          },
          "accessed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the item was last accessed (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LogEntry* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LogEntry* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "LogEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LogEntry_base"
          },
          {
            "type": "object",
            "properties": {
              "item": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "LogEntry_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "LogEntry List Response",
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            }
          }
        }
      },
      "Matter_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Matter*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Matter*"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "The number given to the *Matter* within an account"
          },
          "display_number": {
            "type": "string",
            "description": "The reference and label of the *Matter*. Depending on the account's manual_matter_numbering setting, this is either read only (generated) or customizable."
          },
          "custom_number": {
            "type": "string",
            "description": "User defined custom number of the *Matter*"
          },
          "currency": {
            "type": "object",
            "description": "Currency of the matter"
          },
          "description": {
            "type": "string",
            "description": "The detailed description of the *Matter*"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Open",
              "Closed"
            ],
            "description": "The current status of the *Matter*"
          },
          "location": {
            "type": "string",
            "description": "The location of the *Matter*"
          },
          "client_reference": {
            "type": "string",
            "description": "Client Reference string for external uses"
          },
          "client_id": {
            "type": "integer",
            "format": "int64",
            "description": "Client ID"
          },
          "billable": {
            "type": "boolean",
            "description": "Whether this matter is billable"
          },
          "maildrop_address": {
            "type": "string",
            "description": "A unique Maildrop email address for the matter"
          },
          "billing_method": {
            "type": "string",
            "enum": [
              "flat",
              "contingency",
              "hourly"
            ],
            "description": "Billing method of this matter"
          },
          "open_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to open (as a ISO-8601 date)"
          },
          "close_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to closed (as a ISO-8601 date)"
          },
          "pending_date": {
            "type": "string",
            "format": "date",
            "description": "The date the matter was set to pending (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Matter* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Matter* was last updated (as a ISO-8601 timestamp)"
          },
          "shared": {
            "type": "boolean",
            "description": "Whether the matter is currently shared with Clio Connect"
          },
          "has_tasks": {
            "type": "boolean",
            "description": "Whether or not the matter has any tasks."
          },
          "last_activity_date": {
            "type": "string",
            "format": "date",
            "description": "The greatest date out of all of the activities on the matter (as a ISO-8601 date)"
          },
          "matter_stage_updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date the matter stage was last updated (as a ISO-8601 date)"
          }
        }
      },
      "Matter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Matter_base"
          },
          {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "contingency_fee": {
                "$ref": "#/components/schemas/ContingencyFee_base",
                "description": "ContingencyFee"
              },
              "custom_rate": {
                "$ref": "#/components/schemas/MatterCustomRate",
                "description": "MatterCustomRate"
              },
              "evergreen_retainer": {
                "$ref": "#/components/schemas/EvergreenRetainer_base",
                "description": "EvergreenRetainer"
              },
              "folder": {
                "$ref": "#/components/schemas/Folder_base",
                "description": "Folder"
              },
              "group": {
                "$ref": "#/components/schemas/Group_base",
                "description": "Group"
              },
              "matter_budget": {
                "$ref": "#/components/schemas/MatterBudget_base",
                "description": "MatterBudget"
              },
              "matter_stage": {
                "$ref": "#/components/schemas/MatterStage_base",
                "description": "MatterStage"
              },
              "originating_attorney": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "practice_area": {
                "$ref": "#/components/schemas/PracticeArea_base",
                "description": "PracticeArea"
              },
              "responsible_attorney": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "responsible_staff": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "statute_of_limitations": {
                "$ref": "#/components/schemas/Task_base",
                "description": "Task"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "legal_aid_uk_matter": {
                "$ref": "#/components/schemas/LegalAidUkMatter_base",
                "description": "LegalAidUkMatter"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              },
              "account_balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance_base"
                },
                "description": "AccountBalance"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue"
                },
                "description": "CustomFieldValue"
              },
              "custom_field_set_associations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldSetAssociation_base"
                },
                "description": "CustomFieldSetAssociation"
              },
              "matter_bill_recipients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MatterBillRecipient"
                },
                "description": "MatterBillRecipient"
              },
              "relationships": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Relationship_base"
                },
                "description": "Relationship"
              },
              "task_template_list_instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskTemplateListInstace_base"
                },
                "description": "TaskTemplateListInstace"
              },
              "split_invoice_payers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SplitInvoicePayer_base"
                },
                "description": "SplitInvoicePayer"
              }
            }
          }
        ]
      },
      "Matter_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Matter"
          }
        }
      },
      "Matter_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Matter List Response",
            "items": {
              "$ref": "#/components/schemas/Matter"
            }
          }
        }
      },
      "MatterStage_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterStage*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterStage*"
          },
          "practice_area_id": {
            "type": "string",
            "description": "Practice Area ID"
          },
          "name": {
            "type": "string",
            "description": "The name of the *MatterStage*"
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "description": "The order of the matter stage within a practice area"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterStage* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterStage* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterStage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterStage_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "MatterStage_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MatterStage List Response",
            "items": {
              "$ref": "#/components/schemas/MatterStage"
            }
          }
        }
      },
      "Client_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Client*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *Client*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "type": {
            "type": "string",
            "enum": [
              "Company",
              "Person"
            ],
            "description": "The type of the *Client*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Client* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Client* was last updated (as a ISO-8601 timestamp)"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix of the *Client* (Mr, Mrs, etc)"
          },
          "title": {
            "type": "string",
            "description": "The designated title of the *Client*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *Client*"
          },
          "is_matter_client": {
            "type": "boolean",
            "description": "Whether or not the Client is also the client of the matter"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address of client"
          },
          "primary_phone_number": {
            "type": "string",
            "description": "The primary phone number of client"
          },
          "client_connect_user_id": {
            "type": "integer",
            "format": "int64",
            "description": "The client connect ID of the contacts associated user"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "Date of Birth"
          }
        }
      },
      "Client": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Client_base"
          },
          {
            "type": "object",
            "properties": {
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "company": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "email_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailAddress_base"
                },
                "description": "EmailAddress"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber_base"
                },
                "description": "PhoneNumber"
              },
              "web_sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebSite_base"
                },
                "description": "WebSite"
              }
            }
          }
        ]
      },
      "Client_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Client"
          }
        }
      },
      "MatterContacts_base": {
        "type": "object",
        "properties": {
          "contact_created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the time the contact was created"
          },
          "contact_updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the time the contact was created"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterContacts* was created (as a ISO-8601 timestamp)"
          },
          "description": {
            "type": "string",
            "description": "Description of the matter"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterContacts*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterContacts*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *MatterContacts*"
          },
          "is_client": {
            "type": "boolean",
            "description": "Whether or not the MatterContacts is a client"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "matter_id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the matter"
          },
          "matter_number": {
            "type": "string",
            "description": "Number of the matter"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *MatterContacts*"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix of the *MatterContacts* (Mr, Mrs, etc)"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address associated with this *MatterContacts*."
          },
          "primary_phone_number": {
            "type": "string",
            "description": "The primary phone number associated with this *MatterContacts*."
          },
          "relationship_name": {
            "type": "string",
            "description": "The description of the relation between the contact and the matter, or \"Client\" if the user is the client."
          },
          "secondary_email_address": {
            "type": "string",
            "description": "The secondary email address of the contact"
          },
          "secondary_phone_number": {
            "type": "string",
            "description": "The secondary phone number of the contact"
          },
          "title": {
            "type": "string",
            "description": "The designated title of the *MatterContacts*"
          },
          "type": {
            "type": "string",
            "enum": [
              "Company",
              "Person"
            ],
            "description": "The type of the *MatterContacts*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterContacts* was last updated (as a ISO-8601 timestamp)"
          },
          "client_connect_user_id": {
            "type": "integer",
            "format": "int64",
            "description": "The client connect ID of the contacts associated user"
          }
        }
      },
      "MatterContacts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterContacts_base"
          },
          {
            "type": "object",
            "properties": {
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "company": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "primary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "primary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              },
              "secondary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "secondary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue_base"
                },
                "description": "CustomFieldValue"
              },
              "email_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailAddress_base"
                },
                "description": "EmailAddress"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber_base"
                },
                "description": "PhoneNumber"
              },
              "web_sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebSite_base"
                },
                "description": "WebSite"
              },
              "relationship": {
                "$ref": "#/components/schemas/Relationship_base",
                "description": "Relationship"
              }
            }
          }
        ]
      },
      "MatterContacts_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MatterContacts List Response",
            "items": {
              "$ref": "#/components/schemas/MatterContacts"
            }
          }
        }
      },
      "RelatedContacts_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *RelatedContacts*"
          },
          "contact_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the *RelatedContacts*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *RelatedContacts*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "type": {
            "type": "string",
            "enum": [
              "Company",
              "Person"
            ],
            "description": "The type of the *RelatedContacts*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *RelatedContacts* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *RelatedContacts* was last updated (as a ISO-8601 timestamp)"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix of the *RelatedContacts* (Mr, Mrs, etc)"
          },
          "title": {
            "type": "string",
            "description": "The designated title of the *RelatedContacts*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *RelatedContacts*"
          },
          "is_matter_client": {
            "type": "boolean",
            "description": "Whether or not the RelatedContacts is also the client of the matter"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address of related contact"
          },
          "primary_phone_number": {
            "type": "string",
            "description": "The primary phone number of related contact"
          },
          "client_connect_user_id": {
            "type": "integer",
            "format": "int64",
            "description": "The client connect ID of the contacts associated user"
          }
        }
      },
      "RelatedContacts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedContacts_base"
          },
          {
            "type": "object",
            "properties": {
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "company": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "primary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "primary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              },
              "secondary_address": {
                "$ref": "#/components/schemas/Address_base",
                "description": "Address"
              },
              "secondary_web_site": {
                "$ref": "#/components/schemas/WebSite_base",
                "description": "WebSite"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address_base"
                },
                "description": "Address"
              },
              "custom_field_values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomFieldValue_base"
                },
                "description": "CustomFieldValue"
              },
              "email_addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailAddress_base"
                },
                "description": "EmailAddress"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber_base"
                },
                "description": "PhoneNumber"
              },
              "web_sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebSite_base"
                },
                "description": "WebSite"
              },
              "relationship": {
                "$ref": "#/components/schemas/Relationship_base",
                "description": "Relationship"
              }
            }
          }
        ]
      },
      "RelatedContacts_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "RelatedContacts List Response",
            "items": {
              "$ref": "#/components/schemas/RelatedContacts"
            }
          }
        }
      },
      "Note_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Note*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Note*"
          },
          "type": {
            "type": "string",
            "enum": [
              "Matter",
              "Contact"
            ],
            "description": "The type of the *Note*"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the *Note*"
          },
          "detail": {
            "type": "string",
            "description": "The text body of the *Note*. This Note supports rich text when setting the field `detail_text_type` to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Note also supports attributes such as `href`, `rel`, `type`, and `target`."
          },
          "detail_text_type": {
            "type": "string",
            "enum": [
              "plain_text",
              "rich_text"
            ],
            "description": "The text type of the *Note*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the *Note* is for (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Note* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Note* was last updated (as a ISO-8601 timestamp)"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of time_entries associated with the *Note*"
          }
        }
      },
      "Note": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Note_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "author": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              },
              "notification_event_subscribers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationEventSubscriber_base"
                },
                "description": "NotificationEventSubscriber"
              }
            }
          }
        ]
      },
      "Note_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Note"
          }
        }
      },
      "Note_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Note List Response",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        }
      },
      "OutstandingClientBalance_base": {
        "type": "object",
        "properties": {
          "associated_matter_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "An array of Matter IDs associated with bills in the unpaid state"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *OutstandingClientBalance*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *OutstandingClientBalance*"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date",
            "description": "The date the most recent payment from the contact was received"
          },
          "last_shared_date": {
            "type": "string",
            "format": "date",
            "description": "The date of the most recently shared bills through the outstanding balance table"
          },
          "newest_issued_bill_due_date": {
            "type": "string",
            "format": "date",
            "description": "The due date of the contact's newest bill"
          },
          "pending_payments_total": {
            "type": "number",
            "format": "double",
            "description": "The sum of all online payments in a pending state on the outstanding bills"
          },
          "reminders_enabled": {
            "type": "boolean",
            "description": "The status of automated reminders for this client"
          },
          "total_outstanding_balance": {
            "type": "number",
            "format": "double",
            "description": "The sum of all bills in the unpaid state"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *OutstandingClientBalance* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *OutstandingClientBalance* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "OutstandingClientBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutstandingClientBalance_base"
          },
          {
            "type": "object",
            "properties": {
              "outstanding_bills": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bill_base"
                },
                "description": "Bill"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "currency": {
                "$ref": "#/components/schemas/Currency_base",
                "description": "Currency"
              }
            }
          }
        ]
      },
      "OutstandingClientBalance_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "OutstandingClientBalance List Response",
            "items": {
              "$ref": "#/components/schemas/OutstandingClientBalance"
            }
          }
        }
      },
      "Payment_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Payment*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Payment*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *Payment*"
          },
          "reference": {
            "type": "string",
            "description": "A reference for the payment"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Total amount paid. The default is 0.00."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date the *Payment* was recorded (as a ISO-8601 date)"
          },
          "source_fund_type": {
            "type": "string",
            "enum": [
              "Client",
              "Matter"
            ],
            "description": "The fund type for *Payment* source"
          },
          "voided_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time the *Payment* was voided (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Payment* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Payment* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Payment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Payment_base"
          },
          {
            "type": "object",
            "properties": {
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "source_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "destination_bank_account": {
                "$ref": "#/components/schemas/BankAccount_base",
                "description": "BankAccount"
              },
              "allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Allocation_base"
                },
                "description": "Allocation"
              }
            }
          }
        ]
      },
      "Damage_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Damage*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount for Damage"
          },
          "damage_type": {
            "type": "string",
            "enum": [
              "special",
              "general",
              "other"
            ],
            "description": "Damage type of the record"
          },
          "description": {
            "type": "string",
            "description": "Description for Damage"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Damage*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Damage* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Damage* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Damage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Damage_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              }
            }
          }
        ]
      },
      "Damage_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Damage"
          }
        }
      },
      "Damage_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Damage List Response",
            "items": {
              "$ref": "#/components/schemas/Damage"
            }
          }
        }
      },
      "MedicalBill_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MedicalBill*"
          },
          "adjustment": {
            "type": "number",
            "format": "double",
            "description": "Adjustment for Medical Bill"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount for Medical Bill"
          },
          "bill_date": {
            "type": "string",
            "format": "date",
            "description": "Bill date for Medical Bill (as a ISO-8601 date)"
          },
          "bill_received_date": {
            "type": "string",
            "format": "date",
            "description": "Bill received date for Medical Bill (as a ISO-8601 date)"
          },
          "damage_type": {
            "type": "string",
            "description": "Damage Type"
          },
          "document_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the document associated with the Medical Bill"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MedicalBill*"
          },
          "name": {
            "type": "string",
            "description": "Name of the Medical Bill"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalBill* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalBill* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MedicalBill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MedicalBill_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "liens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Lien_base"
                },
                "description": "Lien"
              }
            }
          }
        ]
      },
      "MedicalBill_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MedicalBill"
          }
        }
      },
      "MedicalRecord_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MedicalRecord*"
          },
          "document_id": {
            "type": "integer",
            "format": "int64",
            "description": "The id of the document associated with the Medical Record"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MedicalRecord*"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "End date for *MedicalRecord* (as a ISO-8601 date)"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start date for *MedicalRecord* (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalRecord* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalRecord* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MedicalRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MedicalRecord_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              }
            }
          }
        ]
      },
      "MedicalRecord_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MedicalRecord"
          }
        }
      },
      "MedicalRecordsRequest_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MedicalRecordsRequest*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MedicalRecordsRequest*"
          },
          "bills_follow_up_date": {
            "type": "string",
            "format": "date-time",
            "description": "Follow up date for Medical Bills (as a ISO-8601 date)"
          },
          "bills_request_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date for when the Medical Bills were requested (as a ISO-8601 date)"
          },
          "bills_status": {
            "type": "string",
            "enum": [
              "not_yet_requested",
              "requested",
              "received",
              "incomplete",
              "certified"
            ],
            "description": "Medical Bills status"
          },
          "description": {
            "type": "string",
            "description": "Description of the Medical Records Detail"
          },
          "in_treatment": {
            "type": "boolean",
            "description": "Treatment status for Medical Records Detail"
          },
          "records_follow_up_date": {
            "type": "string",
            "format": "date-time",
            "description": "Follow up date for Medical Records (as a ISO-8601 date)"
          },
          "records_request_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date for when the Medical Records were requested (as a ISO-8601 date)"
          },
          "records_status": {
            "type": "string",
            "enum": [
              "not_yet_requested",
              "requested",
              "received",
              "incomplete",
              "certified"
            ],
            "description": "Medical Records status"
          },
          "treatment_end_date": {
            "type": "string",
            "format": "date-time",
            "description": "Treatment end date for Medical Records Detail (as a ISO-8601 date)"
          },
          "treatment_start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Treatment start date for Medical Records Detail (as a ISO-8601 date)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalRecordsRequest* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MedicalRecordsRequest* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MedicalRecordsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MedicalRecordsRequest_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "medical_provider": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "medical_bills": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MedicalBill_base"
                },
                "description": "MedicalBill"
              },
              "medical_records": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MedicalRecord_base"
                },
                "description": "MedicalRecord"
              }
            }
          }
        ]
      },
      "MedicalRecordsRequest_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MedicalRecordsRequest"
          }
        }
      },
      "MedicalRecordsRequest_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "MedicalRecordsRequest List Response",
            "items": {
              "$ref": "#/components/schemas/MedicalRecordsRequest"
            }
          }
        }
      },
      "PhoneNumber_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *PhoneNumber*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PhoneNumber*"
          },
          "number": {
            "type": "string",
            "description": "Contact's Phone Number"
          },
          "name": {
            "type": "string",
            "enum": [
              "Work",
              "Personal",
              "Other"
            ],
            "description": "The type of *PhoneNumber* it is"
          },
          "primary": {
            "type": "boolean",
            "description": "Whether it is default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PhoneNumber* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PhoneNumber* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "PhoneNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PhoneNumber_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PhoneNumber_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "PhoneNumber List Response",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          }
        }
      },
      "PracticeArea_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *PracticeArea*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PracticeArea*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PracticeArea* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PracticeArea* was last updated (as a ISO-8601 timestamp)"
          },
          "name": {
            "type": "string",
            "description": "The name of the *PracticeArea*"
          },
          "category": {
            "type": "string",
            "enum": [
              "administrative",
              "admiralty_and_maritime",
              "anti_trust_and_competition",
              "appellate",
              "banking_and_finance",
              "bankruptcy",
              "business_formation_and_compliance",
              "civil_litigation",
              "civil_rights_and_constitutional",
              "collections_and_debt",
              "commercial_and_sale_of_goods",
              "commercial_litigation",
              "construction",
              "consumer_protection",
              "contracts",
              "corporate_litigation",
              "criminal",
              "disability_and_social_security",
              "education",
              "elder",
              "employment_and_labor",
              "energy_and_environmental",
              "ethics",
              "family",
              "food_and_drug",
              "general_practice",
              "government",
              "healthcare",
              "immigration",
              "in_house_counsel",
              "insurance",
              "intellectual_property",
              "international",
              "juvenile",
              "legal_aid",
              "mediation_and_arbitration",
              "medical_malpractice",
              "military",
              "multi_practice",
              "non_profit_and_pro_bono",
              "other",
              "personal_injury",
              "privacy_and_information_security",
              "private_client",
              "product_liability",
              "real_estate",
              "science_and_technology",
              "securities_and_mergers_and_acquisitions",
              "small_claims",
              "sports_and_entertainment_and_gaming",
              "tax",
              "telecommunications",
              "traffic_offenses",
              "transportation",
              "tribal",
              "trusts",
              "wills_and_estates",
              "workers_compensation"
            ],
            "description": "The practice area category associated with the *PracticeArea*\n"
          },
          "code": {
            "type": "string",
            "description": "The code of the *PracticeArea*"
          }
        }
      },
      "PracticeArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PracticeArea_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PracticeArea_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PracticeArea"
          }
        }
      },
      "PracticeArea_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "PracticeArea List Response",
            "items": {
              "$ref": "#/components/schemas/PracticeArea"
            }
          }
        }
      },
      "Relationship_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Relationship*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Relationship*"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *Relationship*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Relationship* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Relationship* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Relationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Relationship_base"
          },
          {
            "type": "object",
            "properties": {
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "Relationship_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Relationship"
          }
        }
      },
      "Relationship_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Relationship List Response",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            }
          }
        }
      },
      "Reminder_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Reminder*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Reminder*"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "description": "Time in minutes to remind user before the subject"
          },
          "next_delivery_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* will be delivered (as a ISO-8601 timestamp)"
          },
          "state": {
            "type": "string",
            "enum": [
              "initializing",
              "scheduling",
              "rescheduling",
              "scheduled",
              "attempting_delivery",
              "delivery_failed",
              "delivered",
              "delivery_skipped",
              "invalid_user"
            ],
            "description": "The current state of the *Reminder*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Reminder* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Reminder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Reminder_base"
          },
          {
            "type": "object",
            "properties": {
              "notification_method": {
                "$ref": "#/components/schemas/NotificationMethod_base",
                "description": "NotificationMethod"
              },
              "subject": {
                "$ref": "#/components/schemas/PolymorphicObject_base",
                "description": "PolymorphicObject"
              }
            }
          }
        ]
      },
      "Reminder_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Reminder"
          }
        }
      },
      "Reminder_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Reminder List Response",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          }
        }
      },
      "ReportPreset_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ReportPreset*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ReportPreset*"
          },
          "name": {
            "type": "string",
            "description": "A specified name for the report preset"
          },
          "kind": {
            "type": "string",
            "enum": [
              "accounts_receivable",
              "accounts_receivable_aging",
              "bank_account_activity",
              "billing_history",
              "billing_rate",
              "client_activity",
              "client_ledger",
              "clio_payments_deposit",
              "clio_payments_ledger",
              "clio_payments_monthly_statement",
              "clio_payments_sales_tax",
              "clio_payments_transaction",
              "contact_information",
              "disbursement_payment",
              "fee_allocation",
              "general_ledger",
              "grant_matters",
              "invoice_payments_v2",
              "law_society_of_alberta",
              "law_society_of_alberta_al",
              "law_society_of_alberta_bar",
              "law_society_of_alberta_tl",
              "law_society_of_alberta_tt",
              "matter",
              "matter_balance_summary",
              "matter_productivity_by_user",
              "matters_by_responsible_attorney",
              "originating_attorney_revenue",
              "other_revenue",
              "productivity_by_client",
              "productivity_by_user",
              "revenue",
              "task_productivity_by_user",
              "task_progress_by_user",
              "trust_ledger",
              "trust_ledger_nsw",
              "trust_listing",
              "trust_management",
              "work_in_progress"
            ],
            "description": "The kind of report the preset generates"
          },
          "format": {
            "type": "string",
            "enum": [
              "csv",
              "html",
              "json",
              "pdf",
              "xlsx",
              "zip"
            ],
            "description": "The format of the report the preset generates"
          },
          "last_generated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the last generated report from this preset (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReportPreset* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReportPreset* was last updated (as a ISO-8601 timestamp)"
          },
          "category": {
            "type": "string",
            "enum": [
              "billing",
              "client",
              "compliance",
              "financial",
              "matter",
              "online_payments",
              "productivity",
              "revenue",
              "task"
            ],
            "description": "The category of the report the preset generates"
          },
          "options": {
            "type": "string",
            "description": "The report options parameters"
          }
        }
      },
      "ReportPreset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportPreset_base"
          },
          {
            "type": "object",
            "properties": {
              "report_schedule": {
                "$ref": "#/components/schemas/ReportSchedule_base",
                "description": "ReportSchedule"
              }
            }
          }
        ]
      },
      "ReportPreset_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportPreset"
          }
        }
      },
      "ReportPreset_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ReportPreset List Response",
            "items": {
              "$ref": "#/components/schemas/ReportPreset"
            }
          }
        }
      },
      "ReportSchedule_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ReportSchedule*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ReportSchedule*"
          },
          "time_of_day": {
            "type": "string",
            "format": "date-time",
            "description": "What time the Report Schedule is run"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly"
            ],
            "description": "How often the Report Schedule is run"
          },
          "days_of_week": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "If the frequency is weekly, which days of the week the Report Schedule is run. Values are 0 to 6, representing Sunday to Saturday."
          },
          "day_of_month": {
            "type": "integer",
            "format": "int32",
            "description": "If the frequency is monthly, which day of the month the Report Schedule is run. 32 is used to represent the last day of the month."
          },
          "status": {
            "type": "string",
            "enum": [
              "initial",
              "queued",
              "processing",
              "failed",
              "completed"
            ],
            "description": "The status of the Report Schedule"
          },
          "status_updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the status of the Report Schedule was last updated"
          },
          "next_scheduled_date": {
            "type": "string",
            "format": "date-time",
            "description": "The next time the Report Schedule should run"
          },
          "time_zone": {
            "type": "string",
            "description": "Used in conjunction with `time_of_day` to determine when the Report Schedule should run"
          },
          "report_preset_id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier of the Report Preset to use when generating the scheduled report"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReportSchedule* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReportSchedule* was last updated (as a ISO-8601 timestamp)"
          },
          "every_no_of_months": {
            "type": "integer",
            "format": "int32",
            "description": "If the frequency is monthly, how many months between each run of the Report Schedule"
          },
          "effective_from": {
            "type": "string",
            "format": "date",
            "description": "The date the Report Schedule will become enabled (a ISO-8601 date)"
          }
        }
      },
      "ReportSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReportSchedule_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "ReportSchedule_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportSchedule"
          }
        }
      },
      "ReportSchedule_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "ReportSchedule List Response",
            "items": {
              "$ref": "#/components/schemas/ReportSchedule"
            }
          }
        }
      },
      "Report_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Report*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Report*"
          },
          "name": {
            "type": "string",
            "description": "A specified name for the report"
          },
          "state": {
            "type": "string",
            "enum": [
              "not_started",
              "queued",
              "in_progress",
              "failed",
              "completed",
              "empty"
            ],
            "description": "The current state of the report"
          },
          "kind": {
            "type": "string",
            "enum": [
              "accounts_receivable",
              "accounts_receivable_aging",
              "bank_account_activity",
              "billing_history",
              "billing_rate",
              "client_activity",
              "client_ledger",
              "clio_payments_deposit",
              "clio_payments_ledger",
              "clio_payments_monthly_statement",
              "clio_payments_sales_tax",
              "clio_payments_transaction",
              "contact_information",
              "disbursement_payment",
              "fee_allocation",
              "general_ledger",
              "grant_matters",
              "invoice_payments_v2",
              "law_society_of_alberta",
              "law_society_of_alberta_al",
              "law_society_of_alberta_bar",
              "law_society_of_alberta_tl",
              "law_society_of_alberta_tt",
              "matter",
              "matter_balance_summary",
              "matter_productivity_by_user",
              "matters_by_responsible_attorney",
              "originating_attorney_revenue",
              "other_revenue",
              "productivity_by_client",
              "productivity_by_user",
              "revenue",
              "task_productivity_by_user",
              "task_progress_by_user",
              "trust_ledger",
              "trust_ledger_nsw",
              "trust_listing",
              "trust_management",
              "work_in_progress"
            ],
            "description": "The kind of report to generate"
          },
          "format": {
            "type": "string",
            "enum": [
              "csv",
              "html",
              "json",
              "pdf",
              "xlsx",
              "zip"
            ],
            "description": "The requested format of the report"
          },
          "progress": {
            "type": "integer",
            "format": "int32",
            "description": "The integer percentage of how complete the report is."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Report* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Report* was last updated (as a ISO-8601 timestamp)"
          },
          "category": {
            "type": "string",
            "enum": [
              "billing",
              "client",
              "compliance",
              "financial",
              "matter",
              "online_payments",
              "productivity",
              "revenue",
              "task"
            ],
            "description": "The category of the report"
          },
          "source": {
            "type": "string",
            "enum": [
              "reports",
              "presets",
              "scheduled"
            ],
            "description": "The source of the report"
          }
        }
      },
      "Report": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Report_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Report_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Report"
          }
        }
      },
      "Report_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Report List Response",
            "items": {
              "$ref": "#/components/schemas/Report"
            }
          }
        }
      },
      "BillingSetting_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BillingSetting*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BillingSetting*"
          },
          "rounded_duration": {
            "type": "number",
            "format": "float",
            "description": "Rounded equivalent of duration submitted"
          },
          "rounding": {
            "type": "integer",
            "format": "int32",
            "description": "Minute increment for time rounding"
          },
          "use_decimal_rounding": {
            "type": "boolean",
            "description": "Round time to two decimal places"
          },
          "currency": {
            "type": "string",
            "description": "Current user setting of currency"
          },
          "currency_sign": {
            "type": "string",
            "description": "The sign of the current currency"
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "description": "Rate applied for primary tax on invoices using this BillingSetting"
          },
          "tax_name": {
            "type": "string",
            "description": "Name shown for primary tax on invoices using this BillingSetting"
          },
          "apply_tax_by_default": {
            "type": "boolean",
            "description": "Used to determine if primary tax should be applied to invoices by default"
          },
          "time_on_flat_rate_contingency_matters_is_non_billable": {
            "type": "boolean",
            "description": "Used to determine if hourly time entries on flat rate or contingency fee matters should be non-billable by default"
          },
          "use_secondary_tax": {
            "type": "boolean",
            "description": "Used to determine if secondary tax applies to invoices using this BillingSetting"
          },
          "secondary_tax_rate": {
            "type": "number",
            "format": "double",
            "description": "Rate applied for secondary tax on invoices using this BillingSetting"
          },
          "secondary_tax_rule": {
            "type": "string",
            "enum": [
              "Pre",
              "Post"
            ],
            "description": "Used to determine if secondary tax should be applied separately or additionally to primary tax"
          },
          "secondary_tax_name": {
            "type": "string",
            "description": "Name shown for secondary tax on invoices using this BillingSetting"
          },
          "notify_after_bill_created": {
            "type": "boolean",
            "description": "Flag to indicate if users should have the option to notify other users when generating a bill"
          },
          "use_utbms_codes": {
            "type": "boolean",
            "description": "Controls usage of UTBMS codes, allowing creation of coded time entries and expenses"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillingSetting* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillingSetting* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "BillingSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillingSetting_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "BillingSetting_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingSetting"
          }
        }
      },
      "TextSnippet_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TextSnippet*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TextSnippet*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TextSnippet* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TextSnippet* was last updated (as a ISO-8601 timestamp)"
          },
          "snippet": {
            "type": "string",
            "description": "The abbreviation that should be expanded"
          },
          "phrase": {
            "type": "string",
            "description": "The phrase the abbreviation should be expanded to"
          },
          "whole_word": {
            "type": "boolean",
            "description": "Whether the *TextSnippet* abbreviation requires a space after it has been entered to expand to a phrase"
          }
        }
      },
      "TextSnippet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextSnippet_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TextSnippet_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TextSnippet"
          }
        }
      },
      "TextSnippet_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TextSnippet List Response",
            "items": {
              "$ref": "#/components/schemas/TextSnippet"
            }
          }
        }
      },
      "CalendarVisibility_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CalendarVisibility*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CalendarVisibility*"
          },
          "color": {
            "type": "string",
            "enum": [
              "#658CDA",
              "#DA6666",
              "#49B050",
              "#E7804C",
              "#8C66DA",
              "#C4A882",
              "#64AD88",
              "#84AAA5",
              "#56BFB3",
              "#E77399",
              "#BFBF4B",
              "#8BBF3C",
              "#B473B4",
              "#A7A77D",
              "#F2A53D",
              "#658CB3",
              "#BE9494",
              "#A992A9",
              "#8897A5",
              "#93A2BE"
            ],
            "description": "Calendar color"
          },
          "light_color": {
            "type": "string",
            "enum": [
              "#5DA5C7",
              "#F95957",
              "#209412",
              "#FF7715",
              "#DE649D",
              "#FF6B02",
              "#56C4FC",
              "#00B177",
              "#50D19B",
              "#F14A8C",
              "#A3A2A2",
              "#84AB3B",
              "#B091EE",
              "#BD9E69",
              "#F2A000",
              "#00A5CA",
              "#CB5A3D",
              "#959CD0",
              "#B0B0B0",
              "#7BA6CD"
            ],
            "description": "Accent color to complement the main calendar color."
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the *CalendarVisibility* will be shown by default in the Clio Web UI."
          },
          "name": {
            "type": "string",
            "description": "Calendar name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarVisibility* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CalendarVisibility* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CalendarVisibility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CalendarVisibility_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "CalendarVisibility_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CalendarVisibility"
          }
        }
      },
      "CalendarVisibility_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "CalendarVisibility List Response",
            "items": {
              "$ref": "#/components/schemas/CalendarVisibility"
            }
          }
        }
      },
      "Task_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Task*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Task*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Task*"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "in_progress",
              "in_review",
              "complete"
            ],
            "description": "Status of the *Task*. (Note that users without advanced tasks can only have either complete or pending)"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *Task*. This Task supports rich text when setting the field `description_text_type` to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This Task also supports attributes such as `href`, `rel`, `type`, and `target`."
          },
          "description_text_type": {
            "type": "string",
            "enum": [
              "plain_text",
              "rich_text"
            ],
            "description": "The text type of the *Task*"
          },
          "priority": {
            "type": "string",
            "enum": [
              "High",
              "Normal",
              "Low"
            ],
            "description": "The priority of the *Task*"
          },
          "due_at": {
            "type": "string",
            "format": "date",
            "description": "The date the *Task* is due (as a ISO-8601 date)"
          },
          "permission": {
            "type": "string",
            "description": "The permission of the *Task*"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was completed (as a ISO-8601 timestamp)"
          },
          "notify_completion": {
            "type": "boolean",
            "description": "Whether to notify the assigner of the task's completion"
          },
          "statute_of_limitations": {
            "type": "boolean",
            "description": "Whether the task is a statute of limitations"
          },
          "time_estimated": {
            "type": "integer",
            "format": "int32",
            "description": "Time the *Task* should take to complete"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Task* was last updated (as a ISO-8601 timestamp)"
          },
          "time_entries_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of time entries associated with this task"
          }
        }
      },
      "Task": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task_base"
          },
          {
            "type": "object",
            "properties": {
              "time_entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity_base"
                },
                "description": "Activity"
              },
              "task_type": {
                "$ref": "#/components/schemas/TaskType_base",
                "description": "TaskType"
              },
              "assigner": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "assignee": {
                "$ref": "#/components/schemas/Participant",
                "description": "Participant"
              },
              "reminders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reminder_base"
                },
                "description": "Reminder"
              }
            }
          }
        ]
      },
      "Task_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Task_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Task List Response",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskTemplateList_base": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateList* was created (as a ISO-8601 timestamp)"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the *TaskTemplateList*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TaskTemplateList*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplateList*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskTemplateList*"
          },
          "templates_count": {
            "type": "integer",
            "format": "int32",
            "description": "How many task templates exist as an association to the *TaskTemplateList*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateList* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplateList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskTemplateList_base"
          },
          {
            "type": "object",
            "properties": {
              "practice_area": {
                "$ref": "#/components/schemas/PracticeArea_base",
                "description": "PracticeArea"
              },
              "creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "TaskTemplateList_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TaskTemplateList"
          }
        }
      },
      "TaskTemplateList_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskTemplateList List Response",
            "items": {
              "$ref": "#/components/schemas/TaskTemplateList"
            }
          }
        }
      },
      "TaskTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TaskTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplate*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskTemplate*"
          },
          "description": {
            "type": "string",
            "description": "The text body of the *TaskTemplate*. This TaskTemplate supports rich text when setting the field `detail_text_type` to `rich_text`. With supported tags such as `<a>`, `<b>`, `<br>`, `<div>`, `<em>`, `<i>` `<li>`, `<ol>`, `<p>`, `<s>`, `<strong>`, `<u>` and `<ul>`. This TaskTemplate also supports attributes such as `href`, `rel`, `type`, and `target`."
          },
          "description_text_type": {
            "type": "string",
            "enum": [
              "plain_text",
              "rich_text"
            ],
            "description": "The type of text in the description field."
          },
          "priority": {
            "type": "string",
            "enum": [
              "High",
              "Normal",
              "Low"
            ],
            "description": "*TaskTemplate* priority"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the *TaskTemplate* is private."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskTemplate_base"
          },
          {
            "type": "object",
            "properties": {
              "cascading_source": {
                "$ref": "#/components/schemas/CascadingTaskTemplate_base",
                "description": "CascadingTaskTemplate"
              },
              "assignee": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "task_template_list": {
                "$ref": "#/components/schemas/TaskTemplateList_base",
                "description": "TaskTemplateList"
              },
              "task_type": {
                "$ref": "#/components/schemas/TaskType_base",
                "description": "TaskType"
              },
              "template_creator": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              },
              "reminder_templates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReminderTemplate_base"
                },
                "description": "ReminderTemplate"
              }
            }
          }
        ]
      },
      "TaskTemplate_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TaskTemplate"
          }
        }
      },
      "TaskTemplate_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskTemplate List Response",
            "items": {
              "$ref": "#/components/schemas/TaskTemplate"
            }
          }
        }
      },
      "TaskType_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TaskType*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskType*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskType*"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was deleted (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskType* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskType_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TaskType_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TaskType"
          }
        }
      },
      "TaskType_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TaskType List Response",
            "items": {
              "$ref": "#/components/schemas/TaskType"
            }
          }
        }
      },
      "Timer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Timer*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Timer*"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was started (as ISO-8601 timestamp)"
          },
          "elapsed_time": {
            "type": "number",
            "format": "double",
            "description": "How much time has elapsed, in hours, since the timer was started"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Timer* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Timer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Timer_base"
          },
          {
            "type": "object",
            "properties": {
              "activity": {
                "$ref": "#/components/schemas/Activity_base",
                "description": "Activity"
              }
            }
          }
        ]
      },
      "Timer_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Timer"
          }
        }
      },
      "TrustLineItem_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TrustLineItem*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TrustLineItem*"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the *TrustLineItem* (as a ISO-8601 date)"
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "The total amount for the *TrustLineItem*"
          },
          "note": {
            "type": "string",
            "description": "Note for the *TrustLineItem*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustLineItem* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustLineItem* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TrustLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrustLineItem_base"
          },
          {
            "type": "object",
            "properties": {
              "bill": {
                "$ref": "#/components/schemas/Bill_base",
                "description": "Bill"
              },
              "matter": {
                "$ref": "#/components/schemas/Matter_base",
                "description": "Matter"
              },
              "client": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "TrustLineItem_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TrustLineItem"
          }
        }
      },
      "TrustLineItem_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "TrustLineItem List Response",
            "items": {
              "$ref": "#/components/schemas/TrustLineItem"
            }
          }
        }
      },
      "TrustRequest_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TrustRequest*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TrustRequest*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustRequest* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TrustRequest* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TrustRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrustRequest_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "TrustRequest_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TrustRequest"
          }
        }
      },
      "User_base": {
        "type": "object",
        "properties": {
          "account_owner": {
            "type": "boolean",
            "description": "Whether the *User* is the owner of the account"
          },
          "clio_connect": {
            "type": "boolean",
            "description": "Whether the *User* is a Clio Connect user"
          },
          "court_rules_default_attendee": {
            "type": "boolean",
            "description": "Whether the *User* is a default attendee for court rules events"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *User* was created (as a ISO-8601 timestamp)"
          },
          "default_calendar_id": {
            "type": "integer",
            "format": "int64",
            "description": "Default calendar id for *User*."
          },
          "email": {
            "type": "string",
            "description": "The email of the *User*"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *User* is allowed to log in"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *User*"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the *User*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *User*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *User*"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the *User*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *User*"
          },
          "phone_number": {
            "type": "string",
            "description": "The primary phone number for the *User*."
          },
          "rate": {
            "type": "number",
            "format": "float",
            "description": "Default user activity rate for *User*."
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of roles assigned to this *User*"
          },
          "subscription_type": {
            "type": "string",
            "enum": [
              "Attorney",
              "NonAttorney"
            ],
            "description": "The subscription type of the *User*"
          },
          "time_zone": {
            "type": "string",
            "description": "The selected time zone of the *User*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *User* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User_base"
          },
          {
            "type": "object",
            "properties": {
              "default_activity_description": {
                "$ref": "#/components/schemas/ActivityDescription_base",
                "description": "ActivityDescription"
              },
              "notification_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NotificationMethod_base"
                },
                "description": "NotificationMethod"
              },
              "account": {
                "$ref": "#/components/schemas/Account_base",
                "description": "Account"
              },
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              },
              "job_title": {
                "$ref": "#/components/schemas/JobTitle_base",
                "description": "JobTitle"
              },
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group_base"
                },
                "description": "Group"
              }
            }
          }
        ]
      },
      "User_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "User List Response",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UtbmsCode_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *UtbmsCode*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *UtbmsCode*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *UtbmsCode*"
          },
          "code": {
            "type": "string",
            "description": "The UTBMS code for the *UtbmsCode*"
          },
          "description": {
            "type": "string",
            "description": "The UTBMS description for the *UtbmsCode*"
          },
          "type": {
            "type": "string",
            "enum": [
              "UtbmsTask",
              "UtbmsExpense",
              "UtbmsActivity"
            ],
            "description": "The type of the *UtbmsCode*"
          },
          "utbms_set_id": {
            "type": "integer",
            "format": "int64",
            "description": "Set id for the *UtbmsCode*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsCode* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsCode* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "UtbmsCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UtbmsCode_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "UtbmsCode_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UtbmsCode"
          }
        }
      },
      "UtbmsCode_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsCode List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsCode"
            }
          }
        }
      },
      "UtbmsSet_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *UtbmsSet*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *UtbmsSet*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *UtbmsSet*"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *UtbmsSet* is enabled for the current account."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsSet* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *UtbmsSet* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "UtbmsSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UtbmsSet_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "UtbmsSet_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "UtbmsSet List Response",
            "items": {
              "$ref": "#/components/schemas/UtbmsSet"
            }
          }
        }
      },
      "Webhook_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Webhook*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Webhook*"
          },
          "url": {
            "type": "string",
            "description": "The `https` URL to send the data to when the events are triggered"
          },
          "fields": {
            "type": "string",
            "description": "Fields to be included in the webhook request"
          },
          "shared_secret": {
            "type": "string",
            "description": "A shared secret used to create a signature for the payload"
          },
          "model": {
            "type": "string",
            "enum": [
              "activity",
              "bill",
              "calendar_entry",
              "clio_payments_payment",
              "communication",
              "contact",
              "document",
              "folder",
              "matter",
              "task"
            ],
            "description": "What kind of records the webhook is for"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "enabled",
              "suspended"
            ],
            "description": "The current status of the webhook."
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "deleted",
                "matter_opened",
                "matter_pended",
                "matter_closed"
              ]
            },
            "description": "The events your webhook is subscribed to."
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time webhook will expire (as a ISO-8601 timestamp)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Webhook* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Webhook* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Webhook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Webhook_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User_base",
                "description": "User"
              }
            }
          }
        ]
      },
      "Webhook_Show": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Webhook"
          }
        }
      },
      "Webhook_List": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Webhook List Response",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "LinkedFolder_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Folder*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Folder*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was last updated (as a ISO-8601 timestamp)"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Folder* was deleted (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "enum": [
              "Folder"
            ],
            "description": "The type of the *Folder*"
          },
          "locked": {
            "type": "boolean",
            "description": "Whether or not the Folder is locked. Locked Folder cannot be modified"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Folder*"
          },
          "root": {
            "type": "boolean",
            "description": "Whether or not the Folder is the root folder. There is only one root folder per account"
          }
        }
      },
      "MultipartHeader_base": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required HTTP header field name for uploading."
          },
          "value": {
            "type": "string",
            "description": "Required HTTP header field value for uploading."
          }
        }
      },
      "Multipart_base": {
        "type": "object",
        "properties": {
          "part_number": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of a part which defines its position within the document being uploaded."
          },
          "put_url": {
            "type": "string",
            "description": "A signed URL for uploading the file part. It expires in 10 minutes."
          }
        }
      },
      "AccountBalance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *AccountBalance*"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The current balance of the bank account available to the matter or contact"
          },
          "type": {
            "type": "string",
            "description": "The bank account type. Either Operating or Trust"
          },
          "name": {
            "type": "string",
            "description": "The name of the bank account"
          },
          "currency_id": {
            "type": "integer",
            "format": "int64",
            "description": "The currency ID of the bank account"
          }
        }
      },
      "ActivityDescriptionRate_base": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate. Either hourly value or flat rate value"
          },
          "non_billable_amount": {
            "type": "number",
            "format": "double",
            "description": "Monetary value of this rate for non billable activities. Either hourly value or flat rate value"
          },
          "type": {
            "type": "string",
            "enum": [
              "User",
              "FlatRate",
              "Custom"
            ],
            "description": "What kind of rate it is."
          },
          "hierarchy": {
            "type": "string",
            "enum": [
              "Default",
              "Activity",
              "Matter",
              "Client"
            ],
            "description": "What rate hierarchy the rate belongs to."
          }
        }
      },
      "Attendee_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Attendee*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Attendee*"
          },
          "type": {
            "type": "string",
            "enum": [
              "Contact",
              "Calendar"
            ],
            "description": "The class name of the *Attendee*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Attendee*"
          },
          "enabled": {
            "type": "boolean",
            "description": "If the Attendee is a user, represents whether the user is enabled or disabled. Returns null if attendee is a Contact."
          },
          "email": {
            "type": "string",
            "description": "If the Attendee is a User, this is the User's email. If the Attendee is a contact, this is the Contact's primary email address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Attendee* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Attendee* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Avatar_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Avatar*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Avatar*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Avatar* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Avatar* was last updated (as a ISO-8601 timestamp)"
          },
          "url": {
            "type": "string",
            "description": "The URL for the *Avatar*"
          },
          "_destroy": {
            "type": "boolean",
            "description": "Whether to destroy the *Avatar*"
          }
        }
      },
      "BillRecipient_base": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillRecipient* was created (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *BillRecipient*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *BillRecipient*"
          },
          "on_all_matters": {
            "type": "boolean",
            "description": "If the associated contact is a recipient for all of the bill's matters"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *BillRecipient* was updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CascadingTask_base": {
        "type": "object",
        "properties": {}
      },
      "CascadingTaskTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TaskTemplate*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *TaskTemplate*"
          }
        }
      },
      "ClientPortal_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ClientPortal*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ClientPortal*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClientPortal* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClientPortal* was last updated (as a ISO-8601 timestamp)"
          },
          "unread_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of unread count messages for the current user."
          },
          "unread_notifiable_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of unread messages for the current user once their notification settings have been applied."
          }
        }
      },
      "ClioCreator_base": {
        "type": "object",
        "properties": {
          "account_owner": {
            "type": "boolean",
            "description": "Whether the *ClioCreator* is the owner of the account"
          },
          "clio_connect": {
            "type": "boolean",
            "description": "Whether the *ClioCreator* is a Clio Connect user"
          },
          "court_rules_default_attendee": {
            "type": "boolean",
            "description": "Whether the *ClioCreator* is a default attendee for court rules events"
          },
          "default_calendar_id": {
            "type": "integer",
            "format": "int64",
            "description": "Default calendar id for *ClioCreator*."
          },
          "email": {
            "type": "string",
            "description": "The email of the *ClioCreator*"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the *ClioCreator* is allowed to log in"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ClioCreator*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ClioCreator*"
          },
          "type": {
            "type": "string",
            "enum": [
              "ManageUser",
              "ClientUser"
            ],
            "description": "The type of the *ClioCreator*"
          },
          "initials": {
            "type": "string",
            "description": "The initials of the *ClioCreator*"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the *ClioCreator*"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the *ClioCreator*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *ClioCreator*"
          },
          "phone_number": {
            "type": "string",
            "description": "The primary phone number for the *ClioCreator*."
          },
          "rate": {
            "type": "number",
            "format": "float",
            "description": "Default user activity rate for *ClioCreator*."
          },
          "subscription_type": {
            "type": "string",
            "enum": [
              "Attorney",
              "NonAttorney"
            ],
            "description": "The subscription type of the *ClioCreator*"
          },
          "time_zone": {
            "type": "string",
            "description": "The selected time zone of the *ClioCreator*"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of roles assigned to this *ClioCreator*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioCreator* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ClioCreator* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CommunicationEmlFile_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CommunicationEmlFile*"
          }
        }
      },
      "ConferenceMeeting_base": {
        "type": "object",
        "properties": {
          "conference_id": {
            "type": "integer",
            "format": "int64",
            "description": "Third-party provider unique meeting ID"
          },
          "conference_password": {
            "type": "string",
            "description": "Third-party provider meeting password"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConferenceMeeting* was created (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ConferenceMeeting*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ConferenceMeeting*"
          },
          "join_url": {
            "type": "string",
            "description": "URL for participants to join the video conference"
          },
          "type": {
            "type": "string",
            "description": "The type of video conference"
          },
          "source_id": {
            "type": "integer",
            "format": "int64",
            "description": "The external ID of the video conference meeting"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConferenceMeeting* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "ContingencyFee_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ContingencyFee*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ContingencyFee*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ContingencyFee* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ContingencyFee* was last updated (as a ISO-8601 timestamp)"
          },
          "show_contingency_award": {
            "type": "boolean",
            "description": "Whether the *ContingencyFee* is posted or on a bill"
          }
        }
      },
      "ConversationMembership_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ConversationMembership*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ConversationMembership*"
          },
          "read": {
            "type": "boolean",
            "description": "Whether or not the ConversationMembership has been read by the member"
          },
          "archived": {
            "type": "boolean",
            "description": "Whether or not the ConversationMembership has been archived by the member"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMembership* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ConversationMembership* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "PicklistOption_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *PicklistOption*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PicklistOption*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PicklistOption* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PicklistOption* was last updated (as a ISO-8601 timestamp)"
          },
          "option": {
            "type": "string",
            "description": "The value of the *PicklistOption*"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PicklistOption* was deleted (as a ISO-8601 timestamp)"
          }
        }
      },
      "CustomFieldSetAssociation_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CustomFieldSetAssociation*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomFieldSetAssociation*"
          },
          "display_order": {
            "type": "integer",
            "format": "int32",
            "description": "The display position of the *CustomFieldSetAssociation*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSetAssociation* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldSetAssociation* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "CustomFieldValue_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the *CustomFieldValue*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *CustomFieldValue*"
          },
          "field_name": {
            "type": "string",
            "description": "The name of the custom field"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldValue* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *CustomFieldValue* was last updated (as a ISO-8601 timestamp)"
          },
          "field_type": {
            "type": "string",
            "enum": [
              "checkbox",
              "contact",
              "currency",
              "date",
              "time",
              "email",
              "matter",
              "numeric",
              "picklist",
              "text_area",
              "text_line",
              "url"
            ],
            "description": "The type of the *CustomFieldValue*"
          },
          "field_required": {
            "type": "boolean",
            "description": "Whether the *CustomFieldValue* requires a value"
          },
          "field_displayed": {
            "type": "boolean",
            "description": "Whether the *CustomFieldValue* is displayed by default"
          },
          "field_display_order": {
            "type": "integer",
            "format": "int32",
            "description": "The display position of the *CustomFieldValue*"
          },
          "value": {
            "type": "string",
            "description": "The value of the *CustomFieldValue*"
          },
          "soft_deleted": {
            "type": "boolean",
            "description": "Whether the value is associated with a deleted custom field"
          }
        }
      },
      "Discount_base": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double",
            "description": "The rate of the *Discount%*"
          },
          "type": {
            "type": "string",
            "enum": [
              "percentage",
              "money"
            ],
            "description": "The type of *Discount* being applied in your *Discount* rate."
          },
          "note": {
            "type": "string",
            "description": "A note for your *Discount*"
          },
          "early_payment_rate": {
            "type": "integer",
            "format": "int32",
            "description": "The % discount that will be applied if your *Discount* is paid within the early payment period."
          },
          "early_payment_period": {
            "type": "integer",
            "format": "int32",
            "description": "The number of days for your *Discount* period. If your bill is paid within this time, apply your *Discount* rate to the bill."
          }
        }
      },
      "EvergreenRetainer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *EvergreenRetainer*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EvergreenRetainer* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *EvergreenRetainer* was last updated (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *EvergreenRetainer*"
          },
          "minimum_threshold": {
            "type": "number",
            "format": "double",
            "description": "The trust balance threshold for the associated Matter. When the balance falls below the threshold, the retainer's associated recipients (firm users) will receive a notification."
          }
        }
      },
      "ExternalProperty_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ExternalProperty*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ExternalProperty*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ExternalProperty*"
          },
          "value": {
            "type": "string",
            "description": "The value of the *ExternalProperty*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExternalProperty* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ExternalProperty* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "InstantMessenger_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *InstantMessenger*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *InstantMessenger*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *InstantMessenger*"
          },
          "name": {
            "type": "string",
            "enum": [
              "Work",
              "Personal",
              "Other"
            ],
            "description": "The type of *InstantMessenger* it is"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InstantMessenger* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *InstantMessenger* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "JobTitle_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *JobTitle*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *JobTitle*"
          },
          "name": {
            "type": "string",
            "description": "Name of the job title"
          },
          "initials": {
            "type": "string",
            "description": "Initials of the job title"
          }
        }
      },
      "LegalAidUkActivity_base": {
        "type": "object",
        "properties": {
          "activity_sub_category": {
            "type": "string",
            "description": "Activity sub-category"
          },
          "advocacy": {
            "type": "integer",
            "format": "int32",
            "description": "Advocacy"
          },
          "base_rate": {
            "type": "number",
            "format": "float",
            "description": "Base rate"
          },
          "bolt_ons": {
            "type": "string",
            "description": "Bolt ons"
          },
          "bolt_ons_summary": {
            "type": "string",
            "description": "Bolt ons summary"
          },
          "court": {
            "type": "integer",
            "format": "int32",
            "description": "Court"
          },
          "eligible_for_sqm": {
            "type": "boolean",
            "description": "Eligible for SQM"
          },
          "expert": {
            "type": "integer",
            "format": "int32",
            "description": "Expert"
          },
          "form_of_civil_legal_service": {
            "type": "integer",
            "format": "int32",
            "description": "Form of civil legal service"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LegalAidUkActivity*"
          },
          "is_custom_rate": {
            "type": "boolean",
            "description": "Flag to indicate if rate was manually entered by user"
          },
          "json_key": {
            "type": "string",
            "description": "Lookup key that references JSON data"
          },
          "region": {
            "type": "integer",
            "format": "int32",
            "description": "Region"
          },
          "tax_exclusive": {
            "type": "boolean",
            "description": "Flag to indicate if tax is exclusive"
          },
          "uplift": {
            "type": "number",
            "format": "float",
            "description": "Uplift percentage applied to activity rate"
          },
          "user_type": {
            "type": "integer",
            "format": "int32",
            "description": "User type"
          }
        }
      },
      "LegalAidUkBill_base": {
        "type": "object",
        "properties": {
          "additional_travel_payment": {
            "type": "boolean",
            "description": "Additional travel payment, for Legal Aid England and Wales"
          },
          "adjourned_hearing_fee": {
            "type": "string",
            "description": "Adjourned hearing fee"
          },
          "advocacy_costs": {
            "type": "number",
            "format": "double",
            "description": "Advocacy costs"
          },
          "advice_time": {
            "type": "integer",
            "format": "int32",
            "description": "Advice time"
          },
          "bill_type": {
            "type": "integer",
            "format": "int32",
            "description": "Bill type"
          },
          "case_concluded": {
            "type": "string",
            "format": "date",
            "description": "Case concluded"
          },
          "case_stage_level": {
            "type": "integer",
            "format": "int32",
            "description": "Case stage level"
          },
          "cla_exemption_code": {
            "type": "string",
            "description": "CLA exemption code"
          },
          "cla_reference": {
            "type": "string",
            "description": "CLA reference"
          },
          "cmrh_oral": {
            "type": "integer",
            "format": "int32",
            "description": "CMRH oral"
          },
          "cmrh_telephone": {
            "type": "integer",
            "format": "int32",
            "description": "CMRH telephone"
          },
          "cost_of_counsel": {
            "type": "string",
            "description": "Cost of counsel"
          },
          "costs_are_those_of": {
            "type": "integer",
            "format": "int32",
            "description": "Costs are those of"
          },
          "court_location": {
            "type": "string",
            "description": "Court location (HPCDS matters)"
          },
          "date_of_claim": {
            "type": "string",
            "format": "date",
            "description": "Date of claim"
          },
          "designated_accredited_representative": {
            "type": "integer",
            "format": "int32",
            "description": "Designated accredited representative"
          },
          "detention_travel_and_waiting_costs": {
            "type": "string",
            "description": "Detention travel & waiting costs ex VAT"
          },
          "disbursements_vat": {
            "type": "number",
            "format": "double",
            "description": "Disbursements VAT"
          },
          "exceptional_case_funding_reference": {
            "type": "string",
            "description": "Exceptional case funding reference"
          },
          "exemption_criteria_satisfied": {
            "type": "integer",
            "format": "int32",
            "description": "Exemption criteria satisfied"
          },
          "follow_on_work": {
            "type": "integer",
            "format": "int32",
            "description": "Follow on work"
          },
          "ho_interview": {
            "type": "integer",
            "format": "int32",
            "description": "HO interview"
          },
          "ho_ucn": {
            "type": "integer",
            "format": "int32",
            "description": "HO UCN"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LegalAidUkBill*"
          },
          "independent_medical_reports_claimed": {
            "type": "string",
            "description": "Independent medical reports claimed"
          },
          "jr_form_filling": {
            "type": "string",
            "description": "JR/Form filling ex VAT, for Legal Aid England and Wales"
          },
          "maat_id": {
            "type": "string",
            "description": "MAAT ID"
          },
          "meetings_attended": {
            "type": "integer",
            "format": "int32",
            "description": "Meetings attended"
          },
          "mht_ref_no": {
            "type": "string",
            "description": "MHT reference number"
          },
          "net_disbursements": {
            "type": "number",
            "format": "double",
            "description": "Net disbursements"
          },
          "net_profit_costs": {
            "type": "number",
            "format": "double",
            "description": "Net profit cost"
          },
          "niat_disbursement_prior_authority_number": {
            "type": "string",
            "description": "NIAT disbursement prior authority number"
          },
          "number_of_attendances": {
            "type": "integer",
            "format": "int32",
            "description": "Number of attendances"
          },
          "outcome_for_the_client": {
            "type": "integer",
            "format": "int32",
            "description": "Outcome for the client"
          },
          "profit_costs_ex_vat": {
            "type": "integer",
            "format": "int32",
            "description": "Profit costs ex VAT"
          },
          "prior_authority_reference": {
            "type": "string",
            "description": "Prior authority reference number"
          },
          "representation_order_date": {
            "type": "string",
            "format": "date",
            "description": "Representation order date"
          },
          "stage_reached": {
            "type": "integer",
            "format": "int32",
            "description": "Stage reached"
          },
          "substantive_hearing": {
            "type": "integer",
            "format": "int32",
            "description": "Substantive hearing"
          },
          "travel_and_waiting_costs": {
            "type": "number",
            "format": "double",
            "description": "Travel & waiting costs"
          },
          "travel_time": {
            "type": "integer",
            "format": "int32",
            "description": "Travel time"
          },
          "value_of_costs": {
            "type": "string",
            "description": "Value of costs"
          },
          "waiting_time": {
            "type": "integer",
            "format": "int32",
            "description": "Waiting time"
          }
        }
      },
      "LegalAidUkContact_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LegalAidUkContact*"
          },
          "disability": {
            "type": "integer",
            "format": "int32",
            "description": "The disability of the LegalAidUkContact"
          },
          "disability_code": {
            "type": "string",
            "description": "The disability code of the LegalAidUkContact"
          },
          "ethnicity": {
            "type": "integer",
            "format": "int32",
            "description": "The ethnicity of the LegalAidUkContact"
          },
          "ethnicity_title": {
            "type": "string",
            "description": "The ethnicity title of the LegalAidUkContact"
          },
          "financially_eligible": {
            "type": "boolean",
            "description": "The financial eligibility of the LegalAidUkContact"
          },
          "gender": {
            "type": "integer",
            "format": "int32",
            "description": "The gender of the LegalAidUkContact"
          },
          "gender_title": {
            "type": "string",
            "description": "The gender title of the LegalAidUkContact"
          },
          "national_insurance_number": {
            "type": "string",
            "description": "National Insurance Number"
          }
        }
      },
      "LegalAidUkMatter_base": {
        "type": "object",
        "properties": {
          "access_point": {
            "type": "string",
            "description": "Access point"
          },
          "laa_office_number": {
            "type": "string",
            "description": "LAA office number"
          },
          "ait_hearing_centre": {
            "type": "integer",
            "format": "int32",
            "description": "AIT hearing centre"
          },
          "attended_several_hearings_acting_for_multiple_clients": {
            "type": "boolean",
            "description": "Attended several hearings acting for multiple clients"
          },
          "bill_ho_ucn": {
            "type": "string",
            "description": "Bill HO UCN"
          },
          "bill_number_of_attendances": {
            "type": "integer",
            "format": "int32",
            "description": "Bill number of attendances"
          },
          "bill_outcome_for_the_client_code": {
            "type": "integer",
            "format": "int32",
            "description": "Bill outcome for the client code"
          },
          "bill_stage_reached_code": {
            "type": "integer",
            "format": "int32",
            "description": "Bill stage reached code"
          },
          "case_reference": {
            "type": "string",
            "description": "Case reference"
          },
          "case_start_date": {
            "type": "string",
            "format": "date",
            "description": "Case start date"
          },
          "category": {
            "type": "integer",
            "format": "int32",
            "description": "Category"
          },
          "category_as_string": {
            "type": "string",
            "description": "Category as string"
          },
          "certificate_effective_date": {
            "type": "string",
            "format": "date",
            "description": "Certificate effective date"
          },
          "certificate_expiration_date": {
            "type": "string",
            "format": "date",
            "description": "Certificate expiration date"
          },
          "certificate_number": {
            "type": "string",
            "description": "Certificate number"
          },
          "certificate_scope": {
            "type": "string",
            "description": "Certificate scope"
          },
          "certification_type": {
            "type": "integer",
            "format": "int32",
            "description": "Certification type"
          },
          "change_of_solicitor": {
            "type": "boolean",
            "description": "Change of solicitor"
          },
          "client_equal_opportunity_monitoring": {
            "type": "string",
            "description": "Client equal opportunity monitoring"
          },
          "client_type": {
            "type": "integer",
            "format": "int32",
            "description": "Client type"
          },
          "clr_start_date": {
            "type": "string",
            "format": "date",
            "description": "CLR start date"
          },
          "clr_total_profit_costs": {
            "type": "string",
            "description": "CLR total profit costs"
          },
          "cost_limit": {
            "type": "string",
            "description": "Cost limit"
          },
          "counsel": {
            "type": "integer",
            "format": "int32",
            "description": "Counsel"
          },
          "court": {
            "type": "integer",
            "format": "int32",
            "description": "Court"
          },
          "court_id": {
            "type": "integer",
            "format": "int32",
            "description": "Court ID"
          },
          "court_id_code": {
            "type": "string",
            "description": "Court ID code"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LegalAidUkMatter* was created (as a ISO-8601 timestamp)"
          },
          "delivery_location": {
            "type": "string",
            "description": "Delivery location"
          },
          "dscc_number": {
            "type": "string",
            "description": "DSCC number"
          },
          "duty_solicitor": {
            "type": "boolean",
            "description": "Duty solicitor"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *LegalAidUkMatter*"
          },
          "exceptional_case_funding_reference": {
            "type": "string",
            "description": "Exceptional case funding reference"
          },
          "expense_limit": {
            "type": "string",
            "description": "Expense limit"
          },
          "fee_scheme": {
            "type": "integer",
            "format": "int32",
            "description": "Fee scheme"
          },
          "first_conducting_solicitor": {
            "type": "boolean",
            "description": "First conducting solicitor"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *LegalAidUkMatter*"
          },
          "irc_surgery": {
            "type": "string",
            "description": "Irc surgery"
          },
          "legacy_case": {
            "type": "string",
            "description": "Legacy case"
          },
          "legal_representation_number": {
            "type": "string",
            "description": "Legal representation number"
          },
          "lh_total_disbursements": {
            "type": "string",
            "description": "LH total disbursements"
          },
          "lh_start_date": {
            "type": "string",
            "description": "LH start date"
          },
          "lh_total_profit_costs": {
            "type": "string",
            "description": "LH total profit costs"
          },
          "linked_matter_id": {
            "type": "integer",
            "format": "int64",
            "description": "Linked matter ID"
          },
          "local_authority_number": {
            "type": "string",
            "description": "Local authority number"
          },
          "maat_id": {
            "type": "string",
            "description": "MAAT ID"
          },
          "matter_type": {
            "type": "integer",
            "format": "int32",
            "description": "Matter type"
          },
          "matter_type_code": {
            "type": "string",
            "description": "Matter type code"
          },
          "matter_type_1": {
            "type": "integer",
            "format": "int32",
            "description": "Matter type 1"
          },
          "matter_type_1_code": {
            "type": "string",
            "description": "Matter type 1 code"
          },
          "matter_type_1_title": {
            "type": "string",
            "description": "Matter type 1 title"
          },
          "matter_type_2": {
            "type": "integer",
            "format": "int32",
            "description": "Matter type 2"
          },
          "matter_type_2_code": {
            "type": "string",
            "description": "Matter type 2 code"
          },
          "matter_type_2_title": {
            "type": "string",
            "description": "Matter type 2 title"
          },
          "matter_types_combined": {
            "type": "string",
            "description": "Matter types combined"
          },
          "number_of_clients_seen_at_surgery": {
            "type": "integer",
            "format": "int32",
            "description": "Number of clients seen at surgery"
          },
          "number_of_clients": {
            "type": "integer",
            "format": "int32",
            "description": "Number of clients"
          },
          "party": {
            "type": "integer",
            "format": "int32",
            "description": "Party"
          },
          "police_station": {
            "type": "string",
            "description": "Police station"
          },
          "post_transfer_clients_represented": {
            "type": "integer",
            "format": "int32",
            "description": "Post transfer clients represented"
          },
          "postal_application_accepted": {
            "type": "string",
            "description": "Postal application accepted"
          },
          "prior_authority_reference": {
            "type": "string",
            "description": "Priory authority reference"
          },
          "prison_id": {
            "type": "integer",
            "format": "int32",
            "description": "Prison ID"
          },
          "prison_law_prior_approval_number": {
            "type": "string",
            "description": "Prison law prior approval number"
          },
          "procurement_area": {
            "type": "string",
            "description": "Procurement area"
          },
          "region": {
            "type": "integer",
            "format": "int32",
            "description": "Region"
          },
          "related_claims_number": {
            "type": "string",
            "description": "Related claims number"
          },
          "representation_order_date": {
            "type": "string",
            "format": "date",
            "description": "Representation order date"
          },
          "schedule_reference_number": {
            "type": "string",
            "description": "Schedule reference number"
          },
          "scheme_id": {
            "type": "string",
            "description": "Scheme ID"
          },
          "session_type": {
            "type": "integer",
            "format": "int32",
            "description": "Session type"
          },
          "solicitor_type": {
            "type": "integer",
            "format": "int32",
            "description": "Solicitor type"
          },
          "standard_fee_category": {
            "type": "integer",
            "format": "int32",
            "description": "Standard fee category"
          },
          "surgery_clients_resulting_in_a_legal_help_matter_opened": {
            "type": "integer",
            "format": "int32",
            "description": "Surgery clients resulting in a legal help matter opened"
          },
          "surgery_clients": {
            "type": "integer",
            "format": "int32",
            "description": "Surgery clients"
          },
          "surgery_date": {
            "type": "string",
            "format": "date",
            "description": "Surgery date"
          },
          "transfer_date": {
            "type": "string",
            "format": "date",
            "description": "Transfer date"
          },
          "type_of_advice": {
            "type": "integer",
            "format": "int32",
            "description": "Type of advice"
          },
          "type_of_service": {
            "type": "string",
            "description": "Type of service"
          },
          "ucn": {
            "type": "string",
            "description": "UCN"
          },
          "ufn": {
            "type": "string",
            "description": "UFN"
          },
          "undesignated_area_court": {
            "type": "boolean",
            "description": "Undesignated area court"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *LegalAidUkMatter* was last updated (as a ISO-8601 timestamp)"
          },
          "user_type": {
            "type": "integer",
            "format": "int32",
            "description": "User type"
          },
          "youth_court": {
            "type": "boolean",
            "description": "Youth court"
          }
        }
      },
      "LineItemTotals_base": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "Sum of quantity for included line items."
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "Sum of price for included line items."
          },
          "discount_percent": {
            "type": "number",
            "format": "double",
            "description": "Sum of discount as percentage for included line items."
          },
          "total": {
            "type": "number",
            "format": "double",
            "description": "Sum of total for included line items."
          },
          "sub_total": {
            "type": "number",
            "format": "double",
            "description": "Sum of total before discount and tax is applied."
          }
        }
      },
      "MatterBillRecipient_base": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBillRecipient* was created (as a ISO-8601 timestamp)"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterBillRecipient*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterBillRecipient*"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBillRecipient* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterBudget_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterBudget*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *MatterBudget*"
          },
          "budget": {
            "type": "number",
            "format": "double",
            "description": "The amount allocated for the matter."
          },
          "include_expenses": {
            "type": "boolean",
            "description": "Whether the budget includes expenses."
          },
          "notification_threshold": {
            "type": "integer",
            "format": "int32",
            "description": "Percentage of the budget when it starts notifying users. The number must be between 0 and 100."
          },
          "notify_users": {
            "type": "boolean",
            "description": "Whether to notify users when the matter reaches the notification threshold."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBudget* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *MatterBudget* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "MatterCustomRate_base": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "FlatRate",
              "HourlyRate",
              "ContingencyFee"
            ],
            "description": "The type of the *MatterCustomRate*"
          },
          "on_invoice": {
            "type": "boolean",
            "description": "Specifies if the matter's associated activity is posted or on a bill."
          }
        }
      },
      "MatterBalance_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *MatterBalance*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of balance of a matter."
          }
        }
      },
      "NotificationEventSubscriber_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *NotificationEventSubscriber*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *NotificationEventSubscriber*"
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for a User added as a notification event subscriber to the NotificationEventSubscriber"
          },
          "name": {
            "type": "string",
            "description": "The User name added as a notification event subscriber to the NotificationEventSubscriber"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationEventSubscriber* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationEventSubscriber* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "NotificationMethod_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *NotificationMethod*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *NotificationMethod*"
          },
          "type": {
            "type": "string",
            "enum": [
              "Email",
              "Popup",
              "SMS"
            ],
            "description": "Human readable description of the type of notification"
          },
          "email_address": {
            "type": "string",
            "description": "Email address to send the notification to (only for email type)"
          },
          "is_default_email_address": {
            "type": "boolean",
            "description": "A boolean that is returned only on notification method objects that are relevant e.g. Email notification or Alternative Email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationMethod* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *NotificationMethod* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Participant_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Participant*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Participant*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Participant* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Participant* was last updated (as a ISO-8601 timestamp)"
          },
          "type": {
            "type": "string",
            "enum": [
              "Person",
              "Company",
              "User"
            ],
            "description": "The type of the Participant. Person and Company are subtypes of Contact"
          },
          "identifier": {
            "type": "string",
            "description": "A string to identify the *Participant*"
          },
          "secondary_identifier": {
            "type": "string",
            "description": "A secondary string to identify the *Participant*"
          },
          "enabled": {
            "type": "boolean",
            "description": "The enabled state of the *Participant* record. Always 'null' if *Participant* type is Contact"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Participant* record"
          },
          "initials": {
            "type": "string",
            "description": "A  string with the participant initials"
          },
          "job_title_name": {
            "type": "string",
            "description": "the job title name of the participant if they are a firm user and have one"
          }
        }
      },
      "PaymentProfile_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *PaymentProfile*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PaymentProfile*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PaymentProfile* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PaymentProfile* was last updated (as a ISO-8601 timestamp)"
          },
          "billing_setting_id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for the *PaymentProfile"
          },
          "name": {
            "type": "string",
            "description": "The name of the *PaymentProfile"
          },
          "terms": {
            "type": "integer",
            "format": "int32",
            "description": "The total grace period for the *PaymentProfile"
          },
          "discount_rate": {
            "type": "number",
            "format": "float",
            "description": "The early payment discount rate for the *PaymentProfile"
          },
          "discount_period": {
            "type": "integer",
            "format": "int32",
            "description": "The early payment discount period for the *PaymentProfile"
          },
          "interest_rate": {
            "type": "number",
            "format": "float",
            "description": "The interest rate for the *PaymentProfile"
          },
          "interest_period": {
            "type": "integer",
            "format": "int32",
            "description": "The interest period interval for the *PaymentProfile"
          },
          "interest_type": {
            "type": "string",
            "enum": [
              "simple",
              "compound"
            ],
            "description": "The type of interest to be calculated for the *PaymentProfile (Simple or Compound)"
          }
        }
      },
      "Lien_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Lien*"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount for Lien"
          },
          "description": {
            "type": "string",
            "description": "Lien description"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *Lien*"
          },
          "lien_type": {
            "type": "string",
            "enum": [
              "general",
              "medical_payer",
              "medical_provider"
            ],
            "description": "Lien type"
          },
          "mark_as_lien": {
            "type": "boolean",
            "description": "Mark item as Lien"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Lien* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *Lien* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "PolymorphicObject_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *PolymorphicObject*"
          },
          "type": {
            "type": "string",
            "enum": [
              "Task",
              "CalendarEntry",
              "MatterNote",
              "ContactNote",
              "Matter",
              "Contact",
              "User",
              "CreditMemo",
              "Payment"
            ],
            "description": "The type of the *PolymorphicObject*"
          },
          "identifier": {
            "type": "string",
            "description": "A string to identify the *PolymorphicObject*"
          },
          "secondary_identifier": {
            "type": "string",
            "description": "A secondary string to identify the *PolymorphicObject*"
          },
          "tertiary_identifier": {
            "type": "string",
            "description": "A tertiary string to identify the *PolymorphicObject*"
          }
        }
      },
      "ReminderTemplate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ReminderTemplate*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ReminderTemplate*"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "description": "The time in minutes to remind user before the subject."
          },
          "notification_type": {
            "type": "string",
            "enum": [
              "Email",
              "Popup"
            ],
            "description": "The type of method to be notified by"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReminderTemplate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *ReminderTemplate* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "SplitInvoicePayer_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *SplitInvoicePayer*"
          },
          "contact_id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the payer for the split invoice."
          },
          "matter_id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the Matter that has split invoicing enabled."
          },
          "send_to_bill_recipients": {
            "type": "boolean",
            "description": "Boolean to indicate if the sent bills should include bill recipients by default."
          },
          "split_portion": {
            "type": "number",
            "format": "double",
            "description": "The percentage of the bill that the payer is responsible for."
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *SplitInvoicePayer*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *SplitInvoicePayer* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *SplitInvoicePayer* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "SplitInvoice_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *SplitInvoice*"
          },
          "bill_id": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the bill that was split."
          },
          "linked_invoices_display_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Display numbers of all invoices split with this one."
          },
          "linked_invoices_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "IDs of all invoices split with this one."
          },
          "split_connection_id": {
            "type": "string",
            "description": "UUID to determine which invoices are split together."
          },
          "split_portion": {
            "type": "number",
            "format": "double",
            "description": "The percentage of the bill that the payer is responsible for."
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *SplitInvoice*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *SplitInvoice* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *SplitInvoice* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "TaskTemplateListInstace_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *TaskTemplateListInstace*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *TaskTemplateListInstace*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateListInstace* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *TaskTemplateListInstace* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "UnredactedParticipant_base": {
        "type": "object",
        "properties": {}
      },
      "WebSite_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *WebSite*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *WebSite*"
          },
          "address": {
            "type": "string",
            "description": "The address of the *WebSite*"
          },
          "name": {
            "type": "string",
            "enum": [
              "Work",
              "Personal",
              "Twitter",
              "Facebook",
              "LinkedIn",
              "Instant Messenger",
              "Other"
            ],
            "description": "The type of *WebSite* it is"
          },
          "default_web_site": {
            "type": "boolean",
            "description": "Whether it is the default for this contact"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *WebSite* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *WebSite* was last updated (as a ISO-8601 timestamp)"
          }
        }
      },
      "Multipart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Multipart_base"
          },
          {
            "type": "object",
            "properties": {
              "put_headers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MultipartHeader_base"
                },
                "description": "MultipartHeader"
              }
            }
          }
        ]
      },
      "BillRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillRecipient_base"
          },
          {
            "type": "object",
            "properties": {
              "recipient": {
                "$ref": "#/components/schemas/BillRecipient_Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "BillRecipient_Contact_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Contact*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *Contact*"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the Person"
          },
          "middle_name": {
            "type": "string",
            "description": "Middle name of the Person"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the Person"
          },
          "type": {
            "type": "string",
            "enum": [
              "Company",
              "Person"
            ],
            "description": "The type of the *Contact*"
          },
          "primary_email_address": {
            "type": "string",
            "description": "The primary email address associated with this *Contact*."
          }
        }
      },
      "ConversationMembership": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConversationMembership_base"
          },
          {
            "type": "object",
            "properties": {
              "member": {
                "$ref": "#/components/schemas/UnredactedParticipant_base",
                "description": "UnredactedParticipant"
              }
            }
          }
        ]
      },
      "CustomFieldValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldValue_base"
          },
          {
            "type": "object",
            "properties": {
              "custom_field": {
                "$ref": "#/components/schemas/CustomField",
                "description": "CustomField"
              },
              "picklist_option": {
                "$ref": "#/components/schemas/PicklistOption",
                "description": "PicklistOption"
              },
              "matter": {
                "$ref": "#/components/schemas/CustomFieldMatterSelection_base",
                "description": "CustomFieldMatterSelection"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "MatterBillRecipient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterBillRecipient_base"
          },
          {
            "type": "object",
            "properties": {
              "recipient": {
                "$ref": "#/components/schemas/Contact_base",
                "description": "Contact"
              }
            }
          }
        ]
      },
      "MatterCustomRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MatterCustomRate_base"
          },
          {
            "type": "object",
            "properties": {
              "rates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolymorphicCustomRate"
                },
                "description": "PolymorphicCustomRate"
              }
            }
          }
        ]
      },
      "Participant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Participant_base"
          },
          {
            "type": "object",
            "properties": {
              "avatar": {
                "$ref": "#/components/schemas/Avatar_base",
                "description": "Avatar"
              }
            }
          }
        ]
      },
      "CustomFieldMatterSelection_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *CustomFieldMatterSelection*"
          },
          "display_number": {
            "type": "string",
            "description": "The reference and label of the *CustomFieldMatterSelection*. Depending on the account's manual_matter_numbering setting, this is either read only (generated) or customizable."
          }
        }
      },
      "CustomFieldMatterSelection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomFieldMatterSelection_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PicklistOption": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PicklistOption_base"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "PolymorphicCustomRate_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for the custom rate"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *PolymorphicCustomRate*"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PolymorphicCustomRate* was created (as a ISO-8601 timestamp)"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the *PolymorphicCustomRate* was last updated (as a ISO-8601 timestamp)"
          },
          "rate": {
            "type": "number",
            "format": "double",
            "description": "If `custom_rate.type` is `HourlyRate`, it is the dollar amount of the custom rate of the User or Group for the Matter.\n\nIf `custom_rate.type` is `FlatRate`, it is the dollar amount of the custom flat rate for the Matter.\n\nIf `custom_rate.type` is `ContingencyFee`, it is the percentage of the contingency fee awarded to the user for the Matter. The value may also be expressed as string that represents a rational number such as `1/3`.\n\nIf the user does not have sufficient rate visibility, the rates are hidden.\n"
          },
          "award": {
            "type": "number",
            "format": "double",
            "description": "The value of the ContingencyFee award."
          },
          "note": {
            "type": "string",
            "description": "Details about the ContingencyFee award."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the ContingencyFee award."
          }
        }
      },
      "PolymorphicCustomRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PolymorphicCustomRate_base"
          },
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_User_base",
                "description": "User"
              },
              "group": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_Group_base",
                "description": "Group"
              },
              "activity_description": {
                "$ref": "#/components/schemas/PolymorphicCustomRate_ActivityDescription_base",
                "description": "ActivityDescription"
              }
            }
          }
        ]
      },
      "PolymorphicCustomRate_User_base": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether the *User* is allowed to log in"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *User*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *User*"
          },
          "name": {
            "type": "string",
            "description": "The full name of the *User*"
          }
        }
      },
      "PolymorphicCustomRate_Group_base": {
        "type": "object",
        "properties": {
          "etag": {
            "type": "string",
            "description": "ETag for the *Group*"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *Group*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *Group*"
          }
        }
      },
      "PolymorphicCustomRate_ActivityDescription_base": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier for the *ActivityDescription*"
          },
          "etag": {
            "type": "string",
            "description": "ETag for the *ActivityDescription*"
          },
          "name": {
            "type": "string",
            "description": "The name of the *ActivityDescription*"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Activities",
      "description": "Activities (Time Entries and Expense Entries) track work done at a firm. Activities are recorded in Clio and then posted on bills to clients.\n\nTime Entries can be either be hourly-billable or flat-rate. An hourly-billable Time Entry is valued at the billing rate multiplied by the time entered. Examples could be a phone call, or a research session. A flat-rate Time Entry has a set value. Examples could be a visa application, or a contract review.\n\nExpenses are reimbursable costs the firm pays on behalf of a client (for example, postage, copy fees, etc.).\n\n[Support Link](https://help.clio.com/hc/en-us/sections/9036198517915-Activities)\n\n[Activities in Clio](http://app.clio.com/activities)\n"
    },
    {
      "name": "Activity Rates",
      "description": ""
    },
    {
      "name": "Activity Descriptions",
      "description": "Activity Descriptions are custom Time Entry templates. Activity Descriptions help firms expedite their process for recording Time Entries, and ensure that their Time Entry descriptions are consistent.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289744400667-Activity-Categories)\n\n[Activity Descriptions in Clio](https://app.clio.com/nc/#/activity_categories)\n"
    },
    {
      "name": "Allocations",
      "description": "Once a [Payment](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments) or [Credit Note](https://help.clio.com/hc/en-us/articles/9285299888539-Credit-Notes) has been recorded, an Allocation links it to a Bill.\n\nIt's possible for interest Allocations (\"interest\" = \"true\") to not be linked to a Bill. This can happen if the linked interest Bill is deleted (something the system allows.)\n\n[Support Link](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments)\n"
    },
    {
      "name": "Bank Accounts",
      "description": "These accounts are meant to mirror the firm’s accounts at their financial institution. Users can add a bank account to Clio to use with [Clio Payments](https://help.clio.com/hc/articles/9285631748507-Payments-and-Bank-Accounts), and for use as an audit and [reconciliation](https://help.clio.com/hc/en-us/articles/9290138047899) tool.\n\n[Support Link](https://help.clio.com/hc/articles/9285631748507-Payments-and-Bank-Accounts)\n"
    },
    {
      "name": "Bank Transactions",
      "description": ""
    },
    {
      "name": "Bank Transfers",
      "description": ""
    },
    {
      "name": "Bill Themes",
      "description": ""
    },
    {
      "name": "Billable Clients",
      "description": "Users can view all Billable Clients, or clients with outstanding [Bills](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills), on the Billable Clients page, located under the Bills tab.\n"
    },
    {
      "name": "Billable Matters",
      "description": "Users can see all [Matters with outstanding bills](https://help.clio.com/hc/en-us/articles/9286116462747#filter-matters-clio-manage-0-0) attached to them by filtering out all non-billable Matters under the Matters tab.\n\nUsers can [disable billing](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW) for certain Matters. They can still enter Activities on these Matters, but those Activities will not appear in the [Bills page](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills).\n"
    },
    {
      "name": "Bills",
      "description": "Bills are statements of what a user’s client owes for their services over a particular billing period, including legal fees, expenses, and taxes.\n\nUsers customize, preview, edit, and approve bills before sending them to a client.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9285169278747-Generate-Bills)\n"
    },
    {
      "name": "Calendar Entries",
      "description": "Calendar Entries are used to track appointments or deadlines. Users can view Calendar Entries on any Calendar that they have “Viewer” or “Editor” permission for. Users can create Calendar Entries on any Calendar that they have “Editor” permission for.\n### Only supports dates on or after January 01 1900 00:00 UTC\n* If you attempt to create a date before 1900, the year of that date will be pulled forward to 1900 before it's persisted.\n\n### Calendar Update/Deletion Best Practices\n* Prior to updating or deleting a calendar entry, check for recurrence.\n* If the recurrence_rule parameter is not equal to `null`, offer the following 3 options for the update/deletion, as well as the note:\n    1. Only this instance: Update/Delete this event, but leave all future events unchanged.\n    2. All following: Updates/Deletes this event and all the future events.\n    3. All events in the series: Updates/Deletes all events in the series.\n    * Note: If you've modified any future events in this series, those edits will be lost once you make this change.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289905071387-Calendar-Events)\n"
    },
    {
      "name": "Calendar Entry Event Types",
      "description": ""
    },
    {
      "name": "Calendars",
      "description": "Calendars contain Calendar Entries. All Clio accounts contain one firm Calendar (\"AccountCalendar\"), personal Calendars for each user (\"UserCalendar\"), and any number of manually created Calendars (\"AdhocCalendar\"). [Calendar sharing](https://help.clio.com/hc/en-us/articles/9289973325467-Calendar-Sharing-and-Permissions) settings determine if a Calendar is visible to a User, and if that User is able to create or edit Calendar Entries on that Calendar.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290016489883-Calendar-Set-Up-and-Settings)\n"
    },
    {
      "name": "Clio Payments Links",
      "description": ""
    },
    {
      "name": "Clio Payments Payments",
      "description": "Payments allow users to record that funds (from checks, cash, credit cards, etc.) have been transferred from a client to the firm. In order to pay Bills, Payments must be [allocated](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments).\n\n[Support Link](https://help.clio.com/hc/articles/9285641955355-Record-Edit-and-Delete-Payments)\n"
    },
    {
      "name": "Communications",
      "description": "Users can view all logged phone calls and emails under the Communications tab in Clio. This is also where they can use [Clio internal messages](https://help.clio.com/hc/en-us/articles/9125264015259-Internal-Messages).\n\nCommunications can be filtered to show those attached to certain Matters or dates, or to show those with or without time entries.\n\n[Support Link](https://help.clio.com/hc/en-us/sections/9036030931739-Communication)\n"
    },
    {
      "name": "Email Addresses",
      "description": "Email Addresses are email addresses associated with a Contact. This endpoint returns all email addresses associated with a Contact.\n"
    },
    {
      "name": "Phone Numbers",
      "description": "Phone Numbers are phone numbers associated with a Contact. This endpoint returns all phone numbers associated with a Contact.\n"
    },
    {
      "name": "Contacts",
      "description": "All clients, prospective clients, companies, and external co-counsels can be viewed as Contacts under the Contacts tab in Clio Manage.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290486281627-Clio-Manage-Contacts-Overview)\n\n## Contact Name\nWhen creating a contact of type \"Person\" you must provide at least a first name or a last name. This can be done in one of two ways:\n\n1. Providing the name components explicitly (preferred): Using the `first_name` and `last_name` parameters.\n2. Providing the full name (discouraged): Using the `name` parameter, you can provide the person's full name (e.g. \"John Smith\") and Clio will attempt to infer the individual components of the name. If it is unable to do so, you will receive a \"422 Unprocessable Entity: At least one of first name or last name must be provided\" Error.\n\n**We recommend using the individual name fields when possible to avoid any ambiguities.**\n\n## Associations\nA Contact can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.\n\n### Addresses\nCheckout the sample request to update the Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      addresses: [\n        // update\n        { id: 1, name: \"Work\", country: \"Canada\" },\n        // create\n        { name: \"Home\", street: \"1234 Main Street\", city: \"Burnaby\", province: \"BC\", country: \"Canada\", postal_code: \"V1A 1A1\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Custom Field Values\nA CustomFieldValue contains the value of a CustomField for a Contact.\nBelow are some examples of how to create, read, update, and destroy the CustomFieldValues of a Contact:\n#### Create\nNote: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { custom_field: { id: 2 }, value: \"Initial value\" }\n      ]\n    }\n  }\n```\n#### Read\nNote: The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.\nThe `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,display_number,custom_field_values{id,value,custom_field}`\n\nNote: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.\n```json\nRequest\n  GET /api/v4/contacts/1.json?fields=custom_field_values{id,value,custom_field}\n  {\n    data: {\n      custom_field_values: [\n        {\n          id: \"text_line-1\",\n          value: \"Current value\",\n          custom_field: { id: 2 }\n        }\n      ]\n    }\n  }\n```\n#### Update\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value,custom_field}`\n\nNote: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"text_line-1\", value: \"Updated value\" }\n      ]\n    }\n  }\n```\n#### Destroy\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value}`\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"picklist-2\", _destroy: true }\n      ]\n    }\n  }\n```\n\n### Email Addresses\nCheckout the sample request to update the Email Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      email_addresses: [\n        // update\n        { id: 1, name: \"Work\", address: \"demo@clio.com\" },\n        // create\n        { name: \"Home\", address: \"home@clio.com\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Instant Messengers\nCheckout the sample request to update the Instant Messengers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      instant_messengers: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://twitter.com/goclio\" },\n        // create\n        { name: \"Other\", address: \"https://www.facebook.com/GoClio/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Phone Numbers\nCheckout the sample request to update the Phone Numbers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      phone_numbers: [\n        // update\n        { id: 1, name: \"Work\", number: \"123-456-7890\" },\n        // create\n        { name: \"Other\", number: \"000-000-0000\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Web Site\nCheckout the sample request to update the Web Site of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      web_sites: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://help.clio.com/\" },\n        // create\n        { name: \"Other\", address: \"https://www.clio.com/about/careers/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n"
    },
    {
      "name": "Conversation Messages",
      "description": ""
    },
    {
      "name": "Conversations",
      "description": ""
    },
    {
      "name": "Jurisdictions To Triggers",
      "description": "Jurisdictions-to-Triggers calculates the effective dates of related court and agency rules that a lawyer must do for a Trigger. A Trigger is an activity or event which a lawyer or court does in a jurisdiction.\n\nThese activities and events have corresponding deadlines, which the firm must be aware of. These deadlines can be before or after the Trigger. Example Triggers are “Mediation-Session Completed, “Notice of Appeal Filed,” ” or “Settlement Conference.”\n\nJurisdiction Triggers are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\nNote that only account Administrators can add Court Rules jurisdictions.\n"
    },
    {
      "name": "Jurisdictions",
      "description": "There are over 1000 jurisdictions available to choose from when using Court Rules. These jurisdictions contain state, federal, appellate, and bankruptcy courts from across the United States.\n\nJurisdictions are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules)\n\n[Currently Available Jurisdictions](https://www.calendarrules.com/court-list)\n"
    },
    {
      "name": "Matter Dockets",
      "description": "A Matter Docket connects a Matter with a Court Rule (and all of the Calendar Entries associated with the Court Rule). Matter Dockets are viewable on the Matter Edit screen under the Court Rules heading.\n\nMatter Dockets are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules)\n"
    },
    {
      "name": "Service Types",
      "description": "Service Types are used when creating new Court Rules involving the delivery of documents. In order to calculate the correct deadline to send the document, an account will specify their Service Type.\n\nCurrent Service Types;\n* Express mail outside country\n* Mail outside country\n* Personal/hand\n* Mail outside state\n* Electronic service\n* Fax service\n* Express/Overnight\n* Regular mail\n* Electronic service - 0 days\n\nService Types are part of the [Court Rules](https://help.clio.com/hc/en-us/articles/9289840995867-Court-Rules) feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n"
    },
    {
      "name": "Credit Memos",
      "description": "Credit Memos allow users to write off amounts that clients owe on approved Bills. They can be added in two \"ways\": when viewing a Bill, or when making a payment on a Bill.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9285299888539-Credit-Notes)\n"
    },
    {
      "name": "Currencies",
      "description": ""
    },
    {
      "name": "Custom Fields",
      "description": ""
    },
    {
      "name": "Custom Field Sets",
      "description": ""
    },
    {
      "name": "Custom Actions",
      "description": "In Clio, applications can create custom actions in our interface. Links are unique across an application, user, location in the UI (`ui_reference`) and label. When the user clicks on a custom action, Clio will open a new browser tab at the `target_url`.\n\nClio will add a few URL parameters to the `target_url`, including the custom action ID, the ID of the user who clicked the link and the URL of the object(s) which the link was clicked on. The third party application must then look up the relevant OAuth token associated with the user and custom action, and make an authenticated request to the `subject_url`. This request both lets you validate the request was made by who you expected, that they have access to the record and lets you pull down any extra information you may need.\n\nCurrently supported for: Activities, Contacts, Documents and Matters\n\n## Security\n\n### Confirming a User's Action\n\nAs custom actions require an unauthorized GET request, which can be faked, Clio has provided a way to validate that a user has actually performed an action.\n\nWhen a request is sent to the URL specified on the custom action, we will include a `custom_action_nonce` parameter. If you send us back the `custom_action_nonce` in your next request to the API, Clio will use it to validate that the user who clicked the custom action matches your oauth token request. If no match is made, an error will be returned.\n"
    },
    {
      "name": "Damages",
      "description": ""
    },
    {
      "name": "Expense Categories",
      "description": "Expense Categories are custom Expense Entry templates. Expense Categories help firms expedite their process for recording Expense Entries, and ensure that their Expense Entry descriptions are consistent.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289744400667-Activity-Categories#create-an-expense-category-0-2)\n\n[Expense Categories in Clio](https://app.clio.com/nc/#/activity_categories)\n"
    },
    {
      "name": "Grants",
      "description": ""
    },
    {
      "name": "Grant Funding Sources",
      "description": ""
    },
    {
      "name": "Groups",
      "description": "In Clio, [permission levels](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions#user-permissions-clio-manage--0-2) and [Matter permissions](https://help.clio.com/hc/en-us/articles/9286062516123-Matter-Permissions-and-Rates) are controlled using Groups. All accounts contain an “all users” group, as well as individual groups for each user. Admins always have access to all of the account's groups. Users can also create groups manually in order to precisely manage their permissions.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions#user-groups-0-6)\n"
    },
    {
      "name": "Event Metrics",
      "description": "Event metrics keep track of firm users' unread web and mobile [In-app notifications](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3) and unread [Clio Internal Messages](https://help.clio.com/hc/en-us/articles/9125264015259-Internal-Messages)."
    },
    {
      "name": "My Events",
      "description": "In-app notifications are used to notify firm users of important events or changes in Clio, initiated by other firm users. These events are displayed in the **Your firm** tab of the notifications panel."
    },
    {
      "name": "Interest Charges",
      "description": ""
    },
    {
      "name": "Line Items",
      "description": ""
    },
    {
      "name": "Log Entries",
      "description": "Log Entries populate the “Recents” dropdown in the header. The “Recent” section displays the ten Matters and Contacts that the user most recently accessed.\n\nWhen a user accesses a Contact or a Matter, a Log Entry is created.\n"
    },
    {
      "name": "Matters",
      "description": "[Matters](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview) in Clio represent a firm’s cases. All relevant information—Bills, Documents, Time Entries, etc.—are contained in the Matter. A user’s ability to access a Matter is controlled by the [Matter Permission settings](https://help.clio.com/hc/en-us/articles/9286062516123-Matter-Permissions-and-Rates). A user without permission will be unable to view or update a Matter.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview)\n\n[Matters in Clio](http://app.clio.com/matters)\n\n## Associations\nA Matter can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.\n\n### Custom Field Values\nA CustomFieldValue contains the value of a CustomField for a Matter.\nBelow are some examples of how to create, read, update, and destroy the CustomFieldValues of a Matter:\n#### Create\nNote: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { custom_field: { id: 2 }, value: \"Initial value\" }\n      ]\n    }\n  }\n```\n#### Read\nNote:  The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.\nThe `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value,custom_field}`\n\nNote: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.\n```json\nRequest\n  GET /api/v4/matters/1.json?fields=custom_field_values{id,value,custom_field}\n  {\n    data: {\n      custom_field_values: [\n        {\n          id: \"text_line-1\",\n          value: \"Current value\",\n          custom_field: { id: 2 }\n        }\n      ]\n    }\n  }\n```\n#### Update\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value,custom_field}`\n\nNote: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"text_line-1\", value: \"Updated value\" }\n      ]\n    }\n  }\n```\n#### Destroy\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Matter, e.g.: `/api/v4/matters/1?fields=id,display_number,custom_field_values{id,value}`\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"picklist-2\", _destroy: true }\n      ]\n    }\n  }\n```\n\n### Custom Rates\nEach Matter can be set up to be billed on an Hourly basis, Flat Fee basis, or on Contingency.\nTo set the rate type, assign `custom_rate[type]` with one of the values, `\"HourlyRate\"`, `\"FlatRate\"` or `\"ContingencyFee\"`.\nBy default, a Matter is billed on an hourly basis. If the rate type is modified, the persisted rates will be deleted.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289801180187)\n\n#### Hourly Rates\nSelecting the `\"HourlyRate\"` type will record time entries based on the custom hourly rates.\nA custom hourly rate can be associated to a User or a Group.\nCheckout the sample request to update the hourly rates of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"HourlyRate\",\n        rates: [\n          // update a rate for a user\n          { id: 1, rate: 100, user: { id: 1 } },\n          // update a rate for a group\n          { id: 2, rate: 100, group: { id: 1 } },\n          // create a rate for a user\n          { rate: 100, user: { id: 2 } },\n          // create a rate for a group\n          { rate: 100, group: { id: 2 } },\n          // destroy a rate\n          { id: 3, _destroy: true }\n        ]\n      }\n    }\n  }\n```\n\n#### Flat Rate\nSelecting the `\"FlatRate\"` type will bill the matter with a flat fee. A Matter can only have one flat rate.\nFor associated objects, you can specify `_destroy` attribute to delete the rate.\n\nCheckout the sample request to update the flat rate of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"FlatRate\",\n        rates: [\n          {\n            id: 1,\n            user: { id: 1 },\n            activity_description: { id: 1 },\n            rate: 100,\n          }\n        ]\n      }\n    }\n  }\n```\n\n#### Contingency Fee\nSelecting the `\"ContingencyFee\"` type will specify a contingency fee percentage on a Matter and the award or settlement amount won at the completion of the case.\nA Matter can only have one definition of contingency fee.\nFor associated objects, you can specify `_destroy` attribute to delete the rate.\n\nContingency Fee Matters are not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\nCheckout the sample request to update the contingency fee of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      custom_rate: {\n        type: \"ContingencyFee\",\n        rates: [\n          {\n            id: 1,\n            user: { id: 1 },\n            rate: 20,\n          }\n        ]\n      }\n    }\n  }\n```\n### Matter Budget\nClio supports tracking a matter budget directly within a Matter.\nA Matter can only have one matter budget associated with it.\nA matter budget can not be added to flat rate matters.\nFor associated objects, you can specify the `_destroy` attribute to delete the Matter Budget.\n\nMatter Budget are not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\nCheck out the sample request to update the matter budget of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      matter_budget: {\n        budget: 5000000,\n        include_expenses: true,\n        notification_threshold: 100,\n        notify_users: true\n        users: [\n          { id: 1 },\n          // destroy\n          { id: 2, _destroy: true }\n        ]\n      }\n    }\n  }\n```\n### Grant Matter\nClio supports associating a Grant with a Matter, using Grant Matters.\nA Matter can have up to three Grants (and Grant Matters) associated with it.\nFor associated objects, you can specify the `_destroy` attribute to delete Grant Matters.\n\nGrant Matters are only for legal aid US customers\n\nCheckout the sample request to update a Grant Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n    \"grant_matters\": [\n      {\"id\":{{existing_grant_matter_id}}}\n    ]\n    }\n  }\n  ```\n### Relationships\nThere are people and/or companies related to a Matter other than the client of the lawyer. Clio helps define how the entities relate to a Matter.\n\n#### Please be advised that the use of the relationships field below is discouraged. We plan to deprecate it in the future. Please use [Relationships](https://docs.developers.clio.com/api-reference/#tag/Relationships) instead.\n\nCheckout the sample request to update Relationships of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      relationships: [\n        // update\n        { id: 1, contact: { id: 1 }, description: \"Opposing Counsel\" },\n        // create\n        { contact: { id: 2 }, description: \"Judge\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n  }\n```\n\n### Statue Of Limitations\nClio supports to track a Statute of Limitations date directly within a Matter.\nIt can be associated with reminders as a Task.\nA Matter can only have one definition of Statue of Limitations.\nFor associated objects, you can specify `_destroy` attribute to delete the Statue of Limitations.\n\nCheck out the sample request to update the Statue of Limitations and its reminders of a Matter:\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      statue_of_limitations: [\n        due_at: \"20201231\",\n        status: \"open\",\n        reminders: [\n          // update\n          { id: 1, duration_unit: \"days\", duration_value: 1, notification_method: { id: 1 } },\n          // create\n          { duration_unit: \"days\", duration_value: 1, notification_method: { id: 2 } },\n          // destroy\n          { id: 2, _destroy: true }\n        ]\n      ]\n    }\n  }\n```\n\n### Task Template Lists\nClio supports assigning task template lists to a matter from with the same request that\ncreates or updates a matter. Please note that a task template list **can only be\nassigned**. Once a task template list is assigned, it **cannot be modified or destroyed**.\n\nCheckout the sample request to assign a task template list id to a matter:\n\n```json\nRequest\n  PATCH /api/v4/matters/1.json\n  {\n    data: {\n      task_template_list_instances: [\n        {\n          notify_assignees: true,\n          task_template_list: {id: 1},\n        },\n        {\n          notify_assignees: false,\n          task_template_list: {id: 2},\n        }\n      ],\n    }\n  }\n```\n"
    },
    {
      "name": "Clients",
      "description": ""
    },
    {
      "name": "Related Contacts",
      "description": ""
    },
    {
      "name": "Matter Contacts",
      "description": "All clients, prospective clients, companies, and external co-counsels can be viewed as Contacts under the Contacts tab in Clio Manage.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290486281627-Clio-Manage-Contacts-Overview)\n\n## Contact Name\nWhen creating a contact of type \"Person\" you must provide at least a first name or a last name. This can be done in one of two ways:\n\n1. Providing the name components explicitly (preferred): Using the `first_name` and `last_name` parameters.\n2. Providing the full name (discouraged): Using the `name` parameter, you can provide the person's full name (e.g. \"John Smith\") and Clio will attempt to infer the individual components of the name. If it is unable to do so, you will receive a \"422 Unprocessable Entity: At least one of first name or last name must be provided\" Error.\n\n**We recommend using the individual name fields when possible to avoid any ambiguities.**\n\n## Associations\nA Contact can be persisted with its associations in a single request. The followings detail the nested attributes to persist the associations.\n\n### Addresses\nCheckout the sample request to update the Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      addresses: [\n        // update\n        { id: 1, name: \"Work\", country: \"Canada\" },\n        // create\n        { name: \"Home\", street: \"1234 Main Street\", city: \"Burnaby\", province: \"BC\", country: \"Canada\", postal_code: \"V1A 1A1\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Custom Field Values\nA CustomFieldValue contains the value of a CustomField for a Contact.\nBelow are some examples of how to create, read, update, and destroy the CustomFieldValues of a Contact:\n#### Create\nNote: The value of `id` used here is the value of the `id` parameter in the response received when [creating a new CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#create) or one returned in a [query of an existing CustomField](https://docs.developers.clio.com/api-reference/#operation/CustomField#show).\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { custom_field: { id: 2 }, value: \"Initial value\" }\n      ]\n    }\n  }\n```\n#### Read\nNote: The `id` of the CustomFieldValue is a composite value including the custom field type. Use this `id` to update and destroy the CustomFieldValue.\nThe `id` of the associated Custom Field can be found by querying the `custom_field` for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,display_number,custom_field_values{id,value,custom_field}`\n\nNote: The `id` may be `NULL` when the CustomField is displayed by default but has not yet been given a value.\n```json\nRequest\n  GET /api/v4/contacts/1.json?fields=custom_field_values{id,value,custom_field}\n  {\n    data: {\n      custom_field_values: [\n        {\n          id: \"text_line-1\",\n          value: \"Current value\",\n          custom_field: { id: 2 }\n        }\n      ]\n    }\n  }\n```\n#### Update\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value,custom_field}`\n\nNote: If the `id` is `NULL`, you must provide `custom_field{id}` to create the CustomFieldValue and assign a value (see **Create**).\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"text_line-1\", value: \"Updated value\" }\n      ]\n    }\n  }\n```\n#### Destroy\nNote: The value of the CustomFieldValue `id` used here is a composite value and can be found by querying for all CustomFieldValues related to the Contact, e.g.: `/api/v4/contacts/1?fields=id,name,custom_field_values{id,value}`\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      custom_field_values: [\n        { id: \"picklist-2\", _destroy: true }\n      ]\n    }\n  }\n```\n\n### Email Addresses\nCheckout the sample request to update the Email Addresses of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      email_addresses: [\n        // update\n        { id: 1, name: \"Work\", address: \"demo@clio.com\" },\n        // create\n        { name: \"Home\", address: \"home@clio.com\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Instant Messengers\nCheckout the sample request to update the Instant Messengers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      instant_messengers: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://twitter.com/goclio\" },\n        // create\n        { name: \"Other\", address: \"https://www.facebook.com/GoClio/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Phone Numbers\nCheckout the sample request to update the Phone Numbers of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      phone_numbers: [\n        // update\n        { id: 1, name: \"Work\", number: \"123-456-7890\" },\n        // create\n        { name: \"Other\", number: \"000-000-0000\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n\n### Web Site\nCheckout the sample request to update the Web Site of a Contact:\n```json\nRequest\n  PATCH /api/v4/contacts/1.json\n  {\n    data: {\n      web_sites: [\n        // update\n        { id: 1, name: \"Work\", address: \"https://help.clio.com/\" },\n        // create\n        { name: \"Other\", address: \"https://www.clio.com/about/careers/\" },\n        // destroy\n        { id: 2, _destroy: true }\n      ]\n    }\n```\n"
    },
    {
      "name": "Matter Stages",
      "description": ""
    },
    {
      "name": "Medical Records",
      "description": "Medical Records are a subset of Medical Records Details and can be used to keep track of documents, start dates, and end dates.\n\nNote that these endpoints only handle Updating and Destroying a record. Creating records should be handled in the Medical Records Details endpoint.\n"
    },
    {
      "name": "Medical Records Details",
      "description": "Medical Records Details allow you to track requests for medical records and medical bills, track treatment dates, follow up on requests, upload medical files, and track liens and outstanding balances that need to be paid out of the settlement all in one place.\n\nMedical Records Details can be found in the Matters page under the Medical Records sub tab.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/15815962459931-Medical-Records)\n"
    },
    {
      "name": "Medical Bills",
      "description": "Medical Bills are a subset of Medical Records Details and can be used to keep track of documents, bill dates, and liens.\n\nNote that these endpoints only handle Updating and Destroying a record. Creating records should be handled in the Medical Records Details endpoint.\n"
    },
    {
      "name": "Notes",
      "description": "Notes can be added to Matters or Contacts in Clio to record meeting notes, research, or anything else a user might want. The field can hold hundreds of pages, so users can add plenty of information.\n\nNotes can be found either on the Matters or Contacts page under the Notes sub tab.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9285920226075-Clio-Manage-Matters-Overview#h_01GHETXG1D1HBK71VEF9HNSPDM)\n"
    },
    {
      "name": "Outstanding Client Balances",
      "description": ""
    },
    {
      "name": "Practice Areas",
      "description": "The practice area field can be added to Matters and used for filtering purposes, or just for reference. Users can create their own practice areas in their [Firm Preferences settings](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3).\n\n[Support link](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW)\n\n[Practice areas settings](http://app.clio.com/practice_areas)\n"
    },
    {
      "name": "Relationships",
      "description": "Relationships are used on a Matter to track Contacts related to the Matter. Relationships are can be found on the Contacts sub tab of a Matter.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9285959663131-Create-Matters#h_01GEK791XBF1JJ0VYC8BQTG9MW)\n\nRelationships are used on the Matter detail page under the Contacts tab.\n"
    },
    {
      "name": "Reminders",
      "description": "Reminders can be added to Tasks or Calendar Entries. Reminder emails can be sent by a User to themselves, other Users, Clio For Co-Counsel/Clio Connect Contacts, or [any authorized email](https://help.clio.com/hc/en-us/articles/9289861195291-Calendar-Notifications-and-Reminders). An in-Clio pop-up reminder can also be sent by a User to themself.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289861195291-Calendar-Notifications-and-Reminders)\n"
    },
    {
      "name": "Reports",
      "description": ""
    },
    {
      "name": "Report Presets",
      "description": "Report Presets can be created to streamline report generation workflow by saving report option parameters as a Preset.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290078155803-Generate-Reports-Presets-and-History#reports-presets-0-2)\n\n## Creating a Report Preset\n### Options\nWhen creating a Report Preset, the options sent in the request body is dependent on the report kind.\n\nCheck out the sample request to create a Report Preset for the Billing History web report for the current year and grouped by client.\n\n```\nRequest\n  POST /api/v4/report_presets.json\n  {\n    data:\n    { name: \"Current Yr Billing\",\n      kind: \"billing_history\",\n      options: {\n        date_range: \"year\",\n        format: \"html\",\n        group_by: \"client\",\n        start_date: null,\n        end_date: null,\n        kind: \"billing_history\"\n      },\n      format: \"html\"\n    }\n  }\n```\n"
    },
    {
      "name": "Report Schedules",
      "description": "Schedule report generation for an existing Report Preset using Report Schedules. A Report Schedule will generate reports from the specified Preset's report options on a daily, weekly or monthly basis. Once the report has been generated, users will be notified via email.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290078155803-Generate-Reports-Presets-and-History)\n"
    },
    {
      "name": "Billing Settings",
      "description": ""
    },
    {
      "name": "Text Snippets",
      "description": "Clio's Text Snippets feature allows users to create a list of predefined abbreviations for commonly used phrases. For example, a user could configure their settings to have “meeting with client” show up whenever they type “mwc.”\n\nThis feature can be used in various field in Clio, such as the Matter Description, Note Detail, Calendar Entry Description and Task Description fields.\n\nText snippets are created and configured in a user's [personal settings](https://app.clio.com/settings/text_snippets) in Clio Manage.\n\n[Support link](https://help.clio.com/hc/en-us/articles/9290346939547-Set-Up-Clio-Manage#settings-0-3)\n"
    },
    {
      "name": "Tasks",
      "description": "Tasks are used to assign and track work. Users can set priorities, due dates, and add reminders.\n\nTasks can be assigned to firm users as well as Contacts (such as clients or co-counsel).\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9204917906971-Task-Management)\n\n[Tasks in Clio](http://app.clio.com/tasks)\n"
    },
    {
      "name": "Calendar Visibilities",
      "description": ""
    },
    {
      "name": "Task Templates",
      "description": "Task Templates are the individual [Tasks](https://docs.developers.clio.com/api-reference/#tag/Tasks) which comprise a [Task Template List](https://docs.developers.clio.com/api-reference/#tag/Task-Template-Lists).\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9206286672155-Task-Lists)\n"
    },
    {
      "name": "Task Template Lists",
      "description": "With Task Template Lists, users can create groups of [Task Templates](https://docs.developers.clio.com/api-reference/#tag/Task-Templates) for the types of projects they work on most often. Each Task in a list can be given a separate due date in relation to the due dates for other [Tasks](https://docs.developers.clio.com/api-reference/#tag/Tasks) in the list.\n\nUsers can then assign individual tasks on a list to different users, or they can batch assign an entire list.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9206286672155-Task-Lists)\n\n[Task Template Lists in Clio](http://app.clio.com/list_templates)\n"
    },
    {
      "name": "Task Types",
      "description": "Task Types are used to better categorize and filter tasks. This is a simple text field which is limited to 50 characters.\n\nTask Types are part of the Advanced Tasks feature which is not available to all plan types. See [here](https://www.clio.com/pricing/) for feature support across different plans.\n\n[Support Link] (https://help.clio.com/hc/en-us/articles/9205859328923-Task-Types)\n\nUsed within Clio at [Task types](http://app.clio.com/task_types)\n"
    },
    {
      "name": "Timers",
      "description": "Timers are used to track time spent on billable work. They are used with hourly-billable [Time Entries](https://docs.developers.clio.com/api-reference/#tag/Activities).\n\nThe Timer modal is accessed by clicking the timer in the application's header, or by clicking the Timer icon on a Time Entry.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289741706779-Time-Entries#timer-0-2)\n\nUsed within Clio in the timer modal which can be accessed by clicking the timer in the header or on the create/edit Time Entry form.\n"
    },
    {
      "name": "Trust Line Items",
      "description": ""
    },
    {
      "name": "Trust Requests",
      "description": ""
    },
    {
      "name": "Users",
      "description": "A User is anyone with the ability to log in to Clio. This does not include Clio for Co-Counsel/Clio Connect users.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9200279456667-Account-Users-and-Permissions)\n\n## Firm name\nYou can obtain the name of the firm linked to a user by accessing the nested `account` object:\n\n```json\nRequest\n  GET /api/v4/users/who_am_i?fields=account{name}\n```\n"
    },
    {
      "name": "Utbms Sets",
      "description": "[UTBMS codes](https://docs.developers.clio.com/api-reference/#tag/UTBMS-Codes) are divided into code sets. Each set includes Activities relevant to a certain type of law (for example, litigation, bankruptcy, etc.). Clio users can enable one or more of these sets in the [UTBMS settings menu](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes#enable-utbms-codes-0-0). Enabling a UTBMS code set means that users will be able to select Activities from that list when adding Time or Expense Entries into Clio.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes)\n"
    },
    {
      "name": "Utbms Codes",
      "description": "[UTBMS codes](http://utbms.com/) standardize Time and Expense entries across the legal profession. Clio users can enter their Activities using UTBMS codes in order to provide electronic invoices.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9289762435099-UTBMS-Codes)\n"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks are a way of detecting events in Clio without the need for polling.\n\nA webhook can be subscribed to a number of `events` on a model. Some events will be different depending on the chosen model, but (with one exception) *all* models support the following events:\n\n* `created`\n* `updated`\n* `deleted`\n\nTo subscribe to any or all events for a model, [create a webhook record](#operation/Webhook#create) with the URL that you want webhooks to be sent to, a model, and the list of `events` you care about. Whenever an event happens on that model in Clio that the user is authorized to see, an HTTP request will be made to the supplied URL with details about the event. A webhook will automatically expire after a set period of time. If no `expires_at` parameter is provided, the webhook will expire after 3 days. The maximum duration you can set a webhook to expire after is 31 days. If you require longer than that, you can manually extend it by updating the `expires_at` field.\n\n## Supported Models\n\nYour application needs to have the corresponding model OAuth scope when creating or updating a webhook. For example, when creating/updating a folder webhook you need the document Oauth Scope and the webhook Oauth Scope.\nThe list of models supported by webhooks with their corresponding string identifier and ID is presented in the following table:\n\n| Name                  | String Identifier     | ID | Oauth Scope    |\n|-----------------------|-----------------------|:--:|----------------|\n| Matter                | matter                | 1  | Matters        |\n| Activity              | activity              | 2  | Activities     |\n| Bill                  | bill                  | 3  | Billing        |\n| Calendar Entry        | calendar_entry        | 4  | Calendars      |\n| Communication         | communication         | 5  | Communications |\n| Contact               | contact               | 6  | Contacts       |\n| Task                  | task                  | 7  | Tasks          |\n| Document              | document              | 8  | Documents      |\n| Folder                | folder                | 9  | Documents      |\n| Clio Payments payment | clio_payments_payment | 10 | Clio Payments  |\n\n## HTTPS\n\nPlease note that all webhooks MUST be using a url with the `https` scheme. All other schemes, including `http`, will be rejected.\n\n## Specifying Fields in Webhooks\n\nWhen a webhook is sent, the payload will not include the entire object for the record. To select specific fields from the record, you can use the fields parameter when creating the webhook. For example: when creating a webhook listening for new Activity records being created, you can pass the value “id,etag,quantity,price” into the fields parameter. When an Activity is created, the id, etag, quantity, and price fields of the new Activity will be included in the webhook's payload.\n\nFor `update` webhooks, the fields parameter is also used to specify fields that will be “watched” by the webhook. Clio will only send a webhook when at least one of the selected fields has changed on a record.\n\n\n**An important note**\nIf you have never received a webhook for an object before, you will receive a webhook for that object if any fields have changed on that object, including fields you haven't subscribed to.\nFor example: if you create a webhook that subscribes to updates to Activities and provide \"price\" as the field parameter value, the first time an Activity is updated after the Webhook is live will trigger a webhook event – even if the price hasn't changed. Subsequent webhook events for that Activity will only be sent when the price field changes.\n\nNote that there is a hard limit to the size of the `fields` parameter. Any request containing a `fields` size over 1000 characters will be rejected.\n\nTip: Use the minimum set of fields to reduce how frequently your endpoint is hit.\n\n## Model Specific Events\n\nAs mentioned previously, almost all models support the created, updated, and deleted events. Some models also support events specific to their life cycle.\n\n### Clio Payments payments\n\n* `created` is fired whenever a payment is created\n* `updated` is fired whenever a payment is updated\n\n### All other Models\n\n* `created` is fired whenever a model is created\n* `updated` is fired whenever a model is updated\n* `deleted` is fired whenever a model is deleted\n\n### Matters\n\n* `matter_opened` is fired whenever a matter's status changes to \"Open\"\n* `matter_pended` is fired whenever a matter's status changes to \"Pending\"\n* `matter_closed` is fired whenever a matter's status changes to \"Close\"\n\nMore model-specific events will be coming soon.\n\n## Delivery Failure and Retries\n\nA response status code of `2xx`, `3xx`, or `410 GONE` indicate that the action was successfully processed. When a `410 GONE` response is received, the webhook subscription will be disabled. All other responses will be considered unsuccessful, and they will be retried using an exponential backoff strategy.\n\n### Timeouts\n\nClio will wait a short period of time before the request will timeout. We will consider it an unsuccessful response and retry using an exponential backoff strategy. It is important to respond quickly. Failure to do so repeatedly may result in your webhook being disabled. If you need to do lengthy processing with the webhook, it is recommended that you defer the processing until after you have sent a response back to Clio.\n\n## Webhook Security\n\n### Identity Confirmation\n\nTo ensure that a URL actually intends to receive webhooks from Clio, and to ensure that the payloads are actually from Clio, we will share a secret in the initial handshake.\n\nA POST request will be made immediately after a webhook is setup, or whenever the URL changes. This request will have a unique secret in a `X-Hook-Secret` header along with the id of the webhook that was just created. There are two ways of confirming the webhook using this secret:\n\n#### Option 1: Immediate\n\nUpon initially receiving this secret, the endpoint can return a `200 OK` response and include the same secret in a `X-Hook-Secret` header.\n\n#### Option 2: Delayed\n\nAfter receiving the secret, make a PUT request to `/api/v4/webhooks/:webhook_id/activate` with the secret in a `X-Hook-Secret` header.\n\nNote that a webhook will not be enabled until this handshake is successful.\n\n### Confirming Hook Legitimacy\n\nTo prove that Clio is sending all subsequent messages, Clio will sign all of the requests.\n\nClio will compute an [HMAC-SHA256 signature](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code) based on the shared secret and the request body. That signature will then be placed in a `X-Hook-Signature` header. The endpoint can then verify the signature to know if the message is authentic. Verification is as simple as computing an HMAC-SHA256 signature using the shared secret as the key and the request body as the message, and comparing it to the `X-Hook-Signature` header.\n\n## Examples\n\nA Webhook can be created for the Activities model, to trigger on any events and return the id and etag fields:\n  ```http\n    {\n      \"data\":{\n        \"url\":\"https://my/callback/url\",\n        \"fields\":\"id,etag\",\n        \"model\":\"activity\",\n        \"events\":[\"created\",\"deleted\",\"updated\"]\n      }\n    }\n  ```\n\nThis webhook would have the following responses for different actions. It would trigger on any events for the model, and return the id and etag fields for that model, and the event type.\n\nNotes:\n* The `model` field accepts both the string identifier of the model as in the example, or its ID. In the latter case, you would have provided the ID parameter: `\"model\":2`. Refer to [the table listing the models supported by webhooks](#section/Supported-Models) for matching the model name with its ID.\n\n### Create\n\nIn the event of an Activity being created, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"9a103be2201ae758992733a91f02903f\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"created\",\n        \"webhook_id\":1234\n      }\n    }\n  ```\n\n### Update\n\nIn the event of an Activity being updated, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"9d9ef9fb42a505976d90d564c1596f11\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"updated\",\n        \"webhook_id\":1234\n      }\n    }\n  ```\n\n### Delete\n\nIn the event of an Activity being deleted, your URL would receive the following JSON:\n  ```http\n    {\n      \"data\":{\n        \"id\":152,\n        \"etag\":\"\\\"3cc31bfbd6cfc16d3d7123423e437079\\\"\"\n      },\n      \"meta\":{\n        \"event\":\"deleted\",\n        \"webhook_id\":1234\n      }\n    }\n  ```\n"
    },
    {
      "name": "Civil Certificated Rates",
      "description": "This endpoint provides the Legal Aid civil certificated rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.\n\n[Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)\n"
    },
    {
      "name": "Civil Controlled Rates",
      "description": "This endpoint provides the Legal Aid civil controlled rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.\n\n[Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)\n"
    },
    {
      "name": "Criminal Controlled Rates",
      "description": "This endpoint provides the Legal Aid criminal controlled rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.\n\n[Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)\n"
    },
    {
      "name": "Expense Categories",
      "description": "This endpoint provides the Legal Aid expense category rates, which are the prescribed reimbursement rates for legal services provided under the Legal Aid Scheme.\n\n[Support Link](https://help.clio.com/hc/en-150/sections/9591010772379-Legal-Aid)\n"
    },
    {
      "name": "Comments",
      "description": "Comments are short text messages which can be associated with either Documents or Folders.\n\nIf the Comment is created in association with a Document, it will also be associated with the Document's latest Document Version.\n"
    },
    {
      "name": "Document Archives",
      "description": ""
    },
    {
      "name": "Documents",
      "description": "Clio Documents are files uploaded to Clio. Files uploaded to Clio’s document integrations (e.g. Google Drive and Office365) are inaccessible through the API.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#create-upload-and-share-documents-in-clio-manage-0-3)\n\n## Uploading a new document\n[Create a document](#operation/Document%23create) to a parent that can refer to a `Matter` or a `Folder`. Ensure to ask for the fields, `id` and `latest_document_version{uuid,put_url,put_headers}`. The `put_url` is a signed URL with security credentials for uploading the document. The `put_headers` are required request headers for uploading the document. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}\n    \"data\": {\n      \"name\": \"file.jpg\",\n      \"parent\": {\n        \"id\": 1,\n        \"type\": \"Matter\"\n      }\n    }\n\nResponse\n  {\n    \"data\": {\n      \"id\": 1234,\n      \"latest_document_version\": {\n        \"uuid\": \"a51faa2c-859e-4c08-a996-2d0bb385df90\",\n        \"put_url\": \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_key}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e\",\n        \"put_headers\": [\n          {\n            \"name\": \"x-amz-server-side-encryption\",\n            \"value\": \"AES256\"\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"value\": \"image/jpeg\"\n          }\n        ]\n      }\n    }\n  }\n```\nIf the extension is listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) Clio will apply the corresponding content type as determined by the file extension when `content_type` is blank. One of the nine possible content types  `content_type` = “text” / “image” / “audio” / “video” / “application” / “font” / “model” / “message” / “multipart” must be submitted if the file type is uncommon, not listed in the [IANA Media Types registry](https://www.iana.org/assignments/media-types/media-types.xhtml) or not obvious from the extension.\n\n### Upload the document\nUpload the document to the `put_url` with the headers from `puts_headers` given in the response of the previous step. Typically the headers include `Content-Type` and `x-amz-server-side-encryption` to match with the signature in the `put_url`. Check out the example to upload the file content using curl:\n```bash\ncurl -X PUT -T file.jpg\n  -H \"Content-Type: image/jpeg\"\n  -H \"x-amz-server-side-encryption: AES256\"\n  \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/a51faa2c-859e-4c08-a996-2d0bb385df90/file.jpg?X-Amz-Expires=28800&X-Amz-Date=20171024T214532Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_key}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-type%3Bhost%3Bx-amz-server-side-encryption&X-Amz-Signature=afe5000df0972d02884a2219f913bfa62fe2531c75b4fcd1edbcb84d267d2b8e\"\n```\nIf you need MD5 checksum, you should use multipart upload.\n\n### Mark the document as fully-uploaded\nAfter successfully completing the upload, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.\n```json\nRequest\n  PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}\n    \"data\": {\n      \"uuid\": \"a51faa2c-859e-4c08-a996-2d0bb385df90\",\n      \"fully_uploaded\": \"true\"\n    }\n  }\n\nResponse (success)\n  {\n    \"data\": {\n      \"id\": 12345,\n      \"latest_document_version\": {\n          \"fully_uploaded\": true\n      }\n    }\n  }\nResponse (error)\n  {\n    \"error\": {\n      \"type\": \"UploadNotFoundError\",\n      \"message\": \"A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90\"\n    }\n  }\nResponse (timeout)\n  {\n    \"error\": {\n      \"type\": \"UploadTimeoutError\",\n      \"message\": \"A timeout occurred verifying the remote file. Please try the request again.\"\n    }\n  }\n```\nThe file is now visible in Clio documents and is available to the user for download.\n\n## Uploading a new document version\nIt is same as uploading a new document to Clio except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_url,put_headers}\n    \"data\": {\n      \"name\": \"file.jpg\",\n      \"parent\": {\n        \"id\": 1234,\n        \"type\": \"Document\"\n      }\n    }\n  }\n```\nThe remaining steps are same as uploading a new document to Clio.\n\n## Uploading a document using multipart upload\nIn general, when a file reaches 100 MB, you should consider using multipart upload instead of uploading in a single operation. Except the last part, each part should be at least 5 MB. Determine the number of file parts and split the file. Optionally, you may compute the base64-encoded 128-bit MD5 mechanism as an end-to-end integrity check for each file part. To determine the base64 MD5 checksum for a file part, you may use `openssl`. Check out the example to split a big pdf and get the checksums of the file parts:\n```bash\nsplit -b 31457280 big.pdf big.pdf.        # break the file to max. 30MB size\nopenssl md5 -binary big.pdf.aa | base64   # F16pda4G0h4lzH7d2/Jbdw==\nopenssl md5 -binary big.pdf.ab | base64   # cRbxEG//GK9rIze5tdYzcg==\nopenssl md5 -binary big.pdf.ac | base64   # Tck0KKU4SrmSp8hsSCuSYg==\nopenssl md5 -binary big.pdf.ad | base64   # CrIt7lbZzVhMV7JzVTkUvw==\n```\n### Create the document\n[Create a document](#operation/Document%23create), specify `multiparts` for multipart upload, and ensure to ask for the fields, `id`, and `latest_document_version{uuid,multiparts}`. A `multipart` consists of `part_number`, `content_length`, and optional `content_md5`. In the response, a `put_url` is appended to the `multipart`. A `put_url` is a signed URL with security credentials for uploading a file part. The signed URL expires in 8 hours. The API can handle maximum 50 `multiparts` in one request. If the upload is split to more than 50 parts, [make a PUT request](#operation/Document%23update) with `uuid`, `fully_uploaded` as `false`, and another set of `multiparts`. It returns a set of `put_url` for the specified `multiparts`. Check out the example to upload a new document to the matter folder of `Matter` with id `1`:\n```json\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}\n    \"data\": {\n      \"name\": \"big.pdf\",\n      \"parent\": {\n        \"id\": 1,\n        \"type\": \"Matter\"\n      }\n      \"multiparts\": [\n        {\n          \"part_number\": 1,\n          \"content_length\": 31457280,\n          \"content_md5\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n        },\n        {\n          \"part_number\": 2,\n          \"content_length\": 31457280,\n          \"content_md5\": \"cRbxEG//GK9rIze5tdYzcg==\"\n        },\n        {\n          \"part_number\": 3,\n          \"content_length\": 31457280,\n          \"content_md5\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n        },\n        {\n          \"part_number\": 4,\n          \"content_length\": 7316647,\n          \"content_md5\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n        }\n      ]\n    }\n\nResponse\n  {\n    \"data\": {\n      \"id\": 1234,\n      \"latest_document_version\": {\n        \"uuid\": \"eba78724-31e8-4529-b6e2-0f2eef6feeec\",\n        \"put_headers\": [\n            {\n                \"name\": \"x-amz-server-side-encryption\",\n                \"value\": \"AES256\"\n            },\n            {\n                \"name\": \"Content-Type\",\n                \"value\": \"application/pdf\"\n            }\n          ],\n        \"multiparts\": [\n          {\n            \"part_number\": 1,\n            \"put_url\": \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 2,\n            \"put_url\": \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=2&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=47dc30f90202654c13030ccce87e43622bb47e0ad155ae61f6b41e8097803950\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"cRbxEG//GK9rIze5tdYzcg==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 3,\n            \"put_url\": \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=3&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=13ca827a73fb2c50e8062ef7e437cfe9158944d998e2770a2ffcd034be6c2fc7\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"31457280\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n              }\n            ]\n          },\n          {\n            \"part_number\": 4,\n            \"put_url\": \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=4&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=25773f971c4c663b3a87f4d35c5b4c5192c3c999c7efdd69a49bc5bc40677078\",\n            \"put_headers\": [\n              {\n                  \"name\": \"Content-Length\",\n                  \"value\": \"7316647\"\n              },\n              {\n                  \"name\": \"Content-MD5\",\n                  \"value\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n```\n\n### Upload the document\nUpload each multipart to the corresponding `put_url`. You can upload the parts independently and in any order. If transmission of any part fails, you can re-transmit that part without affecting other parts. Make sure to include the headers from `puts_headers`. Typically the headers include `Content-Length`, to match with the signature in the `put_url`. Check out the example using curl:\n```bash\ncurl -X PUT -T big.pdf.part1\n  -H \"Content-Length: 31457280\"\n  \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\"\n```\nIf you use MD5 checksum to validate the integrity of upload, include `Content-MD5` in the header:\n```bash\ncurl -X PUT -T big.pdf.part1\n  -H \"Content-Length: 31457280\"\n  -H \"Content-MD5: F16pda4G0h4lzH7d2/Jbdw==\"\n  \"https://s3.us-west-2.amazonaws.com/iris-production/uploads/document_version/file/eba78724-31e8-4529-b6e2-0f2eef6feeec/big.pdf?uploadId=XG9arnSRfpXVFj4NYCoj66e.iUtET050CFds7GGwb4_J6J26Ysgn_fLCK7pI5KRzJRmBOB_Oa.dle.nn4JLKos_cdRXN6f6Hb0IACkgiN6Wa2XGNv9fZQwgfqmMey1DN&partNumber=1&X-Amz-Expires=28800&X-Amz-Date=20171024T231538Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential={aws_access_token}/20171024/us-west-2/s3/aws4_request&X-Amz-SignedHeaders=content-length%3Bcontent-md5%3Bhost&X-Amz-Signature=f7b3f29e4aee3abfa93fb42a7969557a2a0d305d223dde641c78421b5a6d62e0\"\n```\nIf the file is invalid or the MD5 is invalid, you may get the following response:\n```bash\n<Error>\n  <Code>BadDigest</Code>\n  <Message>The Content-MD5 you specified did not match what we received.</Message>\n  <ExpectedDigest>F16pda4G0h4lzH7d2/Jbdw==</ExpectedDigest>\n  <CalculatedDigest>Tck0KKU4SrmSp8hsSCuSYg==</CalculatedDigest>\n  <RequestId>85918626116672DD</RequestId>\n  <HostId>AbAoiqYqn8tKwS6gxwI3pc4u02B6u6ORa6MPEJH7IYljBweZp0M8L7Lg2AFOvHxdHz5TwlQpkVs=</HostId>\n</Error>\n```\nAfter the issue is corrected, try to upload to the file part to the `put_url` again.\n\n### Mark the document as fully-uploaded\nAfter successfully completing the upload of all the file parts, [mark the document fully uploaded](#operation/Document%23update) with `fully_uploaded` as `true`, and `uuid` given in the first step. Clio will verify if the file is uploaded successfully. If not, it raises `UploadNotFoundError` error. It is possible for the verification to time out, which will return an `UploadTimeoutError` error. When that happens, you will need to retry the request.\n```json\nRequest\n  PATCH api/v4/documents/1234?fields=id,latest_document_version{fully_uploaded}\n    \"data\": {\n      \"uuid\": \"eba78724-31e8-4529-b6e2-0f2eef6feeec\",\n      \"fully_uploaded\": \"true\"\n    }\n  }\n\nResponse (success)\n  {\n    \"data\": {\n      \"id\": 12345,\n      \"latest_document_version\": {\n          \"fully_uploaded\": true\n      }\n    }\n  }\nResponse (error)\n  {\n    \"error\": {\n      \"type\": \"UploadNotFoundError\",\n      \"message\": \"A matching remote file was not found for the file named file.jpg with UUID a51faa2c-859e-4c08-a996-2d0bb385df90\"\n    }\n  }\nResponse (timeout)\n  {\n    \"error\": {\n      \"type\": \"UploadTimeoutError\",\n      \"message\": \"A timeout occurred verifying the remote file. Please try the request again.\"\n    }\n  }\n```\nThe file is now visible in Clio documents and is available to the user for download.\n\n## Uploading a new document version using multipart upload\nIt is same as splitting and uploading a new document using multipart upload, except setting the `parent` to an existing `Document`. Check out the example to upload a new document version for the document with id `1234`:\n```bash\nRequest\n  POST api/v4/documents?fields=id,latest_document_version{uuid,put_headers,multiparts}\n    \"data\": {\n      \"name\": \"big.pdf\",\n      \"parent\": {\n        \"id\": 1234,\n        \"type\": \"Document\"\n      }\n      \"multiparts\": [\n        {\n          \"part_number\": 1,\n          \"content_length\": 31457280,\n          \"content_md5\": \"F16pda4G0h4lzH7d2/Jbdw==\"\n        },\n        {\n          \"part_number\": 2,\n          \"content_length\": 31457280,\n          \"content_md5\": \"cRbxEG//GK9rIze5tdYzcg==\"\n        },\n        {\n          \"part_number\": 3,\n          \"content_length\": 31457280,\n          \"content_md5\": \"Tck0KKU4SrmSp8hsSCuSYg==\"\n        },\n        {\n          \"part_number\": 4,\n          \"content_length\": 7316647,\n          \"content_md5\": \"CrIt7lbZzVhMV7JzVTkUvw==\"\n        }\n      ]\n    }\n```\nThe remaining steps are same as uploading a new document to Clio.\n"
    },
    {
      "name": "Document Versions",
      "description": "Versions contain information about the version history of a document. Versioning allows users to track changes made to a document over time.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#manage-documents-in-clio-manage-0-4)\n"
    },
    {
      "name": "Document Automations",
      "description": "Document Automation uses Document Templates to create standardized documents. Users select a Document Template (that they have created and uploaded) and a Matter to automatically create a document using information from that Matter (such as addresses, account balances, Matter names, etc.).\n\nDocuments made from templates are created using Nintex, an authorized Clio sub-processor. For further information, please refer to Clio’s Privacy Policy and Terms of Service.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290238939163-Document-Templates#create-document-templates-in-clio-manage-0-4)\n"
    },
    {
      "name": "Document Categories",
      "description": "Clio users can add Document Categories to their account to help organize their Documents. When a Document is uploaded or edited, a Document Category can be assigned. Users can filter by Document Category to show all Documents in a certain category across all of the account’s Matters.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#document-categories-in-clio-manage-0-2)\n\n[Document Categories in Clio](http://app.clio.com/document_categories)\n"
    },
    {
      "name": "Document Templates",
      "description": "Document Templates are files used to create standardized documents using Clio’s Document Automation feature. Document Templates contain merge fields, which are used to pull information from Clio into the document being generated by Document Automation.\n\nThe supported formats are doc, docx, ppt, pptx, xls, xlsx, pdf and xml.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290238939163-Document-Templates#create-document-templates-in-clio-manage-0-4)\n"
    },
    {
      "name": "Folders",
      "description": "Files stored in Clio’s Documents section are organized in folders. Folders are automatically generated for new Contacts and Matters. Folders can also be manually created anywhere in the folder structure.\n\n[Support Link](https://help.clio.com/hc/en-us/articles/9290308200091-Generate-Manage-and-Share-Documents#manage-documents-in-clio-manage-0-4)\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Api",
      "tags": [
        "Custom Actions",
        "Webhooks"
      ]
    },
    {
      "name": "Activities",
      "tags": [
        "Activities",
        "Activity Descriptions",
        "Activity Rates",
        "Expense Categories",
        "Timers",
        "Utbms Codes",
        "Utbms Sets"
      ]
    },
    {
      "name": "Accounting",
      "tags": [
        "Bank Accounts",
        "Bank Transactions",
        "Bank Transfers"
      ]
    },
    {
      "name": "Billing",
      "tags": [
        "Bills",
        "Billable Clients",
        "Billable Matters",
        "Bill Themes",
        "Interest Charges",
        "Line Items",
        "Outstanding Client Balances"
      ]
    },
    {
      "name": "Calendars",
      "tags": [
        "Calendars",
        "Calendar Entries",
        "Calendar Entry Event Types",
        "Calendar Visibilities",
        "Reminders"
      ]
    },
    {
      "name": "Clio Payments",
      "tags": [
        "Clio Payments Links",
        "Clio Payments Payments"
      ]
    },
    {
      "name": "Communications",
      "tags": [
        "Communications",
        "Conversations",
        "Conversation Messages"
      ]
    },
    {
      "name": "Contacts",
      "tags": [
        "Contacts",
        "Email Addresses",
        "Phone Numbers",
        "Notes",
        "Log Entries"
      ]
    },
    {
      "name": "Court Rules",
      "tags": [
        "Jurisdictions To Triggers",
        "Jurisdictions",
        "Matter Dockets",
        "Service Types"
      ]
    },
    {
      "name": "Custom Fields",
      "tags": [
        "Custom Fields",
        "Custom Field Sets"
      ]
    },
    {
      "name": "Documents",
      "tags": [
        "Documents",
        "Document Versions",
        "Folders",
        "Document Archives",
        "Document Automations",
        "Document Categories",
        "Document Templates",
        "Comments"
      ]
    },
    {
      "name": "In-app Notifications",
      "tags": [
        "My Events",
        "Event Metrics"
      ]
    },
    {
      "name": "Matters",
      "tags": [
        "Matters",
        "Relationships",
        "Clients",
        "Related Contacts",
        "Matter Contacts",
        "Notes",
        "Practice Areas",
        "Log Entries",
        "Matter Stages",
        "Medical Records Details",
        "Medical Records",
        "Medical Bills",
        "Damages"
      ]
    },
    {
      "name": "Payments",
      "tags": [
        "Allocations",
        "Credit Memos"
      ]
    },
    {
      "name": "Reporting",
      "tags": [
        "Reports",
        "Report Presets",
        "Report Schedules"
      ]
    },
    {
      "name": "Settings",
      "tags": [
        "Text Snippets",
        "Billing Settings",
        "Currencies"
      ]
    },
    {
      "name": "Tasks",
      "tags": [
        "Tasks",
        "Task Templates",
        "Task Template Lists",
        "Task Types"
      ]
    },
    {
      "name": "Trust",
      "tags": [
        "Trust Line Items",
        "Trust Requests"
      ]
    },
    {
      "name": "Users",
      "tags": [
        "Users",
        "Groups"
      ]
    },
    {
      "name": "Legal Aid US",
      "tags": [
        "Grants",
        "Grant Funding Sources"
      ]
    },
    {
      "name": "Legal Aid England & Wales",
      "tags": [
        "Civil Controlled Rates",
        "Civil Certificated Rates",
        "Criminal Controlled Rates",
        "Expense Categories"
      ]
    }
  ]
}